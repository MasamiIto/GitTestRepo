FANUC Robotics SYSTEM R-J3 Controller Software Reference
Manual
MARS35GEN09801E REV. B
Back to Main | Table of Contents | Previous Section | Search
2.2 SYSTEM VARIABLE LISTING
This section lists all system variables in alphabetical order. Table 2-2 lists and describes the
available system variable information. Table 2-3 describes the access rights of system variables.
Table 2-2. System Variable Information
ITEM DESCRIPTION
Minimum Provides the minimum value for the system variable when values differ from
standard values.
Default Provides the default value of the system variable.
Maximum Provides the maximum value for the system variable when values differ from
standard values.
KCL/Data Indicates whether this variable can be accessed from the KCL/Teach Pendant
DATA screen.
Program Indicates whether this variable can be accessed from a KAREL program.
GET/SETVAR Indicates whether this variable can be accessed using the GET_VAR or
SET_VAR built-ins.
Data Type Indicates the type of value associated with the system variable.
Name Provides the name and structure of the system variable.
Description Provides information about the system variable.
Power Up Indicates when a change to the system variable takes effect.
User Interface
Location Indicates where you can view or modify the system variable
Table 2-3. Access Rights for system variables
ACCESS MEANING
NO No access
RO Read only
RW Read and write
FP Field protection; if it is a structure, one of the first three protections will apply.
$AB_INT_CFG STRUCTURE
Name: Allen-Bradley Interface Configuration
Description: This variable structure contains configuration information for the R-J3 style Allen-
Bradley interface.
It is intended to provide information to FANUC Robotics service personnel and the Hot Line. You
cannot modify this information because it is read only. You cannot decode this information
because it is packed into the fields of this structure.
If you suspect problems with the R-J3 style Allen-Bradley interface, FANUC Robotics service
personnel can use the information contained in this structure to help diagnose the problem.
If the R-H style Allen-Bradley interface is installed, this structure is not used and should contain 0
in all fields.
The individual fields within this structure are described below.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$address
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Link Address
Description: This variable is the serial communications link address. Diagnostic information for
FANUC Robotics service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$command
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Command Byte
Description: This variable is the internal board configuration. Diagnostic information for FANUC
Robotics service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$config
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Configuration
Description: This variable is the general board configuration information. Diagnostic information
for FANUC Robotics service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$dip_sw_0
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: DIP Switch 0
Description: The settings of DIP switch 0. Diagnostic information for FANUC Robotics service
personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$dip_sw_1
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: DIP Switch 1
Description: The settings of DIP switch 1. Diagnostic information for FANUC Robotics service
personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$gen_flt
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: General Fault Register
Description: Internal general fault information. Diagnostic information for FANUC Robotics
service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$leds
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: LED State
Description: Status of the LEDs on the interface board. Diagnostic information for FANUC
Robotics service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$rate
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Data Rate
Description: The serial communications data rate. Diagnostic information for FANUC Robotics
service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$ser_flt
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Serial Fault Register
Description: Internal serial fault information. Diagnostic information for FANUC Robotics service
personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AB_INT_CFG.$stat_reg
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Status Register
Description: Internal board status register information. Diagnostic information for FANUC
Robotics service personnel only.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$AC_CRC_ID[1-5]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Small circle id
Description: For internal use only. Do not modify this system variable. When karel program for
setting the small circle servo parameters executes the value is set to the version loaded. Number
of array(5) means number of motion group.
Power Up: Changes to this variable take effect through the robot library or option.
User Interface Location: SYSTEM Variables screen
$AC_CRC _SET[1-5]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: FP GET/SET_VAR: RW Data Type: INTEGER
Name: Small circle set
Description: For internal use only. Do not modify this system variable. When a KAREL program
that sets the small circle servo parameters executes, the value is set to 1 to indicate that the
option was loaded. The number of the array(5) corresponds to the number of the motion group.
Power Up: Changes to this variable take effect through the robot library or option.
User Interface Location: SYSTEM Variables screen
$ANGTOL[9]
Minimum: 0.0 Default: 10.0 Maximum: 360.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Axis Error Tolerance
Description: The maximum tolerance of each joint for the positional comparison operation. Two
positions are considered equal when the difference between each of their respective axis angles
(units: in deg) is less than $ANGTOL.
Power Up:
User Interface Location: SYSTEM Variables screen
$AP_MAXAX
Minimum: 0 Default: 536870912 Maximum: 536870912
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Application Maximum AX
Description: Reserved for Internal use by FANUC Robotics. You cannot change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$AP_PLUGGED
Minimum: 0 Default: 0 Maximum: 4294967295
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Application Used Placeholder
Description: This variable is used by the system to determine which application tools slots are
occupied. You cannot change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$AP_TOTALAX
Minimum: 0 Default: 0 Maximum: 4278190080
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of Tasks in the Application.
Description: Reserved for Internal use by FANUC Robotics. You cannot change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$AP_USENUM[32]
Minimum: 0 Default: 1 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Application Utilization Number
Description: The number of devices that each application uses. Reserved for Internal use by
FANUC Robotics. You cannot change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$APPLICATION[1]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Name of the APPLICATION/TOOL Software
Description: Displays the release time name of the software APPLICATION/TOOL.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$APPLICATION[2]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Version of the APPLICATION/TOOL Software
Description: Displays the release time version of the software APPLICATION/TOOL.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$APPLICATION[3]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Software Serial Number of the APPLICATION/TOOL Software
Description: Displays the software serial number of the software APPLICATION/TOOL.
Typically, this is the FANUC Robotics project number that the robot was ordered against.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$ASCII_SAVE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Program Save Mode
Description: Saves programs in ASCII format when set to TRUE. The default is to save program
in binary format. The ASCII file save format can be edited off-line.
Power Up: No
User Interface Location: SYSTEM Variables screen
$AUTOINIT
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Automatic Initialize
Description: Reserved for Internal use by FANUC Robotics. Do not change this variable.
Modifying this will cause severe problems during a Controlled Start.
Power Up:
User Interface Location: SYSTEM Variables screen
$AUTOMESSAGE
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: AUTO MESSAGE TYPE
Description:
1 : The "force user screen message function" is disabled.
2 : (Default) The "force user screen message function" is enabled.
3 : The "force user screen message function" is enabled only when the teach pendant is
disabled.
Others : As same as 1.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM variable screen and SYSTEM configuration screen (on the
teach pendant)
$AUTORCV_ENB
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Auto error recovery enable parameter for customer condition
Description: This system variable is used by the customer. When the customer condition isn't
satisfied, this parameter should be changed to FALSE using the parameter instruction. This
value should be TRUE if you do not use this system variable.
Power Up: Takes effect by cold start.
User Interface Location: System variables screen
$BACK_EDIT[1] STRUCTURE
Name: Background Edit
Description: Background Edit variable structure. Individual fields within this structure are
described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$backup_name
Minimum: "" Default: "-BACKUP- " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Name of backup program
Description: The name of the backup program is always -BACKUP-.
Power Up:
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$bck_comment
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Background edit comment
Description: The comment of the background edit program(-BCKEDT-).
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen (on the teach pendant)
$BACK_EDIT[1] .$delete_ok
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Background edit internal status information
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$ept_idx
Minimum: 0 Default: 0xFFFF Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Internal program index
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$open_id
Minimum: -32768 Default: -1 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Internal program access ID
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$program
Minimum: "" Default: "-BCKEDT- " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Background edit program name
Description: Used by the system. The current name is always "-BCKEDT-" and cannot be
changed.
Power Up:
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$replacing
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Background edit internal status information
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$src_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Background edit source program name
Description: Contains the name of the program currently being edited.
Power Up:
User Interface Location: SYSTEM Variables screen
$BACK_EDIT[1] .$used_tp_crt
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Background edit internal status information
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$BACKGROUND
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Background edit mode
Description: If TRUE the system will allow Program "A" to be edited while program "B" is
executing. This implies that all TPE functions and select functions such as create and copy can
occur with the teach pendant disabled. Background edit is an optional feature.
Power Up:
User Interface Location: SYSTEM Variables screen
$BACKUP_NAME
Minimum: "" Default: "BACKUP" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Backup name
Description: This is the root name for the .LDC files that will be created from the Controller
Backup feature.
Default is "BACKUP," but you can change this from the SYSTEM Variables screen or the
Controlled Start File Menu by selecting Controller Backup.
This is a six character alphanumeric string. The files that are created (if BACKUP is the root
name) will be BACKUP01.LDC, BACKUP02.LDC, etc.
Power Up: Default is "BACKUP" on first power up.
User Interface Location: SYSTEM Variables screen or the Controlled Start 2 File Menu
$BGE_PROGRAM
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Background Edit Program Mode
Description: If this string is not NIL it contains the name of the program which is being edited in
the background. This variable allows a KAREL program to determine whether a program to be
run will cause an error or not. This is a read only variable written to by the system.
Power Up: No
User Interface Location: SYSTEM Variables screen
$BGE_UNUSEND
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Background edit automatic exit
Description: If set to TRUE the system will automatically exit background mode if a program is
called for editing.
If this is FALSE then the system will stop program execution and display a prompt box.
Power Up:
User Interface Location: SYSTEM Variables screen
$BGEAUTOEXIT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Background Edit Automatic Exit
Description: If set to TRUE the system will automatically exit background mode if a program is
selected for editing.
If this is FALSE then the system will stop program execution and display a prompt box.
Power Up:
User Interface Location: SYSTEM Variables screen
$BLAL_OUT STRUCTURE
Name: Low Voltage Alarm for Pulse Coder Backup Battery Output Function
Description: "BLAL" alarm (severity is WARNING) occurs when the pulse code backup battery
voltage becomes low, and can be used for preventing "BZAL" (Battery zero alarm). The
occurrence of "BLAL" is shown at the teach pendant and it can also be shown as output signals
such as DO[] or BATALM (UOP output signal for CPU board backup battery alarm). The
individual fields within this structure are described below.
NOTE > From KCL, a required dummy field,
$BLAL_OUT.$PS_BATALM_0, is displayed.
Power Up:
User Interface Location: SYSTEM Variables screen
$BLAL_OUT.$batalm_or
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: BATALM signal "OR" switch
Description: This switches the meaning of BATALM UO signal as follows:
If TRUE, the BATALM UO signal is turned on if the main CPU board backup battery alarm, or if a
BLAL or a BZAL occurs. An alarm message on the TP will identify which battery alarm occurred.
If FALSE, the BATALM UO signal is turned on only if the main CPU board backup battery alarm
occurs.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$BLAL_OUT.$do_index
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: BLAL digital output index
Description: If a non-zero value is specified, turn on DO[] of this index when BLAL or BZAL
occurs.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$BLT
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: System Build Date
Description: Displays the date when the system software was made. You cannot change this
variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$BWD_ABORT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Backward Abort
Description: This variable determines whether the program is aborted or paused after a
completion of a BWD execution at the 1st line of the program.
The default value of this variable is FALSE.
If this variable is set to FALSE, the program will pause after it completes a BWD execution at the
1st line of program.
If this variable is set to TRUE, the program will abort after it completes a BWD execution at the
1st line of program if the program is the main program.
Even if the value is TRUE and BWD execution of 1st line is completed, if the program is called
from another program at that time, the called program pauses.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$CD_PAIR STRUCTURE
Name: Coordinated Pair Structure
Description: Coordinated Pair variable structure. Individual fields within this structure are
described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$CD_PAIR.$loc_jog
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Follower fixed orientation.
Description: If this flag is set to true, when leader group jogged, the follower will follow the
leader's location with fixed orientation.
Power Up:
User Interface Location: SYSTEM Variables screen
$CD_PAIR.$ornt_mask
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: LONG
Name: Follower orientation mask.
Description: This variable allows system level people to limit operator capability to Use
"TOGGLE COOR ORNT" function item. This variable has 3 masks: ATTACHED (1) , FIXED (2)
and BOTH (3).
When this variable is set to ATTACHED, the follower orientation will be attached to leader
when jog the leader. The "TOGGLE COOR ORNT" function item is disabled.
When this variable is set to FIXED, the follower orientation will be fixed when jog the leader.
The "TOGGLE COOR ORNT" function item is disabled.
When this variable is set to BOTH, user can use the "TOGGLE COOR ORNT" function item to
switch between ATTACHED and FIX orientation.
Power Up:
User Interface Location: SYSTEM Variables screen. Setup menu of Coord menu in SETUP
menu.
$CD_PAIR.$ldr_frm_num
Minimum: 0 Default: 1 Maximum: MAX_LDR_FRM
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: LONG
Name: Leader Frame number
Description: Indicates which leader frame will be used in LDR Coordinate frame when use
follower group jogging.
Power Up:
User Interface Location: SYSTEM Variables screen. Setup menu of Coord menu in SETUP
menu.
$CD_PAIR.$leader_frm[6]
Minimum: MIN_CD_POINT Default: DEF_CD_POINT Maximum: MAX_ CD_POINT
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: Leader Frame
Description: The frame attached to the leader group. This frame will be used for Follower group
Jogging when the JOG COORD is in LDR coordinate.
Power Up:
User Interface Location: SYSTEM Variables screen. Leader Frame menu of Coord menu in
SETUP menu.
$CD_LDR_FRM[4] STRUCTURE
Name: Leader Frame Structure
Description: Leader Frame variable structure. Individual fields within this structure are described
below.
Power Up:
User Interface Location: SYSTEM Variables screen
$CD_LDR_FRM[1].$origin[6]
Minimum: MIN_CD_POINT Default: DEF_CD_POINT Maximum: MAX_ CD_POINT
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: CD_POINT_T
Name: Leader Frame Origin.
Description: Leader frame origin teaching position. This variable include the teach point of both
the leader group position and the follower group position
Power Up:
User Interface Location: SYSTEM Variables screen. Leader Frame menu of Coord menu of
SETUP menu.
$CD_LDR_FRM[1].$x_pos[6]
Minimum: MIN_CD_POINT Default: DEF_CD_POINT Maximum: MAX_ CD_POINT
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: CD_POINT_T
Name: Leader Frame Origin.
Description: Leader frame x-direction teaching position. This variables include the teach point of
both the leader group position and the follower group position.
Power Up:
User Interface Location: SYSTEM Variables screen. Leader Frame menu of Coord menu of
SETUP menu.
$CD_LDR_FRM[1].$y_pos[6]
Minimum: MIN_CD_POINT Default: DEF_CD_POINT Maximum: MAX_ CD_POINT
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: CD_POINT_T
Name: Leader Frame Origin.
Description: Leader frame y-direction teaching position. This variables include the teach point of
both the leader group position and the follower group position.
Power Up:
User Interface Location: SYSTEM Variables screen. Leader Frame menu of Coord menu of
SETUP menu.
See: $CD_PARAM.$sv_set_enb 0 0 100000000 RW RW RW INTEGER
$CHECKCONFIG
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Check Configuration
Description: Specifies whether the configuration portion of a position is compared in the
positional comparison operation. When set to TRUE, the configuration will be compared. When
set to FALSE, the configuration will not be compared.
Used to determine if the configuration components of the positions should be compared.
$CHECKCONFIG, along with $APPROACHTOL, $LOCTOL, and $ORIENTTOL are used in
conjunction with the relational operator ``>=".
Power Up:
User Interface Location: SYSTEM Variables screen
$CMCFG STRUCTURE
Name: IntelliTrak Configuration System Variable
Description: This set of variables configure the IntelliTrak Feature. Individual fields within this
structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMCFG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug
Description: Reserved for Internal use by FANUC Robotics.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMCFG.$gro up_num
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Group Number
Description: Denotes the motion group number that IntelliTrak feature is applied. The default
value is 1, meaning Group number 1 is selected.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH STRUCTURE
Name: IntelliTrak Schedule System Variable
Description: This set of variables controls the mode of operation of IntelliTrak. Individual fields
within this structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$cmc_type
Minimum: 0 Default: 2 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: IntelliTrak Type Switch
Description: Switch to enable and disable the IntelliTrak algorithm. If it is set to 0, the IntelliTrak
function does not work for all programs on the controller. If you want to enable/disable IntelliTrak
for a specific program, you should set the IntelliTrak schedule number to 0. You can specify this
value using the PROGRAM DETAIL screen.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$cnstnt_path
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Enables/Disables IntelliTrak constant path
Description: This is a switch for controlling the constant path feature.
If set to 0, it means the constant path feature is disabled. Therefore, the path traced will vary with
the speed and speed override changes.
If set to 1 or 2, it means the constant path feature is enabled. The path traced will be maintained
regardless of speed and speed override changes. This adjustment only applies to the program
motions. If set to 1, the ACC override (optional) field in motion statement is ignored. If set to 2,
the ACC override (optional) field in motion statement is active.
If set to 1, the robot moves around all corners with the specified speed. This means the actual
robot path could have a similar profile for all corners because the actual path depends on the
corner speed. If set to 0, the robot moves around all corners using the previous and next path
speeds.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$min_acc_cmc
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum IntelliTrak Acceleration Time
Description: This value determines the minimum acceleration time that IntelliTrak will use when
the $CMSCH[].$nom_acc_ovr is used to reduce the accel times.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$nom_acc_ovr
Minimum: 0.001 Default: 1.0 Maximum: 5.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Intellitrak Global Accel Override
Description: This variable is a global acceleration override that affects the entire program. The
default value is 1.0 which means the default acceleration time is used. A value of 0.8 means
acceleration time is
0.8 * default acceleration.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$nom_pth_spd
Minimum: 0.001 Default: 100. Maximum: 3000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: IntelliTrak Nominal Corner speed
Description: This variable affects corner rounding for the entire program. Its value indicates the
corner rounding achieved when speed is set to this value. The default value is 100, which means
corner rounding is achieved if the travel speed is set to 100 mm/sec. Note that this speed is
independent of program speed.
If CMSCH[1].$cnstnt_path is 1, the robot moves around all corners using this speed. The taught
speed of the previous or next paths are ignored. The robot decelerates or accelerates the
specified speed before the corner and accelerates or decelerates the taught speed of the next
path at the end of the corner.
By keeping this value constant, the same corner rounding will be maintained regardless of
program speed.
By changing this value, corner rounding of the entire program will change. To reduce corner
rounding, reduce this value. To increase corner rounding, increase it.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$orient_type
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: IntelliTrak Orientation Control Type
Description: This system variable allows the user to choose between a one-angle method of
orientation control (used prior to V3.06PA) or the standard orientation control method. The
standard orientation control method is the same as that which is used when IntelliTrak is
disabled.
If set to 0, then the standard orientation control method is used. If set to 1, chosen then the oneangle
orientation method is used.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$rot_speed_lim
Minimum: 0.001 Default: 120.0 Maximum: 500.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: IntelliTrak Rotational Speed Limit
Description: Determines the maximum rotational speed for orientation control when IntelliTrak is
enabled.
Power Up:
User Interface Location: SYSTEM Variables screen
$CMSCH[1].$warnmessenb
Minimum: 0 Default: 0 Maximum: 4
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: IntelliTrak Warning Message Enable
Description: This variable allows you to enable/disable posting of the IntelliTrak error message
"Can't blend corner."
If set to 1, then error message will be posted. If set to 0, then error message will not be posted.
Power Up:
User Interface Location: SYSTEM Variables screen
$CN_DEBUG
Minimum: 0 Default: 0 Maximum: 1024
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Continuous Turn Debug
Description: The Continuous Turn Debug variable is a bit-mapped variable that is used to locate
potential problems in continuous turn. It is not a user variable and should never be set to any
value other than 0. Any other values will slow and possibly stop robot motion.
Power Up: Takes effect on next motion.
User Interface Location: Set only from KCL or the SYSTEM Variables screen.
See Also: Contact your FANUC Robotics technical representative if it is absolutely necessary to
change this variable.
$CN_USR_GRP STRUCTURE
Name: Continuous Turn User Group Variables
Description: This is an array of group-specific variables for continuous turn.
Power Up:
User Interface Location: Accessible from KAREL, KCL or the SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J3 Controller Continuous Turn User Guide for more
information
$CN_USR_GRP[1].$cn_grp_acc
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Continuous Turn Group Acceleration.
Description: This variable controls the acceleration time of the robot and continuous turn axis. It
is provided for advanced users who wish to change how the robot acceleration is coordinated
with the continuous turn axis. When FALSE (default), the group axes' (robot and extended axes)
acceleration time is independent of the continuous turn axis acceleration time. When TRUE, then
all the axes in the group accelerate at the same rate as the continuous turn axis. This is in effect
only during continuous rotation.
Power Up: After changing this variable, the user must perform a COLD start to take effect.
User Interface Location: Can be changed from a KAREL program, KCL, or the SYSTEM
Variables screen
See Also:FANUC Robotics SYSTEM R-J3 Controller Continuous Turn User Guide for more
information
$CN_USR_GRP[1].$cn_same _dir
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Continuous Turn rotate in Same Direction.
Description: This variable controls the direction of rotation of the continuous turn axis when
ending continuous rotation. If TRUE (default), then when ending continuous rotation, the
continuous turn axis will stop and then rotate in the same direction as continuous rotation until it
reaches the taught position. If FALSE, then the continuous turn axis will stop and move the
shortest rotational distance to the taught position, even if this means rotating in a direction that
this opposite to the continuous rotation.
Power Up: After you change this variable, you must perform a COLD start for the new value to
take effect.
User Interface Location: Can be changed from a KAREL program, KCL, or the SYSTEM
Variables screen
See Also:FANUC Robotics SYSTEM R-J3 Controller Continuous Turn User Guide for more
information
$CN_USR_GRP[1].$cn_step_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Continuous turn step enable
Description: 1 = continuous turn axis will not move during step mode. 0 = continuous turn axis
will move to the taught position during step mode.
Power Up: Takes effect immediately.
User Interface Location: SYSTEM Variables screen
$CN_USR_GRP[1].$cn_turn_no
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Continuous Turn Continuous Rotation Turn Number.
Description: This variable indicates the number of complete turns the continuous turn axis has
made since the start of continuous rotation. It is reset to zero at the start of each motion that
contains continuous rotation and will maintain the value even after motion ends.
Power Up: This is a read-only variable.
User Interface Location: Can be read from a KAREL program, KCL, or SYSTEM Variables
screen.
See Also:FANUC Robotics SYSTEM R-J3 Controller Continuous Turn User Guide for more
information.
$CONT_R_NUM
Minimum: 0 Default: 32 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Contact report register number
Description: This variable is valid only when $pause_ncont is set to TRUE. This variable
specifies a register that is set to 0 when the robot makes a contact with a part. The register is set
to 1 if the robot does not touch a part.
Power Up: Takes effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: $SEARCH_DIST, $PAUSE_NCONT
$CORE[1]
Minimum: "" Default: " " Maximum: " "
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Name and Version Application and Core Software
Description: Displays the release time name and version of the software application and core.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$CORE[2]
Minimum: "" Default: " " Maximum: " "
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Reserved
Description: Reserved for future use.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$CRCFG STRUCTURE
Name: Circular softpart configuration data structure.
Description: This data structure shows the circular motion configuration and its dependency
with other motion options. Individual fields within this structure are defined below.
Power Up:
User Interface Location:
$CRCFG.$cr_enhanced
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Enhanced circular motion
Description: Internal use only.
Power Up:
User Interface Location:
$CRC FG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug flag
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$group_mask
Minimum: 0 Default: 1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: group mask
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$lgorn_az_sp
Minimum: 0 Default: 120 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Azimuth and Spin Angles.
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$lgorn_dbg
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Debug flag
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$lgorn_eltol
Minimum: 0 Default: 30 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Elevation Tolerance.
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$lgorn_enbl
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Enable Large Orientation Detection for Small Circle.
Description: To enable detection of large orientation change in small circle (default is disabled).
When enabled, and during single step mode, if large orientation change is detected for small
circular moves, system will automatically slow down, and post the following warning: MOTN-319
CRC large orient change. If the large orientation is what the user intends to teach, no further
action is required. However, if the orientation change is not desirable, user has more opportunity
to stop the robot by releasing SHFT key, or press the HOLD key. The circular points can then be
retaught.
Power Up: Changes to this variables take effect after the controller is turned off then on.
User Interface Location: SYSTEM variable screen.
$CRCFG.$lgorn_meth
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Detection Method
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$lgorn_rad
Minimum: 0 Default: 200 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Small Circle Radius in mm.
Description: This specifies the maximum radius of a small circle. Detection of large orientation
change will only be performed for circles whose radius is less than this radius. Default is 30mm.
Power Up: Change to this variables takes effect after the controller is turned off then on.
User Interface Location:
$CRCFG.$mb_conflict
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: sid_mb conflict mask
Description: Internal use only.
Power Up:
User Interface Location:
$CRCFG.$mb_required
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: sid_mb required mask
Description: Internal use only.
Power Up:
User Interface Location:
$CRT_DEFPROG
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: CRT Default Program
Description: Identifies the default program name used by KCL commands that do not specify a
program name. It is also the default program that is used on the CRT/KB screens.
Power Up: No
User Interface Location: SYSTEM Variables screen, set using KCL's SET DEF command or
the CRT's SELECT menu.
$CRT_INUSER
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: CRT is in USER Menu
Description: $CRT_INUSER indicates the USER menu is displayed on the CRT/KB. It is used in
conjunction with $CRT_LCKUSER to tell a program when the CRT menu has been locked to the
USER menu.
$CRT_INUSER automatically is set to TRUE whenever the USER menu is displayed on the
CRT/KB.
Power Up: No
User Interface Location: SYSTEM Variables screen
$CRT_KEY_TBL[256]
Minimum: 0 Default: 255 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Table used to Map CRT/KB Input Keys
Description: This table maps keyboard keys into teach pendant equivalent keycodes. This
allows you to map a simple keyboard to perform CRT/KB functions. NOTE: The system software
automatically maps VT-compatible function key sequences into a single character. Key
sequences which are not VT-compatible will generate multiple input characters.
The default setting for this table will map VT-220 and FANUC Robotics' built-in CRT/KB function
keys to teach pendant equivalent function keys.
If a KAREL program uses the READ_KB built-in for the CRT/KB, "raw" CRT/KB characters will
be returned. In order to retrieve teach pendant equivalent key codes, the KAREL program must
perform the following function:
tp_key = $CRT_KEY_TBL[crt_key + 1]
This mapping allows a KAREL program to use common software between the CRT/KB and teach
pendant devices.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: READ_KB built-in in the FANUC Robotics SYSTEM R-J3 Controller KAREL
Reference Manual
$CRT_LCKUSER
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: CRT Lock USER Menu
Description: Setting $CRT_LCKUSER = TRUE will allow the KAREL program specified by
$CRT_DEFPROG to lock the USER menu on the CRT while the program is running. When the
USER menu is locked, all function keys are accessible by the program. However, they will be
blank unless the program writes to them using the CRTFUNC predefined FILE variable.
While the USER menu is locked, the MENUS hardkey will not be active. Therefore, the program
has control over which menu is being displayed.
If $CRT_LCKUSER is FALSE, or the program is paused or aborted, all system-defined function
keys will be displayed and active.
If the USER menu is not being displayed when $CRT_LCKUSER is first set to TRUE, the lock
function does not take effect until you select the USER menu on the CRT/KB. The value of
$CRT_INUSER indicates whether or not the USER menu has been selected.
Power Up: No
User Interface Location: SYSTEM Variables screen
$CRT_USESTAT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: CRT Status Line in USER Menu
Description: Setting $CRT_USESTAT = TRUE will allow the KAREL program specified by
$CRT_DEFPROG to control the status line in the USER menu on the CRT while the program is
running. The status line will be blank unless the program writes to it using the CRTSTATUS
predefined FILE variable.
If $CRT_USESTAT is FALSE or the program is paused or aborted, the system-defined status line
will be displayed and updated.
Power Up: No
User Interface Location: SYSTEM Variables screen
$CSTOP
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Cycle-stop Flag
Description: Intended for use in applications to signal the robot to exit from production mode at
the end of the current cycle.
Power Up:
User Interface Location: SYSTEM Variables screen
$CT_CURSCRN[4] STRUCTURE
Name: Current CRT Menu Descriptor
Description: Contains information for the KAREL user to determine which menu is currently
being displayed on the CRT/KB.
$CT_CURSCRN[1]: Used during normal operations
$CT_CURSCRN[2]: Used during normal operations when $CT_QUICKMEN = TRUE
$CT_CURSCRN[3]: Not used
$CT_CURSCRN[4]: Not used
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: TP_CURSCRN for equivalent information on the teach pendant
$CT_CURSCRN[1].$scrn_id
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current CRT/KB Menu Number
Description: Indicates the menu number of the current menu. Some softparts can handle
multiple menus (for example the SYSTEM System Variable menu and the KAREL Variable menu
are the same softpart id). The menu number determines the current menu of a given softpart.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: FORCE_SPMENU built-in in the FA NUC Robotics SYSTEM R-J3 Controller KAREL
Reference Manual which lists the constants for each menu.
$CT_CURSCRN [1].$sp_id
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Softpart identifier of the current menu
Description: This softpart identifier can be used to determine exactly which softpart menu is
being displayed on the CRT/KB at any time.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: FORCE_SPMENU built-in in the FA NUC Robotics SYSTEM R-J3 Controller KAREL
Reference Manual which lists the constants for each menu.
$CT_QUICKMEN
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: CRT/KB Quick Menu
Description: Determines whether the user interface displays the quick menu or the full menu
when the MENUS key is pressed. When set to TRUE the quick menu will be displayed. When set
to FALSE, the full menu is displayed. The quick menu can list up to 16 menus.
Power Up:
User Interface Location: FCTN key - QUICK/FULL MENUS, SYSTEM Variables screen
$CT_SCREEN
Minimum: "" Default: "ctsc" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: CRT screen
Description: The name of the current screen on the CRT/KB.
Power Up:
User Interface Location: SYSTEM Variables screen
$CT_USERSCRN
Minimum: "" Default: "c_sc" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: CRT/KB Screen Displayed in USER Menu
Description: Indicates the name of the screen which will be activated when the USER menu is
selected. The ACT_SCREEN built-in will set this system variable. It will be reset to"c_sc" when
the KAREL program, which called ACT_SCREEN, is aborted.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: ACT_SCREEN built-in in the FANU C Robotics SYSTEM R-J3 Controller KAREL
Reference Manual
$CTRL_DELETE
Minimum: 0 Default: 1 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Delete Controlled Start Program
Description: If set to 1, the controlled start program is deleted after it is used and must be
reloaded at each controlled start. Otherwise, the controlled start program is left in CMOS.
Power Up: No
User Interface Location: SYSTEM Variables screen
$DEFLOGIC[3] STRUCTURE
Name: Default Logic Setup
Description: This feature is only available if the option is installed. This is not a standard option.
Individual fields within this structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$DEFLOGIC[1].$func_title
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Function Key Titles
Description: The function key titles in the teach pendant editor can be user-defined. Each title
can be from 0-8 characters. The default logic titles are displayed below:
| [TYPE] LOGIC1 LOGIC2 LOGIC3 [EDCMD]>|
F1 F2 F3 F4 F5
$DEFLOGIC[1].$FUNC_TITLE is displayed on F2.
$DEFLOGIC[2].$FUNC_TITLE is displayed on F3.
$DEFLOGIC[3].$FUNC_TITLE is displayed on F4.
The default value of each of these variables is *uninit*. Therefore, if you do not set these
variables, the key will not work.
Power Up: Changes take effect immediately
User Interface Location: SYSTEM Variables screen, SYSTEM config screen.
See Also: $DEFLOGIC.$total_num
$DEFLOGIC[1].$total_num
Minimum: 0 Default: 4 Maximum: 4
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Total Number of Default Logic Statements
Description: The maximum number of default logic statements per one function key. This
variable can be set from 0 to 4. You can define up to a maximum of this many statements for
every function key. If this value is set to 0, the default logic function is disabled.
The default value is 0.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen, SYSTEM config screen.
See Also: $DEFLOGIC.$func_title
$DEFPROG_ENB
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Default program enable/disable.
Description: When this variable is set TRUE, the variable $TP_DEFPROG is cleared every cold
start.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$DEFPULSE
Minimum: 0 Default: 4 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Default Pulse Length
Description: Specifies the length of a PULSE if it is not specified by the user.
Power Up:
User Interface Location: SYSTEM Variables screen
$DEV_INDEX
Minimum: 0 Default: 3 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: System device index
Description: This read-only system variable defines the device index. This is a number that the
system uses to define $DEVICE. To change the default device, you only need to change
$DEVICE; $DEV_INDEX will be updated internally by the system.
Power Up: No
User Interface Location: SYSTEM Variables screen
See Also: $DEV_PATH, $DEV_INDEX
$DEV_PATH
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: System Default Path
Description: This read-only system variable defines the system default path. Any time a file
operation is performed, the file must be fully qualified, meaning it must have a device, path, and
filename. If the path is not specified by the user during the file operation, then $DEV_PATH is
used by the system.
The default value for $DEV_PATH is "\", meaning the root directory.
The system will remember the default path for each device. If the user changes $DEVICE, then
$DEV_PATH is automatically updated to the default path that is associated with the new device.
Power Up: No
User Interface Location: SYSTEM Variables screen
See Also: $DEV_PATH, $DEV_INDEX
$DEVICE
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: System default device
Description: This read-only system variable defines the system default device. This can be set
to P3: (floppy disk) or RD: (ram disk). Any time a file operation is performed, the file must be fully
qualified, meaning it must have a device, path, and filename. If you do not specify the device
during the file operation, then $DEVICE is used by the system.
Power Up: No
User Interface Location: SYSTEM Variables screen
See Also: $DEV_PATH, $DEV_INDEX
$DMAURST
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: DEADMAN SWITCH automatic reset function
Description: When this system variable is 1 and the teach pendant is enabled, you only need to
grip the DEADMAN switch, to automatically reset any faults. You do not need to push the RESET
key. The default value is 0.
Power Up: This change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$DMR_GRP STRUCTURE
Name: Dynamic Mastering Record
Description: Contains all the information related to mastering and overtravel. Individual fields
within this structure are described below.
Power Up: Set by the system during mastering/reference position setting.
User Interface Location: SYSTEM Master/Cal screen
$DMR_GRP[1].$adapt_col_ m[9]
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Adaptive Corioli Minus
Description: Data for adaptive control.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$adapt_col_ p[9]
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Adaptive Corioli Plus
Description: Data for adaptive control.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$adapt_fric[ 9]
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Adaptive Friction
Description: Data for adaptive control.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$adapt_gr avity[9]
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Adaptive gravity
Description: Data for adaptive control.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$adapt_iner[ 9]
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Adaptive Inertia
Description: Data for adaptive control.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$bcklsh_sig n[9]
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Backlash Compensation Direction
Description: To determine the sign for the new backlash compensation, the previous backlash
compensation sign is required.
$bcklsh_sign was recorded as the sign of previous compensation. FALSE means plus and TRUE
means minus. The backlash compensation amount is stored in the system variable
$bcklash_count.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$dsp_st_his t[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Servo (Digital Signal Processor) Status History
Description: Servo status bits set by the servo software.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$eachmst_do n[9]
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Individual Axis Mastering Done
Description: A flag indicated each axis master stage. If master has been done on this axis, this
flag should be 2.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$master_cou n[9]
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Mastering Count
Description: Displays the mastering count data of the axis of each joint. The system sets it
automatically when mastering is performed.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$master_done
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Mastering Done
Description: Indicates whether or not the mastering procedure has been performed. If it is set to
TRUE, mastering has been done. The system changes this variable automatically when
mastering has been performed.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$mch_pls_hi s[9]
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Machine Pulse History
Description: This system variable is set to $machine_pls when the pulse mismatch alarm
occurs and keeps it after the alarm is reset, so that it can be examined later.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$ot_minus[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Overtravel Minus
Description: $OT_MINUS is an array with each element representing the overtravel condition
for the respective axis. If an element is set TRUE, the corresponding axis has a minus overtravel
condition and can be jogged only in the positive direction. When an overtravel does not exist, all
of the array elements are reset to FALSE.
The appropriate array elements in $OT_MINUS are automatically set to TRUE when an
overtravel occurs in the minus direction, and automatically set back to FALSE when the condition
is corrected.
This variable is saved to the SYSMAST.SV system file automatically every time its value is
changed and is automatically loaded into the system at power up.
This information is displayed if the axis of each joint is in the state of overtravel of negative
direction. When the joint axis enters the state of overtravel of negative direction, the system will
change this variable automatically.
Power Up: Set by the system.
User Interface Location: MANUAL OT Release
$DMR_GRP[1].$ot_plus[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Overtravel Plus
Description: $OT_PLUS is an array with each element representing the overtravel condition for
the respective axis. If an element is set TRUE, the corresponding axis has a plus overtravel
condition and can be jogged only in the negative direction. When an overtravel does not exist, all
of the array elements are FALSE.
The appropriate array elements in $OT_PLUS are automatically set to TRUE when an overtravel
occurs in the plus direction, and automatically set back to FALSE when the condition is
corrected.
This variable is saved to the SYSMAST.SV system file automatically every time its value is
changed and is automatically loaded into the system at power up.
This information is displayed if the axis of each joint is in the state of overtravel of positive
direction. When the joint axis enters the state of overtravel of positive direction, the system will
change automatically.
Power Up: Set by the system.
User Interface Location: MANUAL OT Release
$DMR_GRP[1].$ref_count[9]
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Reference Count
Description: The encoder pulses at the reference position.
Power Up: Set by the system during reference position setup.
User Interface Location: SYSTEM Master/Cal
$DMR_GRP[1].$ref_done
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Reference Position Set
Description: Set by the system when the reference position and reference count have been set.
It is used for quick mastering.
Power Up: Set by the system.
User Interface Location: SYSTEM Master/Cal
$DMR_GRP[1].$ref_pos[9]
Minimum: -100000.0 Default: 0.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Reference Position
Description: Indicates the reference position, in joint angles, for use with quick mastering
feature. When mastering is lost due to battery backup problems with the system, and not due to
motor replacement, the quick mastering feature can be used by moving the robot to be very
close to the reference position using witness marks or other means. The mastering data can be
recovered if the motors are within 1/2 revolution of the reference position.
Power Up: Set by system during reference position setup.
User Interface Location: SYSTEM Master/Cal
$DMR_GRP[1].$shift_error
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Dynamic Mastering Shift History
Description: Shift_error holds the counts left over from moving the mastering position in
dynamic mastering for continuous turn.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$spc_cnt_hi s[9]
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Serial Pulse Coder Count History
Description: This system variable is set to $spc_count when the pulse mismatch alarm occurs
and keeps it after the alarm is reset, so that it can be examined later.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$spc_count[9]
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Serial Pulse Coder Count
Description: This system variable adds another protection for unexpected pulse coder reset. If
the machine pulse at power down and power up are different, an alarm occurs. In order to
implement this feature, the following new system variables are required.
$DMR_GRP.$spc_count[]: FLTR task stores machine pulses every ITP to compare with at the
next power up.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$spc_move[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Serial Pulse Coder Move
Description: This system variable adds another protection for unexpected pulse coder reset. If
the machine pulse at power down and power up are different, an alarm occurs. In order to
implement this feature, the following new system variables are required.
$DMR_GRP.$spc_move[]: FLTR task stores motion status (if motion is in progress or not) every
ITP to determine the tolerance at the next power up.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DMR_GRP[1].$spc_st_his t[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Serial Pulse Coder Status History
Description: SPC (serial pulse coder) status history.
Power Up: Set by the system.
User Interface Location: SYSTEM Variables screen
$DN_BD_INFO[1-4] STRUCTURE
Name: Device Net Board Information Variables
Description: Contains variables which hold information on the operation of each DeviceNet
daughter-board and the network associated with each daughter-board. Individual fields are
described below. User viewable and configurable fields are viewed and edited on the DeviceNet
Board List and Board List Detail screens.
$DN_BD_INFO [1].$dn_bd_baud
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board Baud Rate
Description: The speed of the network connected to the DeviceNet daughter-board.
0: 125 KB 1: 250 KB 2: 500 KB
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_bfree
Minimum: 0 Default: 0 Maximum: 16384
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Free Byte Count
Description: The number of bytes free in the shared RAM buffer.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_bfrus
Minimum: 0 Default: 0 Maximum: 16384
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Available Shared RAM Offset
Description: The offset in shared RAM of the next available byte in the pool area. Internal use
only.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_canec
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet CAN Frame Error Count
Description: A count of the frame errors on the CAN connected to the DeviceNet daughterboard.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_canlm
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet CAN Lost Message Count
Description: A count of the lost messages on the CAN connected to the DeviceNet daughterboard.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_canna
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet CAN Acknowledge Failure Count
Description: A count of the failures to receive acknowledge from the CAN connected to the
DeviceNet daughter-board.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_canov
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet CAN Request Over-Run Count
Description: A count of the request over-runs (unprocessed messages) on the CAN connected
to the DeviceNet daughter-board.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_canrc
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet CAN Receive Count
Description: A count of the acknowledged receives from the CAN connected to the DeviceNet
daughter-board.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_cantc
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet CAN Transmission Count
Description: A count of the transmissions on the CAN (Controller Area Network) connected to
the DeviceNet daughter-board.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO [1].$dn_bd_cflag
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board Connection Flags
Description: Determines the type of server (slave) I/O connections allowable in accessing the
DeviceNet daughter-board from the DeviceNet network. The following are OR'ed together to
determine a field value:
1: explicit messages (currently not supported)
2: POLL access
3: STROBE access
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board List screen
$DN_BD_INFO [1].$dn_bd_cmt
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: DeviceNet Daughter-Board Comment
Description: Provides a short description field for the daughter-board/network.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Board List screen
$DN_BD_INFO[1].$dn_bd_emrqb
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board Explicit Message Buffer Size
Description: The size (in bytes) of the buffer for explicit messages. Currently not used.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_emrqo
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Explicit Message Buffer Offset
Description: The offset of the buffer for explicit messages. Currently not used.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_emrqs
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Explicit Message Request Status
Description: The status of an explicit message request made by the DeviceNet daughter-board.
Currently not used.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_emrsb
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board Explicit Response Buffer Size
Description: The size (in bytes) of the buffer for explicit responses. Currently not used.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_emrso
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Explicit Response Buffer Offset
Description: The offset of the buffer for explicit responses. This variable is currently not used.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_emrss
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Explicit Message Response Status
Description: The status of an explicit message response made by the DeviceNet daughterboard.
Currently not used.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO [1].$dn_bd_error
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: DeviceNet Daughter-Board Error Buffer
Description: Contains error messages returned by the DeviceNet daughter-board.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_intvl
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Periodic Transmission Interval
Description: The interval for periodic transmission of slave data to the remote master. Currently
unused.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_macid
Minimum: 0 Default: 0 Maximum: 63
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board MAC-Id
Description: The Media Access Control Identifier (MAC-Id) for the DeviceNet daughter-board.
Must be in the range [0..63]. There cannot be a duplicate MAC-Id between the daughter-board
and any devices connected to the daughter-board.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_slvib
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board Slave Input Buffer Size
Description: The number of bytes provided as a buffer for slave input data (from the controller to
the remote host).
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_slvio
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Slave Input Offset
Description: The offset in shared RAM of the slave input area.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_slvob
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Daughter-Board Slave Output Buffer Size
Description: The number of bytes provided as a buffer for slave output data (to the controller
from the remote host).
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO[1].$dn_bd_slvoo
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Slave Output Offset
Description: The offset in shared RAM of the slave output area.
Power Up: Changes take effect at power-up.
User Interface Location: DeviceNet Board Detail screen
$DN_BD_INFO [1].$dn_bd_stat
Minimum: 0 Default: 99 Maximum: 99
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Daughter-Board Status
Description: Indicates the status of the DeviceNet daughter-board:
0: board is offline and has not been initialized
1: board is offline and cannot be initialized
2: board is offline but has been initialized
3: board is in an error state and has not been initialized
4: board is in an error state and cannot be initialized
5: board is in an error state but has been initialized
6: board is on-line
7: board is currently being initialized
99: no DeviceNet variables have been initialized
$DN_CODE_PTH
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: DeviceNet Daughter-Board Code Path
Description: The path name for the binary code file that is loaded on the DeviceNet Interface
board at power-up. For internal use. Do not modify this variable.
Power Up: Changes take effect at power-up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_DEFS[1-40] STRUCTURE
Name: DeviceNet Device Definition List
Description: List of device definitions for user-defined devices. Each record contains
configuration and operational information; individual fields are described below. Viewable and
editable fields are displayed on the DeviceNet Device Definition and Device Definition Detail
screens.
$DN_DEV_DEFS[1].$dn_dd_class
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device Definition Class
Description: The device class for a DeviceNet device with this definition.
0: digital device
1: analog device
2: multi-module device (not available for user-defined devices)
3: special - devices which require special handling
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_D EFS[1].$dn_dd_cmt
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: DeviceNet Device Definition Comment
Description: A comment associated with the device definition.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen, Device Definition screen
$DN_DEV_DEFS[1].$dn_dd_dvtyp
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Type
Description: The device type code of the DeviceNet device definition.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_D EFS[1].$dn_dd_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: DeviceNet Device Definition Name
Description: The name given to the device definition. This name is used when adding a device
on the DeviceNet Device List screen and selecting a device type.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen, Device Definition screen,
Device List screen
$DN_DEV_DEFS[1].$dn_dd_prcod
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Product Code
Description: The product code of the DeviceNet device definition.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_stat
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device Definition Status
Description: The current status of the device definition. For internal use. Do not modify.
0: This entry in the device definition list is unused.
1: This device definition is invalid; the product code, vendor ID, device type, and name fields
must contain valid values. 2: This device definition is valid.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_inp1
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Input Parameter 1
Description: An input parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_inp2
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Input Parameter 2
Description: An input parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_inp3
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Input Parameter 3
Description: An input parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_inp4
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Input Parameter 4
Description: An input parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_mode
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device Definition Access Mode
Description: The mode by which a DeviceNet device with this definition accesses I/O. For
internal use. Do not modify.
0: no I/O access - for devices with no inputs or outputs
1: polled access - for devices with outputs (with or without inputs) 2: strobed access - used for
devices with inputs only
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_msgsz
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Message Size
Description: The size of the explicit message buffer on a device with this device definition.
Currently not in use.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_n_inp
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition: Number of Inputs
Description: The number of inputs on a DeviceNet device with this definition.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_n_out
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition: Number of Outputs
Description: The number of outputs on a DeviceNet device with this definition.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_outp1
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Output Parameter 1
Description: An output parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_outp2
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Output Parameter 2
Description: An output parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_outp3
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Output Parameter 3
Description: An output parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_DEFS[1].$dn_dd_outp4
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Output Parameter 4
Description: An output parameter associated with the device definition. Usage to be determined.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_D EFS[1].$dn_dd_pdt
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Definition PDT
Description: The PDT (permanent device type) associated with the device definition. Userdefined
devices have PDT's greater than zero; installation-defined devices have PDT's less than
zero. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_DEFS[1].$dn_dd_vndid
Minimum: -32767 Default: -1 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: DeviceNet Device Definition Vendor ID
Description: The vendor ID for the DeviceNet device definition.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device Definition Detail screen
$DN_DEV_LIST[1-80] STRUCTURE
Name: DeviceNet Device List
Description: The list of all DeviceNet devices connected to all daughter-boards. This list is
indexed by $DN_DEV_INDX. Each record contains information pertaining to the operation and
configuration of the associated device. The fields are individually described below. User-viewable
and editable fields are accessed on the DeviceNet Device List screen.
$DN_DEV_LIST[1].$dn_dv_bdidx
Minimum: 0 Default: 0 Maximum: 4
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device Board Index
Description: The number of the DeviceNet daughter-board to which the device is connected.
For internal use. Do not modify.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device List screen
$DN_DEV_L IST[1].$dn_dv_cmt
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: DeviceNet Device Comment
Description: A comment associated with a particular DeviceNet Device. It might be used to
indicate the use of the device, and so forth.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device List screen
$DN_DEV_L IST[1].$dn_dv_dvtyp
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Type
Description: The device type of the DeviceNet device. Because the MPC860 does not have
access to the device definitions, this information is stored in the device system variable structure
and transferred to the MPC860 by the PPC603e at startup.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_LIST[1].$dn_dv_fstmd
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device First-Module Index
Description: Index of the first module connected to the DeviceNet device. Used only for multimodule
devices. A value of 255 indicates that no module list exists for this device. For internal
use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_L IST[1].$dn_dv_mode
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device Access Mode
Description: The access mode of the DeviceNet device (polled or strobed). Because the
MPC860 does not have access to the device definitions, this information is stored in the device
system variable structure and transferred to the MPC860 by the PPC603e at startup.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_L IST[1].$dn_dv_nain
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Analog Inputs Count
Description: The number of analog inputs present on the DeviceNet device. Used internally to
configure communications to multi-module devices on the MPC860.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_L IST[1].$dn_dv_naout
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Analog Outputs Count
Description: The number of analog outputs present on the DeviceNet device. Used internally to
configure communications to multi-module devices on the MPC860.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_L IST[1].$dn_dv_ndin
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Digital Inputs Count
Description: The number of digital inputs present on the DeviceNet device. Used internally to
configure communications to multi-module devices on the MPC860.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_L IST[1].$dn_dv_ndout
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Digital Outputs Count
Description: The number of digital outputs present on the DeviceNet device. Used internally to
configure communications to multi-module devices on the MPC860.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_L IST[1].$dn_dv_pdt
Minimum: -32767 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Type
Description: A numeric identifier of the DeviceNet device type. Values less than zero indicate an
installation-defined device; values greater than zero indicate a user-defined device.
Power Up:
User Interface Location: DeviceNet Device List screen
$DN_DEV_L IST[1].$dn_dv_prdcd
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Product Code
Description: The product code of the DeviceNet device. Because the MPC860 does not have
access to the device definitions, this information is stored in the device system variable structure
and transferred to the MPC860 by the PPC603e at startup.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_L IST[1].$dn_dv_vndid
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Vendor ID
Description: The vendor ID of the DeviceNet device. Because the MPC860 does not have
access to the device definitions, this information is stored in the device system variable structure
and transferred to the MPC860 by the PPC603e at startup.
Power Up:
User Interface Location: Device Definition Detail screen or Standard Definition Detail screen.
$DN_DEV_LIST[1].$dn_dv_macid
Minimum: 0 Default: 0 Maximum: 63
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device MAC-Id
Description: The MAC-Id (Media Access Control Identifier) of the DeviceNet device. It might not
be a duplicate of the MAC-Id for any other device connected to the same daughter-board or of
the MAC-Id of the daughter-board itself. The MAC-Id is set when a device is first added to a
daughter-board's device list.
Power Up: Changes take effect at power up.
User Interface Location: DeviceNet Device List screen
$DN_DEV_LIST[1].$dn_dv_stat
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: DeviceNet Device Status
Description: The status of the DeviceNet device. For internal use. Do not modify.
0: device is offline
1: device is in an error state
2: device is on-line
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Device List screen
$DN_DEV_LIST[1].$dn_inp_ofst
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Input Buffer Offset
Description: The offset in shared RAM of the first byte of the DeviceNet device's input data
buffer. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_LIST[1].$dn_inp_size
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Input Buffer Size
Description: The size in bytes of the input buffer of the DeviceNet device. For internal use. Do
not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_LIST[1].$dn_msg_ofst
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Message Buffer Offset
Description: The offset in shared RAM of the first byte of the DeviceNet device's message
buffer. Currently not used. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_LIST[1].$dn_msg_size
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Message Buffer Size
Description: The size in bytes of the message buffer of the DeviceNet device. Currently not
used. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_LIST[1].$dn_out_ofst
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Output Buffer Offset
Description: The offset in shared RAM of the first byte of the DeviceNet device's output data
buffer. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_LIST[1].$dn_out_size
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Device Output Buffer Size
Description: The size in bytes of the output buffer of the DeviceNet device. For internal use. Do
not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_DEV_L IST[1].$dn_stat_p
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: LONG
Name: DeviceNet Device Status Area Address
Description: The address of the area in shared RAM containing the status of the DeviceNet
device. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_FREE_MOD
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: DeviceNet Free Module List Index
Description: Index to the linked list of free module entries. $DN_FREE_MOD is the first module
list entry in this list. For internal use only. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_LAST_PDT
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: DeviceNet Last Used PDT Value
Description: The last PDT value used by a user-defined device. When new device definitions
are added, $DN_LAST_PDT is incremented. PDT values less than $DN_LAST_PDT cannot be
re-used even if the associated definitions are deleted. For internal use. Do not modify.
Power Up: Changes take effect at power up.
User Interface Location: SYSTEM variable screen.
$DN_MOD_LIST[1-64] STRUCTURE
Name: DeviceNet Module List
Description: The list of all DeviceNet modules connected to multi-module device across all
daughter-boards. Each record contains configuration and operational information. Fields are
individually described below. Viewable/editable fields are displayed on the DeviceNet Module List
screen.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Module List screen
$DN_MOD_L IST[1].$dn_ml_commt
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: DeviceNet Module List Comment
Description: A comment associated with the particular DeviceNet module; can be used to
indicate the use of the module.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Module List screen
$DN_MOD_LIST[1].$dn_ml_nxtix
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Module List Next-Module Index
Description: Used to link to the next DeviceNet module in the module list of the current device.
A value of 255 indicates the end of the module list.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Module List screen
$DN_MOD_L IST[1].$dn_ml_pmt
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Module List PMT
Description: The PMT (Permanent Module Type) of the DeviceNet module.
Power Up: Changes take effect immediately.
User Interface Location: DeviceNet Module List screen
$DN_MOD_LIST[1].$dn_ml_slot
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: DeviceNet Module Slot Number
Description: The number of the slot on the device to which the DeviceNet module is connected.
Power Up: Changes to this variables take effect immediately.
User Interface Location: DeviceNet Module List screen
$DUTY_GRP.$curve_ type[1-9]
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: duty curve type
Description: For internal use only. Do not modify this system variable.
If this variable is 0, duty curve is straight line. If this variable is 1, duty curve is mixed with curve
and line. If this variable is 2, duty curve is curve.
Power Up: Changes to this variables take effect immediately.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$DUTY_GRP.$dty_su pport
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: duty diagnosis support
Description: For internal use only. Do not modify this system variable.
If this value is 1, DUTY diagnosis parameter exits.
Power Up: Changes to this variables take effect immediately.
User Interface Location: None
See Also: This variable is used for Duty diagnosis.
$DUTY_GRP.$duty_p aram1[1-9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: duty parameter 1
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Changes to this variables take effect immediately.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$DUTY_GRP.$duty_p aram2[1-9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: duty parameter 2
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Changes to this variables take effect immediately.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$DUTY_GRP.$duty_p aram3[1-9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: duty parameter 3
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Changes to this variables take effect immediately.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$DUTY_GRP.$duty_p aram4[1-9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: duty parameter 4
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Changes to this variables take effect immediately.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$DUTY_GRP.$duty_p aram5[1-9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: duty parameter 5
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Changes to this variables take effect immediately.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$DUTY_TEMP
Minimum: -273.15 Default: 25.0 Maximum: 100.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Air temperature in duty diagnosis
Description: The value of $DUTY_UNIT means the air temperature set by user. The unit of it is
[C].
Power Up: Changes of this variable take effect immediately
User Interface Location: SYSTEM variables screen/Duty diagnosis screen
See Also: This variable is used for Duty diagnosis.
$DUTY_UNIT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: ULONG
Name: Unit of temperature in duty diagnosis
Description: The value of $DUTY_UNIT means the unit of temperature. Currently, 0 means [C]
and 1 means [F]
Power Up: Changes of this variable take effect immediately
User Interface Location: SYSTEM variables screen/Duty diagnosis screen
See Also: This variable is used for Duty diagnosis.
$DXCFG
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: uninit
Name: DeltaTool Debug Variables
Description: The DeltaTool Debug variables are not user variables and should not be set to any
values other than their default values.
Power Up: Changes take effect on the next robot motion.
User Interface Location: Set only using KCL or the SYSTEM Variables screen.
See Also: Contact your FANUC Robotics technical representative if it is necessary to change
this variable.
$DXMOR[1] STRUCTURE
Name: DeltaTool Output Record of Group 1
Description: Contains information about how the offset is being applied.
Individual fields within this structure are described below.
Power Up: This variable is read only.
User Interface Location: Can be read from a KAREL program, KCL, or from the SYSTEM
Variables screen.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXMOR[1].$deltaframe
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: uninit
Name:
Description: Reserved for future use. Do not change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$DXMOR[1].$deltatool
Minimum: nilpos Default: nilpos Maximum: POSITION
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: POSITION
Name: DeltaTool Offset of Group 1
Description: This variable is updated when the APPLY_OFFSET(sch_num) is called and is the
latest offset to be applied to the nominal trajectory.
Power Up: This variable is read only.
User Interface Location: Can be read from a KAREL program, KCL, or from the SYSTEM
Variables screen.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXMOR[1].$intr_tstamp
Minimum: 0 Default: 0 Maximum: 2^32
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Interpolator Timestamp of Group 1
Description: The timestamp value, in milliseconds, is updated when the offset is applied.
Power Up: This variable is read only.
User Interface Location: Can be read from a KAREL program, KCL, or from the SYSTEM
Variables screen.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXOFFSET[sch_num] STRUCTURE
Name: Offset Variables
Description: Specifies the offset data for the schedule $DXSCH[sch_num]. It is updated to the
system when the KAREL built-in function APPLY_OFFSET(sch_num) is called, and is effective
on the next interpolated point of a motion segment.
Individual fields within this structure are described below.
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain its value. System power up will not affect this variable.
User Interface Location: Can be set from a KAREL program, KCL, or from the SYSTEM
Variables screen.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXOFFSET[sch_num].$ deltaframe
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: uninit
Name:
Description: Reserved for future use. Do not change this variable.
Power Up:
User Interface Location: SYSTEM Variable screen
$DXOFFSET[sch_num].$deltatool
Minimum: nilpos Default: nilpos Maximum: POSITION
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: DeltaTool Offset
Description: Specifies the offset data for the schedule $DXSCH[sch_num]. It is updated to the
system when the KAREL built-in function APPLY_OFFSET(sch_num) is called, and is effective
on the next interpolated point of a motion segment.
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain this value. System power up will not affect this variable.
User Interface Location: Can be set from a KAREL program, KCL, or from the SYSTEM
Variables screen.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXSCH[sch_num] STRUCTURE
Name: DeltaTool Schedule Variables
Description: This is an array of DeltaTool schedule variables. A maximum of five schedules can
be used.
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain their values. System power up will not affect this variable.
Individual fields within this structure are described below.
User Interface Location: Accessible from KAREL, KCL or the SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXSCH[sch_num].$dfram e_type
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: uninit
Name:
Description: Reserved for future use. Do not change this variable.
Power Up:
User Interface Location: SYSTEM Variable screen
$DXSCH[sch_num].$dtool_type
Minimum: DT_OFF Default: DT_OFF Maximum: DT_ACC_XF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: DeltaTool Type
Description: Specifies how the offset data is to be applied according to Table 2-4.
Table 2-4. Applying Offset Data
$dtool_type Offset Frame
DT_OFF Disable UTOOL
DT_LOC Location UTOOL
DT_XF Location+Orientation UTOOL
DT_ACC_LOC Accumulated Location UTOOL
DT_ACC_X Accumulated Location+Orientation UTOOL
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain its value. System power up will not affect this variable.
User Interface Location: Can be set from a KAREL program, KCL, or from the SYSTEM
Variables screen. However, the schedule will only be enabled when the KAREL built-in function
START_OFFSET(sch_num) is called.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$DXSCH[sch_num].$dxaccel1
Minimum: 0 Default: 256 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: DeltaTool CART_ACCEL1
Description: This variable is used, together with $DXSCH[num].$dxaccel2, to determine the
acceleration/deceleration time used when the DeltaTool offset is applied.
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain its value. System power up will not affect this variable.
User Interface Location: Can be set from a KAREL program, KCL, or from the SYSTEM
Variables screen. However, the schedule will only be enabled when the KAREL built-in
START_OFFSET(sch_num) is called.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual, or FANUC Robotics
SYSTEM R-J3 Controller KAREL Reference Manual for information on $CART_ACCEL1.
$DXSCH[sch_num].$dxaccel2
Minimum: 0 Default: 128 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: DeltaTool CART_ACCEL2
Description: This variable is used, together with $DXSCH[num].$dxaccel1, to determine the
acceleration/deceleration time used when the DeltaTool offset is applied.
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain its value. System power up will not affect this variable.
User Interface Location: Can be set from a KAREL program, KCL, or from the SYSTEM
Variables screen. However, the schedule will only be enabled when the KAREL built-in
START_OFFSET(sch_num) is called.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual or FANUC Robotics
SYSTEM R-J3 Controller KAREL Reference Manual for information on $CART_ACCEL2
$DXSCH[sch_num].$group_num
Minimum: 1 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Group Number
Description: Group number for the DeltaTool schedule. Currently, DeltaTool can only be used
for group 1.
Power Up: This variable is initialized only once when DeltaTool is loaded. After this occurs, you
must maintain its value. System power up will not affect this variable.
User Interface Location: Can be set from a KAREL program, KCL, or from the SYSTEM
Variables screen. However, the schedule will only be enabled when the KAREL built-in function
START_OFFSET(sch_num) is called.
See Also:FANUC Robotics SYSTEM R-J2 Controller DeltaTool Manual
$ED_SIZE
Minimum: 10000 Default: 30720 Maximum: 524288
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Text editor size
Description: Determines the amount of memory available for all the edit buffers combined. The
memory is allocated during cold start from the C-WORK memory pool.
Power Up: Requires a cold start to take effect
User Interface Location: SYSTEM Variables screen
$ED_STATE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Text editor state
Description: Used by the system to determine whether a file is currently in the text editor. This
variable can also be read by a KAREL program to determine this status. The valid states are
0= No files in text editor
1= Text editor is between states
2= File is in text editor
Even though a file is in the text editor, it might not be the current screen on the CRT/KB.
Power Up:
User Interface Location: SYSTEM Variables screen
$ENC_STAT[1] STRUCTURE
Name: (External/Tracking) Encoder Status
Description: This is the configuration and status data structure for the external encoder(s) used
with Line Tracking and other system options and applications.
Individual fields within this structure are described below.
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
$ENC_STAT[1].$enc_average
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Rate Averaging Number
Description: This is the number of consecutive encoder instantaneous velocity values to be
averaged together when computing the $ENC_STAT[].$enc_rate value. This determines the
number of elements within the $ENC_STAT[1].$enc_buffer[] array which are used within the
encoder rate computation.
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
See Also: $ENC_STAT[].$enc_rate, $ENC_STAT[1].$enc_buffer[]
$ENC_STAT[1].$enc_buffer[100]
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Velocity Storage Buffer
Description: This buffer is used for storage of consecutive values of the instantaneous encoder
velocity (not $ENC_STAT[].$enc_rate) which are required for the encoder rate averaging. Only
the first $ENC_STAT[1].$enc_average elements are used for averaging.
Power Up: 0
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_average
$ENC_STAT[1].$enc_count
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Count (Counts)
Description: This contains the encoder count value which was computed during the most recent
encoder access as determined by the system ITP_TIME and the $ENC_STAT[1].$multipl
encoder read interval multiplier value. This value is the total accumulated value of encoder
counts which results from summing each consecutive value ($ENC_STAT[1].$enc_value) of an
incremental encoder.
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
See Also: $ENC_STAT[1].$multipl, $SCR.$itp_time
$ENC_STAT[1].$enc_dspatat
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder DSP Status Flag
Description: This is a Digital Signal Processor (DSP) alarm status flag for the DSP channel
associated with this encoder.
Power Up: 0
User Interface Location: SYSTEM Variables screen
$ENC_STAT[1].$enc_enable
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Encoder Enable
Description: This value determines whether or not the encoder is active. A value of TRUE
indicates that this encoder is being updated at the prescribed interval (either by reading the
encoder or by simulating encoder counts).
Note: This value must also be TRUE in order to simulate the encoder.
Power Up: 0
$ENC_STAT[1].$enc_exists
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Encoder Exists Status Flag
Description: This is a status flag which indicates that the required external encoder hardware
exists and is usable.
Power Up: 0
User Interface Location: SYSTEM Variables screen
$ENC_STAT[1].$enc_head
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Buffer Head Index
Description: This is the index into the $ENC_STAT[1].$enc_b uffer array used to determine
where to store the current encoder velocity value.
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
See Also: $ENC_STAT[1].$enc_buffer[]
$ENC_STAT[1].$enc_multipl
Minimum: 1 Default: 1 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Update Multiplier
Description: This value is multiplied by the $SCR.$itp_time to determine the encoder update
rate. A value of 1 indicates that the encoder is updated every ITP_TIME interval. A value of 2
indicates that the encoder is updated every other interval, and so forth.
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
See Also: $SCR.$ITP_TIME
$ENC_STAT[1].$enc_rate
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Rate (Average Velocity) (Counts/Update)
Description: This is the average encoder velocity (in units of encoder counts per encoder
update time). It is the average value of the first $ENC_STAT[].$enc_average entries within the
$ENC_STAT[].$enc_buffer[] array.
Power Up: 0
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[].$enc_average, $ENC_STAT[].$enc_buffer []
$ENC_STAT[1].$enc_ros_tik
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder ROS Tick TimeStamp (ROS Ticks)
Description: The current ROS Time Tick value when the encoder count ($ENC_STAT[1].
$enc_count) was last updated. The unit for this system variable is currently 4 msec. This variable
is available to time stamp data and is used in line tracking applications using vision, or other
similar applications.
Power Up: 0
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$ENC_COUNT
$ENC_STAT[1].$enc_sim_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Encoder Simulate Enable
Description: This determines whether the encoder count values are simulated (based upon the
value of $ENC_STAT[1].$enc_sim_spd) or read from an actual encoder. TRUE indicates that
encoder counts are being simulated. (NOTE: The encoder must also be enabled via
$ENC_STAT[].$enc_enable = TRUE in order to simulate encoder counts.)
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
See Also: $ENC_STAT[1].$ENC_SIM_SPD, $ENC_STAT[].$ENC_ENABL E
$ENC_STAT[1].$enc_sim_spd
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Simulation Speed (Counts/Update)
Description: This determines the encoder speed (in units of encoder counts per encoder
update) used during encoder simulation. This number of encoder counts is added to the previous
value of $ENC_STAT[1].$enc_count to determine the new encoder count value. When simulation
is enabled, this number will also be stored in the $ENC_STAT[].$enc_buffer and reported by the
$ENC_STAT[].$enc_rate value.
Power Up: 0
User Interface Location: SYSTEM Variables screen and SETUP Encoders screen
See Also: $ENC_STAT[1].$enc_count, $ENC_STAT[].$enc_buffer, $ENC_STAT[].$enc_rate
$ENC_STAT[1].$enc_spcstat
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder SPC Status Flag
Description: This is a Serial Pulse Coder (SPC) alarm status flag for the SPC channel
associated with this encoder (if a Serial Pulse Coder is being used).
Power Up: 0
User Interface Location: SYSTEM Variables screen
$ENC_STAT[1].$enc_stopped
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Encoder Stopped Status Flag
Description: Internal encoder stopped status flag. Reserved for Internal use by FANUC
Robotics. Not currently supported. NOTE: Use the TPE LINESTOP instruction to determine the
current stopped status.
Power Up: 0
User Interface Location: SYSTEM Variables screen
$ENC_STAT[1].$enc_thresh
Minimum: 1 Default: 1 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Stopped Threshold
Description: This value specifies the encoder stop threshold (in units of encoder counts per
encoder update). This value is used by the LINE_STOP instruction to determine whether or not
the line (conveyor) has stopped moving. Line rates which are LESS (smaller magnitude) than the
stop threshold value are considered to indicate that the line has stopped.
Power Up: 0
User Interface Location: SYSTEM Variables screen
$ENC_STAT[1].$enc_value
Minimum: -2147483648 Default: 0 Maximum: 2147483647
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder (Incremental Count) Value
Description: Contains the incremental encoder count value which was read during the most
recent encoder access as determined by the system ITP_TIME and the $ENC_STAT[1].
$enc_multipl encoder read interval multiplier value. This value is the unaccumulated value of
encoder counts which was directly read from the encoder.
Power Up: 0
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_multipl, $SCR.$itp_time
$ENETMODE STRUCTURE
Name: Ethernet Mode Structure
Description: Individual fields within this structure are described below.
$ENETMODE.$auto_port_s
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Ethernet Mode selection for Automatic Port Selection
Description: Enables (TRUE) or disables (FALSE) Ethernet Automatic Port Selection. The
selection TRUE will automatically select TP (Twisted Pair) or AUI (Access Unit Interface) based
on the presence or absence of valid link frames at the Twisted Pair port.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$ENETMODE.$coll_detect
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Ethernet Mode selection for Collision Detection
Description: Enables (TRUE) or disables (FALSE) Ethernet Twisted Pair Signal Quality Error
Test Enable. The selection TRUE will enable testing of the internal TP (twisted pair) collision
detect circuitry after each transmit operation to the remote host via Ethernet communication.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$ENETMODE.$en_loopback
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Ethernet Mode selection for Diagnostic Loopback
Description: Enables (TRUE) or disables (FALSE) Ethernet Diagnostic Loopback. The selection
TRUE will cause the TX output to be loopbacked and appeared at the RX input. The current
setting for $EN_LOOPBACK is FALSE, and is write protected.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$ENETMODE.$en_tpenable
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Ethernet Mode selection for Twisted Pair Port Enable
Description: Enables (TRUE) or disables (FALSE) Ethernet Twisted Pair Port Enable. If
$AUTO_PORT_S (automatic port selection) is set to FALSE (disabled), then the user will be
able to manually select TP port or AUI port, i.e. set $EN_TPENABLE to TRUE for TP port or
FALSE for AUI port. If $AUTO_PORT_S is set to TRUE, then the setting of $EN_TPENABLE
will have no effect on Ethernet port selection.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$ENETMODE.$full_duplex
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Ethernet Mode selection for Twisted Pair Full Duplex
Description: Enables (TRUE) or disables (FALSE) Ethernet Twisted Pair Full Duplex. The
selection TRUE will allow simultaneous transmit and receive operation on the twisted pair port
without causing collision.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$ENETMODE.$polarity_ce
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Ethernet Mode selection for Twisted Pair Automatic Polarity Correction Enable
Description: Enables (TRUE) or disables (FALSE) Ethernet Twisted Pair Automatic Polarity
Correction Enable. The selection TRUE will enable automatic polarity correction, and will
internally correct polarity fault. The current setting for $POLARITY_CE is TRUE, and is write
protected.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$ER_AUTO_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Auto display flag
Description: Enables/Disables whether the Active Alarm Screen will automatically be displayed
when an error occurs. 1=Automatic Display.
Power Up: You must perform a COLD START for this change to take effect.
User Interface Location: SYSTEM Variables screen
See Also: The Error Codes Appendix in the appli cation-specific Setup and Operations Manual
for more information.
$ER_NO_ALM STRUCTURE
Name: Output/non-output of Alarm
Description: This system variable is used to prevent specific errors from turning on the FAULT
output.
Individual fields within this structure are described below.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$ER_NO_ALM[1].$er_code1-10
Minimum: 0 Default: 0 Maximum: 128000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: No alarm error codes
Description: These variables specify the alarms which will not turn on the FAULT output. The
number of alarms specified and the value of $ER_NO_ALM.$noalm_num must be the same. An
alarm ID is used to specify the alarm. Refer to the Setup and Operations Manual for alarm ID
information.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$ER_NO_ALM[1].$noalm_num
Minimum: 0 Default: 5 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Number of no alarm errors
Description: Specifies the number of error codes used.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$ER_NO_ALM[1].$noalmenble
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: No alarm enable
Description: Enables/disables the no alarm output feature.
1: Do not turn on the FAULT output for any errors defined in $ER_NO_ALM[1].$er_ code1-10.
0: Output all alarms.
This variable will only enable the no alarm output feature if $ER_NO_ALM[1].$no alm_num and
$ER_NO_ALM[1].$er_code1-10, are set up properly.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$ER_NOAUTO STRUCTURE
Name: Auto display flag of the specified alarm
Description: Disables/enables automatic display of the Active Alarm Screen for specified
alarms. The variables within this structure are used with $ER_AUTO_ENB. Individual fields
within this structure are described below.
Power Up: You must perform a cold start for the changes to take effect.
See Also: Appendix A of the application-specifi c Setup and Operations Manual.
$ER_NOAUTO.$noauto_ code[1-20]
Minimum: 0 Default: 11001 Maximum: 128000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: LONG
Name: Error code
Description: The error code specified here will not force the automatic display of the Active
Alarm Screen. There are 6 set by default. Appendix A of the Application-Specific Setup and
Operations Manual.
Power Up: You must perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables Screen
$ER_NOAUTO.$noauto_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Auto display flag of the specified errors
Description: Disables/enables the automatic display of the Active Alarm Screen for the specified
error codes in $ER_NOAUTO.$noauto_code. If set to 1, the errors specified will not force the
display of the Active Alarm Screen.
Power Up: You must perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables Screen
$ER_NOAUTO.$noauto_ num
Minimum: 0 Default: 6 Maximum: 20
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Number of specified error codes
Description: The number of error codes specified in $ER_NOAUTO.$noauto_code must be the
same as this value.
Power Up: You must perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables Screen
$ER_NOHIS
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Error storage.
Description: This variable indicates whether or not warnings will be stored in an error history
file.
0 = All posted errors and RESET are recorded in the error queue.
1 = WARNING errors are not recorded in the error queue. Other errors and RESET are still
recorded in error queue. 2 = RESET is not recorded in error queue. Errors are still recorded in
the error queue.
3 = WARNING error and RESET are not recorded in the error queue. Other errors are still
recorded in the error queue.
Power Up:
User Interface Location: SYSTEM Variables screen
$ER_SEV_NOAU[1-5]
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Auto display flag of every severity type
Description: Disables/enables the automatic display of the Active Alarm Screen for each
severity type, except WARN. The elements [1-5] correspond respectively to PAUSE, STOP,
SERVO, ABORT and SYSTEM. If set to FALSE, the severity type will not force the automatic
display of the Active Alarm Screen. This variable is used with $ER_AUTO_ENB.
Power Up: You must perform a cold start for this change to take effect.
User Interface Location: SYSTEM Variables screen
See Also: Appendix A of the Application-Specific Setup and Operations Manual.
$ERROR_PROG
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Error Program
Description: This string can be set from a teach pendant program using the ERROR_PROG
instruction. A KAREL "shell" program can access this string during an error recovery process.
This string typically contains the name of a program that is run as part of error recovery. Note
that this contains the result of the last access to an error_prog instruction from a teach pendant
program.
Power Up: No
User Interface Location: SYSTEM Variables screen TP Editor
$ERSEVERITY
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Error severity
Description: Reserved for Internal use by FANUC Robotics. Do not change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$ETCP_VER
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TCP/IP version
Description: The version of the TCP/IP code in EPROM.
Power Up: Always read from the ETHERNET EPROM after a cold start.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J Controller KSL Interface Setup and Operations Manual
$EXTTOL
Minimum: 0.0 Default: 10.0 Maximum: 1000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Extended Axis Error Tolerance
Description: Specifies the tolerance allowed in extended axis data when two positions are
compared in a KAREL program. Two extended axes are considered equal when their difference
is below this value. Units are mm for linear axes, degrees for rotational axes.
Power Up:
User Interface Location: SYSTEM Variables screen
$FAST_CLOCK
Minimum: 0x80000000 Default: 0 Maximum: 0x7ffffff
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: High Resolution System Timer
Description: This variable is incremented by 1 every 4 milliseconds. It provides higher resolution
timing than is available though KAREL TIMER variables.
Power Up: No
User Interface Location: SYSTEM Variables screen
$FBSTSK[1] STRUCTURE
Name: PROFIBUS task ID
Description: These system variables are used to create the field bus task. Individual variables
within this structure are described below.
Power Up: You must perform a cold or hot start for these change to take effect.
User Interface Location: SYSTEM Variables screen
$FBSTSK[1].$lun
Minimum: 0 Default: 0 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TASK LUN
Description: For internal use only. Do not modify this system variable. Task LUN of field bus
task.
$FBSTSK[1].$priority
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Field bus task priority
Description: For internal use only. Do not modify this system variable. 0 : The default priority is
used.
Power Up: You must perform a cold or hot start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$FBSTSK[1].$sid
Minimum: 0 Default: 75 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Softparts ID
Description: For internal use only. Do not modify this system variable. Task Softparts ID of field
bus task.
$FBSTSK[1].$tid
Minimum: 0 Default: 167 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TASK ID
Description: For internal use only. Do not modify this system variable. Task ID of field bus task.
$FEATURE STRUCTURE
Name: Feature Information
Description: Individual variables within this structure are described below.
$FEATURE.$NAM[1-128]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Name of the Standard/Robot Library/Optional/Update Features
Description: Details the release time name of each installed feature (standard, robot library,
option, or update).
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen, SYSTEM Variable screen
$FEATURE.$MOD[1-128]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Feature Type
Description: Details the load mechanism of each installed feature: S (standard), L (robot library),
O (option), or U (update).
Power Up: This variable cannot be changed.
User Interface Location: None
$FEATURE.$VER[1-128]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Version of the Standard/Robot Library/Optional/Update Features
Description: Details the release time version of each installed feature (standard, robot library,
option, or update).
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen, SYSTEM Variable screen
$FILE_APPBCK[1-20] STRUCTURE
Name: Application file backup table
Description: The entries in this table tell the system what files are loaded or what programs are
backed up during a "file backup" operation from the teach pendant. This table is used when you
select BACKUP or RESTORE and "Application" or "All of the above."
This table is used for loading during controlled start when you select a restore operation.
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface Location: SYSTEM Variable screen
$FILE_APPBCK[1].$file_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: File Backup/Restore Name
Description: The name of the file to be restored from or backed up to, for this entry in the table.
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface Location: SYSTEM Variable screen
$FILE_APPBCK[1].$func_code
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Function Code
Description:
0 = Save variable data (file name can be VR or SV)
1 = Save IO configuration
2 = Save only variable data
3 = Load only variable data
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface Location: SYSTEM Variable screen
$FILE_APPBCK[1].$modifier
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Modifier
Description: Applies to system variable type operations only.
Load operation:
0 - Normal load
16 - Convert system variable from previous version
Save operation:
0 Save all variables
1 Save majority of sysvars
2 Save just DMR
3 Save just SBR
4 Save NOSAVE variable for initialization
5 Save MACRO command related variables
6 Save SPOT application related variables
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface SYSTEM Variable screen
$FILE_APPBCK[1].$prog_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Program name to backup/restore
Description: Name of the program backed up if this is a backup entry in the table.
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface SYSTEM Variable screen
$FILE_AP2BCK[1-20] STRUCTURE
Name: Application-TP (Applic.-TP) file backup table
Description: The entries in this table tell the system what .TP, .DF or .MN programs are loaded
or backed up during a "file backup" operation from the teach pendant. This table is used when
you select BACKUP or RESTORE and Applic.-TP.
This table is used for loading during controlled start when you select a restore operation.
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface Location: SYSTEM Variable screen
$FILE_AP2 BCK[1].$file_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: File Backup/Restore Name
Description: The name of the file to be restored from or backed up to, for this entry in the table.
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface Location: SYSTEM Variable screen
$FILE_AP2BCK[1].$func_code
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Function Code
Description:
0 = Save TP program data (file name can be TP, DF or MN
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface Location: SYSTEM Variable screen
$FILE_AP2BCK[1].$modifier
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Modifier
Description: Applies to load operation modifier only.
Load operation:
0 - No overwrite on load
1 - Overwrite file on load
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface SYSTEM Variable screen
$FILE_AP2BCK[1].$prog_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Program name to backup/restore
Description: Name of the program backed up if this is a backup entry in the table.
Power Up: Used when the BACKUP or RESTORE key is pressed on the FILE menu.
User Interface SYSTEM Variable screen
$FILE_BASEPT
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: File base pointer
Description: Pointer to link management data of the file system. This variable is used by the
system. Do not change this variable.
Power Up:
User Interface Location: SYSTEM Variables screen
$FILECOMP
Minimum: MIN_FILECOMP_DATA Default: MIN_FILEC OMP_DATA Maximum:
MAX_FILECOMP_DATA
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: File Backward Compatibility Switches
Description: Compatibility switches can be set so that older versions of software (V4.40 and
earlier) can read variables and TPP programs written for V5.11 and later. There are two switches:
 · $TPP - If set to TRUE, TP programs are backward compatible.
 · $VARIABLE - If set to TRUE, variable files (.VR) are backward compatible.
Power Up: Changes take effect immediately.
User Interface Location: File Menu
$FILECOMP.$tpp
Minimum: 0 Default: 0 Max imum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: File Backward Compatibility Switches
Description: Compatibility switches can be set so that older versions of software (V4.40 and
earlier) can read variables and TPP programs written for V5.11 and later. There are two switches:
 · $TPP - If set to TRUE, TP programs are backward compatible.
 · $VARIABLE - If set to TRUE, variable files (.VR) are backward compatible.
Power Up: Changes take effect immediately.
User Interface Location: File Menu
$FILECOMP.$variable
Minimum: 0 Default: 0 Max imum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: File Backward Compatibility Switches
Description: Compatibility switches can be set so that older versions of software (V4.40 and
earlier) can read variables and TPP programs written for V5.11 and later. There are two switches:
 · $TPP - If set to TRUE, TP programs are backward compatible.
 · $VARIABLE - If set to TRUE, variable files (.VR) are backward compatible.
Power Up: Changes take effect immediately.
User Interface Location: File Menu
$FILE_ERRBCK[1-10] STRUCTURE
Name: Error Log Files Backup Table Structure
Description: The entries in this table tell the system what files are backed up during a "file
backup" operation from the teach pendant. This table is used when you select [BACKUP]/Error
Log. This table is also used when you select [BACKUP]/All of the above.
This table is NOT used for loading during controlled start when user selects restore function.
$FILE_ERRBCK.$file_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Error Log Name
Description: Specifies the name of the error log to be backed up. $FILE_ERRBCK[1].
$file_name is set to "ERRALL.LS" and $FILE_ERRBCK[2].$file_name is set to "ERRACT.LS".
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variable screen.
$FILE_ERRBCK.$func_code
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Function Code
Description: Must be set to 0.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variable screen.
$FILE_ERRBCK.$prog_name
Minimum: "" Default: " " Maximum: " "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Program Name (to backup)
Description: Specifies the program backed up if this is a backup entry in the table.
$FILE_ERRBCK[1].$prog_name and $FILE_ERRBCK[2].$prog_name are set to "*SYSTEM*".
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variable screen.
$FILE_ERRBCK.$modifier
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Modifier
Description: Must be set to 0.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variable screen.
$FILE_MASK
Name: File mask
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Description: Determines whether to mask out "unknown" files in the File Menu.
Description: Before this variable was created, "unknown" files were masked out in the File
Menu. Also, they were limited to two character extensions. To continue to do this, set
$FILE_MASK = TRUE.
To display 3 character file extensions, set $FILE_MASK = FALSE. When it is false, the File Menu
will display files as follows:
1. Wildcard DIR requests, such as *.pc, will display all .pc files as well as any compressed
versions (.pcc).
2. For *.*, display ALL files with 2 and 3 char extensions. No masking is done.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variable screen
$FILE_MAXSEC
Minimum: -16000 Default: -100 Maximum: 16000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: File maximum sector
Description: Determines the number of sectors to allocate for the CMOS RAM disk. One sector
is 512 bytes.
During the format command, the memory is removed from the CMOS memory pool and set aside
as the RAM disk (RD:) storage device. If not enough CMOS memory is available, then
$FILE_MAXSEC needs to be set smaller and the RAM disk reformatted.
$FILE_MAXSEC may be set to zero if a RAM disk is not required. It may also be set to a
negative number in which case the memory is allocated from DRAM instead of CMOS. However,
DRAM files will be lost when power is turned off.
Power Up: Only effective during the format command.
User Interface Location: SYSTEM Variables screen
$FILTSK[1] STRUCTURE
Name: PROFIBUS task ID
Description: This system variables are used to create the task.
Power Up: You must perform a cold or hot start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$FILTSK[1].$l un
Minimum: 0 Default: 158 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TASK LUN
Description: For internal use only. Do not modify this system variable. Task LUN of task.
Power Up: SYSTEM Variables screen
$FILTSK[1].$priority
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Task priority
Description: For internal use only, Do not modify this system variable. 0 : The default priority is
used.
Power Up: You must perform a cold or hot start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$FILTSK[1].$sid
Minimum: 0 Default: 92 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Softparts ID
Description: For internal use only. Do not modify this system variable. Task Softparts ID of task.
User Interface Location: SYSTEM Variables screen
$FILTSK[1].$startmd
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Indicate the start mode when this task run.
Description: For internal use only. Do not modify this system variable.
0 : every mode.
1 : COLDSTART
Power Up: You must perform a cold or hot start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$FILTSK[1].$t id
Minimum: 0 Default: 182 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TASK ID
Description: For internal use only. Do not modify this system variable. Task ID of task.
User Interface Location: SYSTEM Variables screen
$FRM_CHKTYP
Minimum: -2 Default: -1 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Switch Frame Check Type
Description: -1 = Prohibits FWD/BWD between two points which have different frame numbers.
-2 = System does not check frame number at FWD and BWD. System does not change the
frame number ($MNUFRAME_NUM, $MNUTOOL_NUM) when user
FWD/BWD execute past a
frame change.
2 = System does not check frame number at FWD and BWD. System changes the
frame number ($MNUFRAME_NUM, $MNUTOOL_NUM) when user FWD/BWD
execute past a frame change.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$FSAC_DEF_LV
Minimum: -1 Default: -1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: FTP Server Access Control Default Access Level
Description: This defines the access level given to a remote FTP client logging into the robot if
$FSAC_ENABLE is 1 and if no match is found with IP address in $FSAC_LIST[]. Access levels
are:
-1: No Access
0: Operator Level (read only)
1: Programmer Level
2: Setup Level
3: Install Level (full write access)
This variable is saved as part of SYSFSAC.SV.
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen
See Also:SYSTEM R-J3 ECBR-FTP Interface Setup and Operations Manual
$FSAC_ENABLE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: FTP Server Access Control Enable Flag
Description: When set to 1, enables checking of remote FTP clients when logging into robot to
use robot FTP server. If enabled FTP access through robot FTP server is granted based on
matching $FSAC_LIST.$IP_ADDRESS[], and using associated access level ($FSAC_LIST.
$ACCESS _LVL); or using $FSAC_DEF_LVL if no match. (Saved in SYSFSAC.SV)
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen
See Also:SYSTEM R-J2 ECBR-FTP Interface Setup and Operations Manual
$FSAC_LIST[1-20] STRUCTURE
Name: FTP Server Access Control Default Access Level
Minimum: MIN_FSAC_LST Default: DEF_FSAC_LST Maximum: MAX_ FSAC_LST
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: FSAC_LST _T
Description: See $FSAC_ENABLE. (Saved in SYSFSAC.SV)
Power Up: Effective immediately
User Interface Location: SYSTEM Variables screen
See Also:SYSTEM R-J2 ECBR-FTP Interface Setup and Operations Manual
$FSAC_LIST[1] .$access_lvl
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: FTP Server Access Control List Access Level
Description: Contains list of hosts which can use FTP server on robot based on associated
Access Level. Access Level can be :
-1 - no access (useful if use $FSAC_DEF_LVL but want to exclude one)
0 - operator Level (read only)
1 - program level
2 - setup level
3 - installation level (full write permissions)
(Saved in SYSFSAC.SV)
Power Up: Takes effect immediately
User Interface Location: SYSTEM Variables screen
$FSAC_LIST[1] .$ip_address
Minimum: "" Default: " " Maximum: " "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: FTP Server Access Control List
Description: Contains list of hosts which can use FTP server on robot based on associated
Access Level. (Saved in SYSFSAC.SV)
Power Up: Takes effect immediately
User Interface Location: SYSTEM Variables screen
$FTP_DEF_OW
Minimum: 0.0 Default: 0.0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: FTP Default Overwrite behavior
Description: Defines whether FTP server on robot will allow file overwrites on robot or not.
Power Up: Requires cold start to take effect
User Interface Location: SYSTEM Variables screen
See Also:SYSTEM R-J2 ECBR-FTP Interface Setup and Operations Manual
$GE_INT_CFG STRUCTURE
Name: Genius Interface Configuration
Description: This variable structure contains configuration information for the Genius interface
option. This system variable has no effect and might be left at the default value if the Genius
interface option is not installed.
Individual fields within this structure are described below.
Power Up: N/A
User Interface Location: SYSTEM Variables screen
$GE_INT_CFG.$clr_last_st
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Clear Last State
Description: This field is used in conjunction with the $GE_INT_CFG.$PC_BUS_ADDR system
variable.
If the PC at the bus address specified in $GE_INT_CFG.$PC_BUS_ADDR is no longer
communicating on the bus, the state of the inputs received from that PC are either zeroed or left
at their last state, depending on the setting of $GE_INT_CFG.$CLR_LAST_ST.
If $GE_INT_CFG.$CLR_LAST_ST = TRUE, the inputs will be set to zero.
If $GE_INT_CFG.$CLR_LAST_ST = FALSE, the inputs will be left at their last state.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: $GE_INT_CFG.$PC_BUS_ADDR
$GE_INT_CFG.$pc_bus_addr
Minimum: -1 Default: -1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PC Bus Address
Description: This system variable is used in conjunction with the $GE_INT_CFG.$clr_last_st to
provide fail safe functionality in the event of a communication loss with the GEFanuc PC.
$GE_INT_CFG.$PC_BUS_ADDR is set to the bus address of the GEFanuc PC that is sending
output data to the robot.
Accepted settings for this system variable are -1 through 31. However, 0 through 31 are valid bus
addresses for the PC. The value -1 is an invalid address which is used to disable the
functionality.
If the PC at the bus address specified in this system variable is no longer communicating on the
bus, the state of the inputs received from that PC are either zeroed or left at their last state,
depending on the setting of $GE_INT_CFG.$clr_last_st.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: $GE_INT_CFG.$clr_last_st
$GENOV_ENB
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: General Override Enable
Description: Enables changes to the general override via the %UP and %DOWN keys. This
variable can be used to prevent unauthorized override changes. If this variable is set to FALSE,
changes are prohibited and pressing the %UP and %DOWN keys has no effect.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$GROUP STRUCTURE
Name: Group Dependent Motion Variables
Description: Motion parameters that can change from one motion to the other but remain
effective for the entire motion interval once the motion is issued and regardless of when
subsequent changes to the variables are made. Individual fields within this structure are
described below.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$accel_ovrd
Minimum: 0 Default: 0 Maximum: 500
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Acceleration/deceleration Override
Description: When $USERELACCEL is TRUE:
actual acceleration/deceleration time = usual acceleration/deceleration time * $ACCEL_OVRD /
100.
If $ACCEL_OVRD = 0 it is treated as if it were 100. In the KAREL system, if RELACCEL is
defined in associated data, actual acceleration/deceleration time = usual acceleration/dec
eleration time * ($ACCEL_OVRD/100) * (RELACCEL/100).
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$accu_num
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Accuracy Area Number
Description: Accuracy area number used in this motion.
User Interface Location: SYSTEM Variables screen
$GROUP[1].$a rmload
Minimum: 0.0 Default: 0.0 Maximum: 10000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Weight of Arm Payload
Description: Weight of payload on robot arm during current motion in Kg.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$asymfltrenb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Asymmetric Filter Enable
Description: Reserved for Internal use by FANUC Robotics. Core TurboMove Joint Softpart sets
$asymfltrenb. If TRUE, asymmetric filter is used for motion with PTP short motion.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cartfltrenb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Cartesian filter enable
Description: Internal use. Core Cartesian Softpart sets $cartcartenb. If TRUE, the Cartesian
filter is used for motion with Cartesian motype.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cnstnt_path
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Constant Path
Description: Running the same taught program at different speed overrides will produce the
same path if $cnstnt_path is set to TRUE. This is called the constant path feature. This feature
can be turned off by setting $cnstnt_path to FALSE, which means the robot path will vary as
speed override changes. If this feature is enabled, be careful when changing the speed override
after the program has started. In this case the path will not be the same as the taught path. If a
change in override setting is required during program run, pause the program (HOLD or release
the SHIFT key), change the speed override setting, and then resume the program.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cnt_accel1
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Continuous Acceleration Time 1
Description: Reserved for Internal use by FANUC Robotics. Used for Cartesian Filter Softpart.
This is the time in msec of the first stage Cartesian Filter for motions with CNTxx termtype.
Not supported in this release.
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cnt_accel2
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Continuous Acceleration Time 2
Description: Reserved for Internal use by FANUC Robotics. Used for Cartesian Filter Softpart.
This is the time in msec of the second stage Cartesian Filter for motions with CNTxx termtype.
Power Up: Effective immediately
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cnt_dyn_acc
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Continuous dynamic acceleration.
Description: Allow long filter to short filter switching for a sequence of continuous motions.
0: For continuous motions, the planner only allows short to long filter switching, and it does not
allow long filter lengths to become shorter.
1: Allows long filter length to short filter length switching.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cnt_shortmo
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Continuous Short Motion Enable
Description: Enables/disables acceleration time optimization for NODECEL or VARDECEL
termtype moves.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$cnt_speedup
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Enable/Disable speedup
Description: This is switch to enable/disable maxaccel function (fast acceleration/ deceleration
feature) for Turbo move and standard short motion.
If termination type of the motion is cnt 0..100 and $cnt_shortmo = TRUE and the motion is not
short motion and $cnt_speedup is TRUE, max acceleration function for Turbo move /Standard
short motion is applied.
Power Up: Effective with next motion
User Interface Location: No
$GROUP[1].$contaxisvel
Minimum: 0.001 Default: 100.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Continuous Axis Velocity (Used by the Continuous Turn Axis option)
Description: For systems installed with continuous turn axis, $contaxisvel indicates the velocity
of continuous turn motion in percentage. $contaxisvel can have values between -100.0 and
+100.0. The magnitude is a percentage of maximum joint speed. The sign indicates which (joint)
direction (+ or -) to turn continuously.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$crccompenb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Cartesian Circular Compensation Enable
Description: Reserved for Internal use by FANUC Robotics. Core Cartesian Softpart sets
$crccompenb. If TRUE, path accuracy improvement for circular motype is enabled.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$deceltol
Minimum: 0.0 Default: 0.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Percentage of Deceleration
Description: When VARDECL termtype is selected, $deceltol is used to specify the amount of
deceleration in percentage. $deceltol=n means n% deceleration.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$dyn_i_comp
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Dynamic Compensation
Description: Enables feature supported by some robot libraries for dynamic speed and
acceleration control.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$ext_indep
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Independent Extended Axes
Description:
If set to TRUE, the extended axes might stop at a different time from the robot axes. All axes
start at the same time, but have different stopping times. If set to TRUE, the variable $GROUP.
$ext_speed is used as a percentage multiplier of the $PARAM_GROUP.$jntvellim for the
extended axes to compute the speed for the independent motion. If set to FALSE, both robot and
extended axes start and stop at the same time with the total motion time being the maximum of
either the planned robot motion time (based on $GROUP.$speed) or the planned extended axes
motion time (based on $GROUP.$ext_speed).
Power Up: Effective on the next motion.
User Interface Location: SYSTEM Variables screen
$GROUP[1].$ext_speed
Minimum: 0.0 Default: 100.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Extended Axes Speed Percentage
Description: Used when extended axes are present. If the value is 1..100, then the motion for
the extended axes is planned with a speed of:
$PARAM_GROUP[].$jntvellim[] = $group[].$ext_speed * 0.01
If the motion is simultaneous ($group.$ext_indep = FALSE), then the motion which dominates,
the robot or the extended axes, will determine the total motion interval.
If the value is zero, then for JOINT motion and non-integral Cartesian motion, the extended axes
speed is determined from the $SPEED value the same as for a JOINT motion. Integral axes
motion planning is done with $JNTVELLIM for Cartesian motion if the value is zero.
Power Up: Effective with next motion.
User Interface Location: SYSTEM Variables screen
<="">$GROUP[1].$motype
<="">
Minimum: MT_JNT_JOG Default: 6 Maximum: MT_CIRCULAR
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: MOTYPE_E
Name: Motion Type
Description: Defines the type of motion interpolation used for KAREL motion statements using
the following values:
6 = JOINT
7 = LINEAR
8 = CIRCULAR
For the KAREL user, the value of $MOTYPE can be overridden in a path by setting the
SEGMOTYPE field in the standard associated data.
The default value is set each time a program is executed.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$orient_type
Minimum: OR_RS_WORLD Default: 1 Maximum: OR_AES_CIRCLE
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: ORIENT_E
Name: Orientation Type
Description: In a Cartesian move, $ORIENT_TYPE specifies the type of orientation control to
be used. When $MOTYPE is LINEAR. The choices are:
1 = RSWORLD, two angle orientation control
2 = AESWORLD, three angle orientation control (default)
3 = WRISTJOINT, wrist-joint orientation control
For CIRCULAR motion, three angle orientation planning is used regardless of the value of
$orient_type.
The appropriate default value of $orient_type is set each time a program is executed.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$pathres_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: (Original) Path resume enable
Description: Reserved for Internal use by FANUC Robotics. Softpart options sets $pathres_enb.
If set to TRUE, when a stopped motion is resumed, robot moves to stopped position first before
proceeding to destination position. If set to FALSE, robots moves directly from its current position
to the destination position.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$p ayload
Minimum: 0.0 Default: 0.0 Maximum: 10000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Weight of Payload
Description: Weight of payload during current motion in Kg.
Power Up:
User Interface Location: SYSTEM Variables screen
$GROUP[1].$reserve1
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Reserved for future use.
Description: A void variable reserved for future use by FANUC Robotics.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$rotspeed
Minimum: 0.001 Default: 90.0 Maximum: 1440.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Rotational Speed
Description: The command speed for orientation change in Cartesian motion. If the orientation
change dominates, the rotation of the orientation axes as defined by $GROUP.$orient_ty pe is
commanded to this value in deg/sec. This variable is only used for KAREL motion. For TPE
motion it is replaced by the deg/sec speed unit in the motion instruction.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$seg_time
Minimum: 0 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Segment Time
Description: For KAREL systems only. $seg_time controls the method used to compute
segment time (the time to move from a start position to a destination position). Unit is
millisecond.
Default $seg_time is 0. Also each time a program is executed, $seg_time is set to 0.
When $seg_time is 0, system uses $SPEED to plan for the segment time. This is the normal
(default) mode of the operation for the system, where the speed remains constant but the travel
time varies based on segment distance.
For the special case where the user wants to have a direct control over segment time, $seg_time
can be used. By setting $seg_time is a positive value in units of msec, the system ignore
$SPEED and set the segment time equal to the specified $seg_time. this means that the speed
will vary depending on segment distance.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
<="">$GROUP[1].$segtermtype
<="">
Minimum: TT_STOP Default: 1 Maximum: TT_CONTINUOUS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: TERMTYPE_E
Name: Segment Termination Type (for KAREL paths only)
Description: Defines the default termination type at the end of each intermediate path node (all
but the last node in a path), using the following values:
1 = FINE 4 = NODECEL
2 = COARSE 5 = VARDECEL
3 = NOSETTLE
The value of $SEGTERMTYPE can be overridden in a path by setting the SEGTERMTYPE field
in the standard associated data.
The default value is set each time a program is executed.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$sm_profile
Minimum: SM_CLASS_1 Default: 0 Maximum: SM_CLASS_4
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SM_PROFILE_E
Name: Short Motion Profile
Description: Used for computation of the planning segment time when the segment time is not
an exact multiple of the Interpolation time.
0: The segment time will be extended to next multiple of interpolation time.
1: The segment time will be rounded off to a multiple of interpolation time.
2: The segment time will be trimmed to a previous multiple of interpolation time.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
<="">$GROUP[1].$speed
<="">
Minimum: 0.001 Default: 300.0 Maximum: 3000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motion Speed
Description: The motion will proceed for Linear and Circular with the specified command value
in mm/sec. For JOINT motion, the command value is a percentage of $param_group.$jntvellim
as scaled by the ratio of $speed to $param_group.$speedlimjnt.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$ta_profile
Minimum: TA_DBL_LIN Default: 0 Maximum: TA_SINE
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: TA_PROFILE_E
Name: Time Distance Profile
Description: Time distance acceleration/deceleration profile.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
<="">$GROUP[1].$termtype
<="">
Minimum: TT_STOP Default: 1 Maximum: TT_CONTINUOUS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: TERMTYPE_E
Name: Termination Type
Description: Defines the type of KAREL motion termination at the end of an interval using the
following values:
1 = FINE 4 = NODECEL
2 = COARSE 5 = VARDECEL
3 = NOSETTLE
The default value of $TERMTYPE is set each time a program is executed.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$time_shift
Minimum: 0 Default: 0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Time Shift (for local condition handlers)
Description: If option is installed, when $USETIMESHFT is TRUE: $time_shift specifies the
time, in milliseconds, to shift the triggering of local condition handler (from where the system
would normally triggers).
User Interface Location: SYSTEM Variables screen
<="">$GROUP[1].$uframe
<="">
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: User Coordinate Frame
Description: $uframe is used by KAREL system only. For the teach pendant programmer, the
corresponding variable is $MNUFRAME.
$uframe is the position of a user frame of reference. All programmed positions are defined with
respect to $uframe.
Any value you assign to $uframe is defined with respect to the world coordinate system. By
default, $uframe is identical to the world coordinate system, meaning $uframe = $NILP.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$use_cartacc
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use/unused Cartesian Mincycle Algorithm (For systems with this option)
Description: This variable is ignored for systems without the Cartesian mincycle option.
If the Cartesian mincycle option is installed, $use_cartacc enables or disables the Cartesian
mincycle feature. Cartesian mincycle option is used to improve Cartesian cycle time.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$use_config
Minimum: 0 Default: 1 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use Configuration
Description: To move along a Cartesian (linear or circular, for example) path, the configuration
of the start position and destination position must be identical. Otherwise it is impossible to trace
out the Cartesian path. $use_config can be used to decide what to do if the start configuration is
inconsistent (different) from the destination configuration in a Cartesian move.
If the value of $use_config is TRUE, the inconsistency causes an error that pauses the program.
If the value is FALSE, system always chooses the start configuration to perform the Cartesian
move (regardless of the taught destination configuration).
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$use_pathacc
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use/unused Path Acceleration (for future use)
Description: Flag for turn on/off path acceleration function.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$use_shortmo
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use/unused of Short Motion
Description: $use_shortmo enables or disables the optional JOINT motion mincycle algorithm.
(TurboMove option).
If $use_shortmo is TRUE, minimum motion time is planned making use of motor information in
$TSR_GRP and current configuration of the robot. This feature is used in conjunction with sliding
mode servo control option.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$use_turns
Minimum: 0 Default: 1 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use Position Turn Numbers
Description: For JOINT motion, if $USE_TURNS is true (default), then the exact turn number
specified in the destination position configuration string will be used for the motion. If
$USE_TURNS is false, for JOINT motion, the turn number of the destination position is ignored
and the system moves along the shortest joint angle path to the destination.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$use_wjturns
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use Wristjoint Turn Number
Description: If set to TRUE, then use specified destination turn number for wristjoint motion. If
set to TRUE, the wristjoint may `wrap' or `unwrap' more than 180 degrees during the motion. If
set to FALSE, the wristjoint motion will be the same as OR_RSWORLD orient type and take the
shortest rotational path.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$usemaxaccel
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use/unused Maximum Acceleration.
Description: $usemaxaccel enables or disables the fast acceleration/deceleration feature. If it
set to TRUE, the required acceleration time is reduced as a function of motion speed.
If it set to FALSE, the normal acceleration time is applied.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$userelaccel
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use/unused Relative Acceleration (acceleration override).
Description: $userelaccel enables or disables the acceleration override feature.
If $userelaccel is TRUE, acceleration time is multiplied by $accel_ovrd.
If $userelaccel is FALSE, $accel_ovrd is ignored by the system when computing acceleration
time.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$GROUP[1].$usetimeshft
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use/unused Time Shift for KAREL Path local condition (for future use).
Description: $usetimeshft enables or disables adjusting the timing of local conditions feature.
If $usetimeshft is TRUE, the system variable $timeshift can be used to adjust the timing of local
condition handlers from outside the KAREL program (optional feature). If $usetimeshft is FALSE,
the value of $timeshift will be ignored.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
<="">$GROUP[1].$utool
<="">
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: Tool Coordinate System
Description: $utool is used by KAREL system only. For TPE user, the corresponding variable is
$MNUTOOL.
$utool defines the location and orientation of the tool that is attached to the faceplate. The
position in $utool is defined with respect to a fixed coordinate system on the robot faceplate and
is the origin of the TOOL FRAME.
By default, the value of $utool is set to $NILP, which means the position of the TCP is identical to
the location and orientation of the faceplate coordinate system.
You must change the value of $utool to define the specific tool you are using.
Power Up: Effective with next motion
User Interface Location: SYSTEM Variables screen
$HBK_IO_IDX
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Mapped HBK (Hand broken signal) I/O index number
Description: Not used
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$HBK_IO_TYPE
Minimum: 0 Default: 1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Mapped HBK (Hand broken signal) I/O type
Description: Not used
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$HBK_MAP_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Mapped HBK (Hand broken signal) is enabled
Description: Not used
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen$HOST_SHARED STRUCTURE
Name: Host Shared
Description: Array of structures defining the Internet node name to address mapping on the
controller. This array is used for the same purpose as the /etc/hosts file on BSD UNIX systems.
Individual members of structure are described below.
Power Up: Requires a cold start if the element corresponding to $HOSTNAME is changed.
Changes to other elements which correspond to Client connections take effect immediately. This
should not include HOSTNAME or ROUTERNAME entries. This structure is saved in the
SYSHOST.SV file, and can be shared between robots.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_SHARED[1].$h_addr
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Node Address
Description: This is the Internet (IP) address of the node defined by the first element of
$HOST_SHARED array. It should be unique across the network. It is a string and should have
the following format: DDD.DDD.DDD.DDD where DDD is a decimal number, 0 <= DDD <= 255.
Power Up: See $HOST_SHARED.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_SHARED[1].$h_addrtype
Minimum: 0 Default: 0 Maximum: 99
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Address Type
Description: An integer Internet variable whose value is 2 by default and should not be
changed.
Power Up: See $HOST_SHARED.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_SHARED[1].$h_length
Minimum: 0 Default: 0 Maximum: 17
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Length
Description: An integer Internet variable whose value is 4 by default and should not be
changed.
Power Up: See $HOST_SHARED.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_SHARED[1].$h_name
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Node Name
Description: A string of up to 32 characters representing the node name of the first element in
$HOST_SHARED array. Example: KCL>set var $HOST_SHARED[1].$H_NAME='MICKEY'
Power Up: See $HOST_SHARED.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[8] STRUCTURE
Name: Host Client Tag Configuration Structure
Description: Variable structure containing configuration information for Host Client Tags. This
information is used to define how they are used in the R-J3 controller. These variables are arrays
of 8 elements and are available only if the KSL, MOTET or MAP option has been installed.
Power Up: Determined on a per-field basis. See individual fields for specifics.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$comment
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Comment
Description: Provides an area to include up to 16 characters of information used to describe the
communications tag being defined.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$mode
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Mode
Description: Not currently used.
Power Up: Not currently used.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n]. $oper
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Host Client Tag Operation
Description: Specifies the state to which the tag will attempt to be set at powerup.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n] .$path
Minimum: "" Default: " " Maximum:""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Path (Current)
Description: Specifies the current (default) Host path. When a file-spec does not include the
path, this default value is used.
Power Up: Changes to this variable take effect immediately. Upon power-up, the startup Host
path is copied into the current Host path, where you can modify it as necessary.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$port
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Port
Description: Specifies the serial port over which this tag will operate. This is not required on
network based protocols such as MAP and MOTET.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$protocol
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Protocol
Description: Specifies the name of the protocol that will be used with the tag.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[1] .$pwrd_timout
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: ULONG
Name: Host Client Tag Password Timeout
Description: Specifies the default timeout value, after which an existing connection's user name
will be set to "anonymous," and password will be set to "guest."
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$remote
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Remote Host Name
Description: Specifies the remote host name to which a connection will be made. This is used
by certain host communications services such as Information Report.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$reperrs
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Host Client Tag Error Reporting Flag
Description: When set to TRUE, indicates that errors sent to the ERROR LOG will also be sent
to this tag via the MMS Information Report service.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n ].$state
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Host Client Tag State
Description: Specifies the current state of the tag.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[1] .$strt_path
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Path (Startup)
Description: Specifies the startup Host path.
Power Up: This variable takes effect at cold start. Upon power-up, the startup Host path is
copied into the current Host path, where you can modify it as necessary.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[1] .$strt_remote
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag Remote Host Name (Startup)
Description: Specifies the startup (default) remote host name to which a connection will be
made. This is used by certain host communications services such as Information Report.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[n].$timeout
Minimum: 0 Default: 15 Maximum: 2147483646
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Host Client Tag Timeout
Description: Specifies the number of minutes of inactivity on the network before a connection
will be concluded by the R-J2 controller. This variable takes effect at cold start.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTC_CFG[1] .$username
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Client Tag User Name
Description: Specifies the default user name to be used when establishing communications with
a remote Host.
Power Up: Takes effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTENT[1-12] STRUCTURE
Name: Host Entry
Description: Array of structures defining the Internet node name to address mapping on the
controller. This array is used for the same purpose as the /etc/hosts file on BSD UNIX systems.
Individual members of structure are described below.
Power Up: Requires a cold start if the element corresponding to $HOSTNAME is changed.
Changes to other elements which correspond to Client connections take effect immediately.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTENT[1].$h_addr
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Node Address
Description: This is the Internet (IP) address of the node defined by the first element of
$HOSTENT array. It should be unique across the network. It is a string and should have the
following format: DDD.DDD.DDD.DDD where DDD is a decimal number, 0 <= DDD <= 255.
Power Up: See $HOSTENT.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTENT[1].$h_addrtype
Minimum: 0 Default: 0 Maximum: 99
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Address Type
Description: An integer Internet variable whose value is 2 by default and should not be
changed.
Power Up: See $HOSTENT.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTENT[1].$h_length
Minimum: 0 Default: 0 Maximum: 17
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Length
Description: An integer Internet variable whose value is 4 by default and should not be
changed.
Power Up: See $HOSTENT.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTENT[1].$h_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Node Name
Description: A string of up to 32 characters representing the node name of the first element in
HOSTENT array. Example: KCL>set var $HOSTENT[1].$H_NAME='MICKEY'
Power Up: See $HOSTENT.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTNAME
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Hostname
Description: A string of up to 32 characters defining the name which represents the robot on the
network. It should be unique across the network. It must also be defined as an element in the
$HOSTENT array.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP MOTET screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[8] STRUCTURE
Name: Host Server Tag Configuration Structure
Description: Variable structure containing configuration information for Host Server Tags. This
information is used to define how they are used in the R-J3 controller. These variables are arrays
of 8 elements and are available only if the KSL, MOTET or MAP option has been installed.
Power Up: Determined on a per-field basis. See individual fields for specifics.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$comment
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Server Tag Comment
Description: Provides an area to include up to 16 characters of information used to describe the
communications tag being defined.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$mode
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Server Tag Mode
Description: Not currently used.
Power Up: Not currently used.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$oper
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Host Server Tag Operation
Description: Specifies the state to which the tag will attempt to be set at powerup.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$port
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Server Tag PORT
Description: Specifies the serial port over which this tag will operate. This is not required on
network based protocols such as MAP and MOTET.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$protocol
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Server Tag Protocol
Description: Specifies the name of the protocol that will be used with the tag.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$remote
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Host Server Tag Remote Host Name
Description: Specifies the remote host name to which a connection will be made. This is used
by certain host communications services such as Information Report.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$reperrs
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Host Server Tag Error Reporting Flag
Description: When set to TRUE, indicates that errors sent to the ERROR LOG will also be sent
to this tag via the MMS Information Report service.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$state
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Host Server Tag State
Description: Specifies the current state of the tag.
Power Up: Effective immediately.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOSTS_CFG[n].$timeout
Minimum: 0 Default: 0 Maximum: 2147483646
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Host Server Tag Timeout
Description: Specifies the number of minutes of inactivity on the network before a connection
will be concluded by the R-J3 controller. This variable takes effect at cold start.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP Tags screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_ERR STRUCTURE
Name: Host Error Structure
Description: Variable used to set the Facility Mask and Severity Mask for host communications
error reporting such as by the MMS Information Report service. Available only if the KSL,
MOTET or MAP options have been installed.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen or KCL
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_ERR.$ssc_mask[1-4]
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: ULONG
Description: An array containing the Facility Mask and Severity Mask for host communications
error reporting. Available only if the KSL, MOTET, or MAP options have been installed.
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen or KCL
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_PDUSIZ
Minimum: 94 Default: 512 Maximum: 4093*
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name:
Description: Specifies the maximum number of octets or bytes that can be used on one
message Protocol Data Unit (PDU). Available only if the KSL, MOTET or MAP options have been
installed.
* The maximum value differs for each communications package as follows:
KSL 4093
MOTET 1250
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen or KCL
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$HOST_PWRD[1]
Minimum: "" Default: " " Maximum: ""
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: STRING
Name:
Description: An array containing the passwords associated with each USERNAME.
Power Up: Effective immediately.
User Interface Location: SYSTEM FTP Host Comm Setup Screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$IMSAVE_DONE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Indicator that IMAGE memory has been saved to FROM.
Description: During controlled start the system image area can be saved just one time.
Typically, this is done on the transition from controlled to cold start. When $IMSAVE_DONE is
FALSE during controlled start, KAREL programs and variables are loaded into image. Also,
system options can be loaded before the imsave is done. All system options and KAREL
program elements can be permanently saved to FROM when the image save is done.
Power Up: No
User Interface Location: SYSTEM Variables screen, function pull up for cold start.
$INCL_ADJUST STRUCTURE
Name: Setup of torch posture adjustment function
Description: These system variables are used by torch posture adjustment function. Individual
fields within this structure are described below.
Power Up: Changes to these variables take effect immediately.
User Interface Location: Torch posture adjustment screen
$INCL_ADJUST.$p art_of_prg
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: WHOLE/PART of converted range
Description: This system variable is used to select the range of conversion in program where
WHOLE : an entire program is converted; PART : a specified range is only converted
Power Up: Changes to this variable take effect immediately
User Interface Location: Torch posture adjustment screen
$INCL_ADJUST.$s tick_out
Minimum: -10 Default: 0 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Stick out value
Description: This system variable is stick out value for adjustment.
Power Up: Changes to this variable take effect immediately
User Interface Location: Torch posture adjustment screen
$INCL_ADJUST.$t ravel_angl
Minimum: -5 Default: 0 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Travel angle value
Description: This system variable is travel angle value for adjustment.
Power Up: Changes to this variable take effect immediately
User Interface Location: Torch posture adjustment screen
$INCL_ADJUST.$w ork_angl
Minimum: -5 Default: 0 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Work angle value
Description: This system variable is work angle value for adjustment.
Power Up: Changes to this variable take effect immediately
User Interface Location: Torch posture adjustment screen
$INTP_PRTY
Minimum: 0 Default: 0 Maximum: 0x7FFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Interpreter Priority
Description: Priority which interpreter executes as interruption routine. Values should be as
follows:
0:interrupt routine runs at higher priority than path planner. This might result in the robot slowing
down during path motion.
0 90: Interrupt routine runs at lower priority than teach pendant user interface logic.
Power Up:
User Interface Location: SYSTEM Variables screen
$INTPMODNTOL
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Early Motion Completion Time
Description: Specifies the time, in milliseconds, by which the interpreter the motion ends early.
Power Up:
User Interface Location: SYSTEM Variables screen
$IO_AUTO_CFG
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Automatic I/O configuration
Description: If $IO_AUTO_CFG is TRUE, at power-up, any digital or analog ports that have not
been assigned will have assignments generated automatically. If set to FALSE, these
assignments will not be made. Note that this does not affect automatic assignment of process I/O
board DIN's and DOUT's as user operator panel signals.
Power Up: Requires cold start to take effect
User Interface Location: SYSTEM Variables screen
$IO_CYCLE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Start SLC-2 Cycling even if no SLC-2 I/O devices
Description: This feature is not supported.
Power Up: This is only effective at cold start.
User Interface Location: SYSTEM Variables screen
$IO_SCRN_UPD
Minimum: 8 Default: 32 Maximum: 250
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: I/O Dynamic Screen Update Time
Description: This is the time, in milliseconds, between dynamic updates of the the I/O related
menus on the teach pendant. The shorter this time is made, the more likely it is to affect other
system performance areas.
Power Up: No
User Interface Location: SYSTEM Variables screen
$IOLNK[16] STRUCTURE
Name: I/O Link
Description: I/O link variables. Currently not supported.
Power Up:
User Interface Location: SYSTEM Variables screen
$IOLNK[1].$i nput_n
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: I/O link input number.
Description: I/O link number of input points. Currently not supported.
Power Up:
User Interface Location: SYSTEM Variables screen
$IOLNK[1].$output_n
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: I/O link output number.
Description: I/O link number of output points. Currently not supported.
Power Up:
User Interface Location: SYSTEM Variables screen
$IOLNK[1].$rack
Minimum: 0 Default: 0 Maximum: 15
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: I/O link rack.
Description: I/O link rack number. Currently not supported.
Power Up:
User Interface Location: SYSTEM Variables screen
$IOLNK[1].$slot
Minimum: 0 Default: 0 Maximum: 40
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: I/O link slot.
Description: I/O link slot number. Currently not supported.
Power Up:
User Interface Location: SYSTEM Variables screen
$IS_DMR STRUCTURE
Name: Integral Servo Driven Tool (ISDT) Dynamic Master Record Variable Structure
Description: This set of variables provide dynamic mastering information of ESDT Process
Axes. See the descriptions of the individual fields below.
User Interface Location: SYSTEM Variables screen
$IS_DMR.$ignore_motn
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ISDT System Variable: FLTR task update this variable to disable process axes motion.
Description: This variable is set to TRUE when $IS_DMR.$master_done is set to 0. At that time,
all process axes speed commands are ignored. An error is posted to inform Application Tool. You
must set $IS_DMR.$ignore_motn to FALSE so that process axes can be controlled again.
Power Up: This value is initialized to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$IS_DMR.$master_done
Minimum: -1 Default: -1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: ISDT System Variable: FLTR task update this variable to inform application.
Description: When this variable is set to -1 (default) the master_done function is disabled.
Application Tool should set master_done to 1 after mastering process axes. When sever servo
errors occur, the ISDT Softpart sets master_done to 0. When Application Tool detects
master_done = 0, it should remaster the process axes and set master_done to 1 after mastering.
Power Up: This value is initialized to -1 and maintains its previous value over subsequent power
cycles.
User Interface Location: SYSTEM Variables screen
$IS_MCR STRUCTURE
Name: Integral Servo Driven Tool (ISDT) Motion Control System Variable Structure
Description: This set of variables provide motion control and error handling for ISDT Process
Axes. See the descriptions of the individual fields below.
User Interface Location: SYSTEM Variables screen
$IS_MCR.$machinelock
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ISDT System Variable: lock process axes motion
Description: If this variable is set to TRUE, ISDT process axes will not move when motion
command is issued.
Power Up: This value is initialized to FALSE at every power cycles.
User Interface Location: SYSTEM Variables screen
$IS_MCR.$no_stop_err
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ISDT System Variable: revise process axis error severity
Description: When this variable is set to TRUE, the ISDT Softpart and process axes servo
errors will not stop robot motion or applications. If it is set to FALSE, process axes servo error will
stop robot and all applications.
Power Up: This value is initialized to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$IS_MCR.$spc_reset
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ISDT System Variable: serial pulsecoder reset
Description: This system variable is used for performing serial pulsecoder reset. User sets its
value to TRUE, and then perform Cold start sequence to reset serial pulsecoder. Note: This is
the only way to reset pulsecoder for a process axis.
Power Up: This value is initialized to FALSE. It will automatically reset its value back to FALSE
after it has been changed to TRUE.
User Interface Location: SYSTEM Variables screen
$IS_MOR STRUCTURE
Name: Integral Servo Driven Tool (ISDT) Motion Output System Variable Structure
Description: This set of variables provide system information for ISDT Process Axes. These
variables set by FLTR task to reflect the state of the ISDT system. See the descriptions of the
individual fields below.
User Interface Location: System global variable screen.
$IS_MOR.$error_cnt[1-4]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: ISDT System Variable: process axes error count
Description: This variable indicates current error count of each axis. It is set by FLTR at every
ITP. (For internal use only. Do not modify this system variable.)
Power Up: The change to this system variable takes effect immediately.
User Interface Location: None
$IS_MOR.$post_error
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: ISDT System Variable: indicate if there is any ISDT system error or process axis servo
error has been posted
Description: This flag indicates when TRUE that there has been a ISDT error posted. It can only
be reset to FALSE when all errors are cleared and servo power is on.
Power Up: This value is set to FALSE at every power cycles if servo power is on and there is no
other ISDT system error.
User Interface Location: None
$IS_MOR.$servo_ready
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: ISDT System Variable: indicate if servo power is on
Description: This flag indicates when TRUE that ISDT process axes servo power is on and is
ready to move. When FALSE, it indicates that process axes servo has error and the servo power
is off. It is updated by ISDT and FLTR task.
Power Up: This value is set to TRUE at every power cycles if servo power is on.
User Interface Location: None
$IS_MRR STRUCTURE
Name: Integral Servo Driven Tool (ISDT) Motion Reset System Variable Structure
Description: Static variables which are copied on power up from the ISDT User Motion Reset
Record. See the descriptions of the individual fields below.
User Interface Location: SYSTEM Variables screen
$IS_MRR.$endmotn_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ISDT System Variable: enable process axes to stop when INTR end motion occurs
Description: When it is set to TRUE. All process axes stop when any robot stops or robot
application programs are finished. If it is set to FALSE, process axes motion is independent of
robot.
Power Up: This value is initialized to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$IS_MRR.$exp_accel[1-4]
Minimum: 0 Default: 120 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: ISDT System Variable: acceleration time constant for each process axis exponential filter
Description: This exponential filter acceleration time constant can be set at Process Axes Setup
menu or by revising this system variable.
Power Up: The change to this variable takes effect over subsequent power cycles.
User Interface Location: Process Axes Setup Menu or SYSTEM Variables screen
$IS_MRR.$gear_ratio[1-4]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: ISDT System Variable: gear ratio for each process axis
Description: This value should only be changed at Process Axes Setup Menu.
Power Up:
User Interface Location: Process Axes Setup Menu.
$IS_MRR.$jntvellim[1-4]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: ISDT System Variable: specify joint speed limit for each process axis
Description: This variable specifies the joint speed limit in revolution per minute(RPM). If the
issued motion command is greater than this value, a warning message is posted to inform that
the joint speed exceeds this limit. And this joint speed limit value is used for that motion.
This value should only be changed at the Process Axes Setup Menu.
Power Up:
User Interface Location: Process Axes Setup Menu.
$IS_SCR STRUCTURE
Name: Integral Servo Driven Tool (ISDT) System Configuration Variable Structure
Description: IS_SCR record consists of all motion environment set up parameters for process
axes. It is set up at the Process Axes Setup Menu. See the descriptions of the individual fields
below.
Power Up:
User Interface Location: System global variable screen.
$IS_SCR.$axisorder[1-4]
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: ISDT System Variable: mapping between software and servo axis order
Description: This variable is set during process axes setup. If a particular axis' axisorder is set
to zero, there will be no servo support for that axis.
Power Up:
User Interface Location: None
$IS_SCR.$brk_number[1-4]
Minimum: 0 Default: 0 Maximum: 6
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: ISDT System Variable: indicates the brake number assigned for each process axis
Description: This variable is set at Process Axes Setup Menu or set by revising this system
variable.
Power Up: The change to this variable takes effect over subsequent power cycles.
User Interface Location: None
$IS_SCR.$hw_strt_axs
Minimum: 0 Default: 7 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: ISDT System Variable: hardware start axis number for process axes
Description: This variable should only be set during process axes setup.
Power Up:
User Interface Location: None
$IS_SCR.$num_tot_axs
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: ISDT System Variable: total number of process axes installed
Description: This variable is updated by ISDT during process axes setup. You should not set
this value.
Power Up:
User Interface Location: None
$IS_SCR.$rotary_axs[1-4]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: ISDT System Variable: indicates if the axis is rotary or linear axis
Description: For process axis, it is rotary axis, this value should be TRUE. User should not set
this value.
Power Up:
User Interface Location: None
$IS_ERROR STRUCTURE
Name: Integral Servo Driven Tool (ISDT) System Error Buffer Structure
Description: IS_ERROR is a ring buffer, which stores the error codes and the associated
axis#that are posted by ISDT and FLTR tasks. See the descriptions of the individual fields below.
Power Up:
User Interface Location: SYSTEM Variables screen
$IS_ERROR.$bufindx
Minimum: 0 Default: 0 Maximum: ERR_BUF_SIZE
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: ISDT System Variable: the current index of the $IS_ERROR ring buffer
Description: Updated by ISDT and FLTR task.
Power Up:
User Interface Location: None
$IS_ERROR.$err_axis[1 -20]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: ISDT System Variable: the associated process axis number for posted error
Description: Updated by ISDT and FLTR task.
Power Up:
User Interface Location: None
$IS_ERROR.$err_code[2 0]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: ISDT System Variable: stores error code which was posted for a process axis
Description: Updated by ISDT and FLTR task.
Power Up:
User Interface Location: None
$JCR STRUCTURE
Name: Jog configuration record
Description: Assorted system variables that define the jog environment. Individual fields within
this structure are described below.
Power Up: Reset to default value on very cold start.
User Interface Location: SYSTEM Variables screen
$JCR.$jog_dct_ele[1]
Minimum: MIN_INT Default: 0 Maximum: MAX_INT
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name:
Description: The entries in this array are used to display the element in jog coordinate of the
teach pendent. For internal use only.
Power Up:
User Interface Location: SYSTEM Variables screen
$JCR.$jog_dct_ele[2]
Minimum: MIN_INT Default: 0 Maximum: MAX_INT
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name:
Description: The entries in this array is used to display the element in jog coordinate of the
teach pendent. For internal use only.
Power Up:
User Interface Location: SYSTEM Variables screen
$JCR.$jog_dct_nam[1]
Minimum: MIN_INT Default: 0 Maximum: MAX_INT
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name:
Description: The entries in this array are used to determine the softpart name that supports the
jog softpart. For internal use only.
Power Up:
User Interface Location: SYSTEM Variables screen
$JCR.$jog_dct_nam[2]
Minimum: MIN_INT Default: 0 Maximum: MAX_INT
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name:
Description: The entries in this array are used to determine the softpart name which supports
the jog softpart. For internal use only.
Power Up:
User Interface Location: SYSTEM Variables screen
$JCR.$jog_gp
Minimum: 1 Default: 1 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Jog group
Description: Specify which group will be jogged from the teach pendant.
Power Up: Reset to default value on very cold start.
User Interface Location: SYSTEM Variables screen
$JCR.$jog_subgp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Jog sub-group
Description: Specifies whether the sub-group (extended axis) will be jogged using the teach
pendant.
Power Up: Reset to default value on cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1] STRUCTURE
Name: Group 1 Jog configuration record
Description: Assorted system variables define the jog environment for robot group 1.
Power Up: Reset to default value on every cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$cd_jog
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Coordinate jogging
Description: Specified whether or not current jogging mode is coordinate jogging. In the
Coordinate jogging mode when the leader group (current group) is moving.
Power Up: Reset to default value on every cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$fix_ornt
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Fixed Orientation
Description: This variable indicate whether or not the follower will maintain its orientation when
user did a cd jog of leader.
Power Up: Reset to the default value on every cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$follower
Minimum: 0 Default: 0 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Follower group mask
Description: Specifies which groups should follow the current group when coordinate jog mode.
Power Up: Reset to the default value on every cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$jog_coord
Minimum: jog_joint Default: 0 Maximum: jog_aux2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: JOG_COORD_T
Name: Selection of manual feed coordinate system
Description: When you do jog from the teach pendant, specify the kind of jog (manual feed)
$JOG_COORD indicates the currently selected jog coordinate system for the teach pendant,
using the following values:
0 = JOINT
1 = JOGFRAME
2 = WORLDFRAME
3 = TOOLFRAME
4 = USER FRAME ( if option purchased )
$JOG_COORD is automatically set by the teach pendant COORD key on the teach pendant.
Power Up: Reset to default value on every cold start.
User Interface Location: SYSTEM Variables screen
See Also: $SCR_GRP[1].$coord_mask
$JCR_GRP[1].$jog_fine_md
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Jog fine mode
Description: Specify the fine jogging mode. When in fine jogging mode, the robot will not move
continuously, it moves only a fixed distance for one press. To get another move, release and
press jog key again. The speed used is 1% times.
$JOG_GROUP[1].$fine_ovrd times $SCR_GRP[1].$fine_pcnt.
If set to TRUE, the Speed override is 1%. If set to FALSE, the Speed override is 1%-100%.
Power Up: Reset to default value on every cold start.
User Interface Location: SYSTEM Variables screen
See Also: $JOG_GROUP[1].$fine_ovrd, $JOG_GROUP[1].$fine_dis t, $SCR_GRP[1].
$fine_pcnt.
$JCR_GRP[1].$jog_v_fine
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Jog very fine mode
Description: When $JOG_FINE_MD is TRUE, this flag specify a very fine mode. In this mode
the distance and speed is one tenth of the distance and speed of fine mode.
Power Up: Reset to default value on every cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$jog_wrstjnt
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Wrist Joint Jog
Description: Specifies the orientation method used in the Cartesian jogging is wrist joint.
$JOG_WRSTJNT indicates the currently selected orientation method for the teach pendant. If
set to TRUE, wrist joint orientation is used. If set to FALSE, two-angle orientation is used.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$leader
Minimum: 0 Default: 0 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Leader
Description: When this variable is other than 0, it means the follower group will jog in leader's
frame when select jog frame regardless the leader's position.
Power Up: Reset to the default value on every cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$prg_run
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Program running
Description: Specified whether or not program has been run since last jog.
Power Up: Reset to default value on very cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$rtcp_jog
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Remote TCP jogging
Description: Specified whether or not current jogging mode is RTCP jogging. In the RTCP
jogging mode, when user do the orientation jogging the robot hand will revolve around the
remote TCP frame point along the coordinate axis.
Power Up: Reset to default value on very cold start.
User Interface Location: SYSTEM Variables screen
$JCR_GRP[1].$jog_v_fine
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Jog very fine mode
Description: When $JOG_FINE_MD is TRUE, this flag specify a very fine mode. In this mode
the distance and speed is one tenth of the distance and speed of fine mode.
Power Up: Reset to default value on very cold start.
User Interface Location: SYSTEM Variables screen
$JOBPROC_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Job and Process of program sub type
Description: When the value of this variable is 1, you will be able to specify the sub type of a
teach pendant program by this value. The sub types are Job and Process. The sub type is
displayed at the SELECT screen as the follows.
Job program : .JB
Process program : .PR
n generally, Job program is used as main program. Process program is used as sub program.
In the SELECT screen, you can display the program list which has the same sub type if you
press F1, [TYPE].
Power Up: The change takes effect immediately.
User Interface Location: Appears on the SYSTEM Variables screen.
$JOG_GROUP STRUCTURE
Name: Jog Group System Variables
Description: System variable you can modify specifically for your own jog environment.
Individual fields within this structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$JOG_GROUP[1].$fine_dist
Minimum: 0. Default: 0.5 Maximum: 1.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Distance used in Fine Jog Mode
Description: Specifies the distance used in Cartesian fine jog mode. The unit is millimeters.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$JOG_GROUP[1].$fine_ovrd
Minimum: 1 Default: 100 Maximum: 500
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Percentage at Fine Jog Mode
Description: This system variable is a percentage of 1% speed override. This is used to
calculate the jog speed used in the fine jog mode.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: $SCR_GRP[1].$fine_pcnt, $JOG_GROUP[1].$fine_dist
$JOG_GROUP[1].$jogframe
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: Jog Coordinate System
Description: Specifies the current jog coordinate system being used. The system updates it
automatically.
$JOGFRAME is used as the frame of reference for jogging when ``JGFRM'' is selected on the
teach pendant. For most cases, it is convenient to set it to the same value as $UFRAME. It will
allow you to jog the robot along the x,y,z direction defined by $UFRAME.
In some cases you might want to set $JOGFRAME to a different value than $UFRAME. This will
allow you to jog the robot independently of $UFRAME and still permit you to RECORD positions
in reference to $UFRAME.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$JPOSREC_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Record Position Type
Description: Specifies the position type with which to record positions using the RECORD key.
If set to 0, the position will be recorded in xyzwpr representation If set to 1, the position will be
recorded in JOINT representation
Power Up:
User Interface Location: SYSTEM Variables screen
$KAREL_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Enable Display of KAREL Programs in SELECT menu
Description: Enables the display of KAREL programs in the SELECT menu. Setting:
1: Display KAREL programs in the SELECT menu
0: Do not display KAREL programs
Power Up:
User Interface Location: SYSTEM Variables screen. The TPE application sets this to 1 during
software installation on the SETUP APPLICATION screen
$KCL_LIN_NUM
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line numbers for KCL command file output files
Description: Enables the addition of line numbers for KCL command files. If $KCL_LIN_NUM is
set to FALSE, no line numbers appear in output. If set to TRUE, line numbers appear.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$LANGUAGE
Minimum: "" Default: "DEFAULT " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Language
Description: Identifies the current dictionary element. To read, write, or check a dictionary
element, the dictionary name and element number are specified. The dictionary is found by
searching for it in the language specified by
Power Up: No
User Interface Location: SYSTEM Variables screen. Set using the KCL SET LANG command.
$LASTPAUSPOS[5]
Minimum: MIN_JPOS Default: DEF_JPOS Maximum: MAX_JPOS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: JOINTPOS9
Name: Last Robot Position When Program is Paused
Description: When the program is paused, the robot position is recorded in this system variable
automatically.
This position is used to move robot back to the stopped position when a program is resumed.
This variable should be maintained by the system only. Do not change this variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$LIBRARY[1-5]
Minimum: "" Default: " " Maximum: " "
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Name and of the ROBOT LIBRARY Software
Description: Displays the release time name and version of the software ROBOT LIBRARY.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$LNCFG STRUCTURE
Name: Line Track Configuration System Variable Structure
Description: This set of variables controls the mode of operation of Line Tracking. See the
descriptions of the individual fields below.
User Interface Location: SYSTEM Variables screen
$LNCFG.$cart_lntk
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Cartesian filter line tracking
Description: This variable when TRUE indicates that line tracking support the Cartesian filter
scheme.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen.
$LNCFG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Tracking Debug Level (Bit mapped)
Description: For internal debugging use only. Setting this variable might drastically change the
functionality of this system option.
Power Up: This value initializes to 0 and maintains its previous value over subsequent power
cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$group_msk
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Tracking Group Mask
Description: This system variable specifies which motion groups can perform the line tracking.
Power Up: This value initializes to allow group 1 tracking, and will maintain its value over
subsequent power cycles.
User Interface Location: System global variable screen.
$LNCFG.$group_num
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Tracking Group Number
Description: This system variable specifies which motion group will perform the line tracking.
Currently this value is restricted to group 1.
Power Up: This value initializes to group 1 and will maintain its value over subsequent power
cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$int_no_gone
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking INTR Track Destination Gone Error Posting
Description: This variable when TRUE indicates that Track Destination GONE errors which
occur during robot motion should NOT be posted. When FALSE, these errors will be posted
(causing all robot motion to STOP) any time that the current tracking position moves past the
current DOWN Boundary window.
Power Up: This value initializes to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$no_header
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking Program Header Display Flag
Description: This variable when TRUE indicates that the Line Tracking program header data
screen should not be shown within the program DETAIL screens. This value it set by applications
such as PaintTool which supply their own header data menu screens. (Note that this value only
determines whether or not the data is displayed. The data MUST always be present for tracking
programs.)
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$pln_no_gone
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking PLAN Track Destination Gone Error Posting
Description: This variable when TRUE indicates that Track Destination GONE errors which
occur during motion planning should NOT be posted. When FALSE, these errors will be posted,
and all robot motion will STOP.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$rstr_bnds
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking Restore Selected Boundary Value
Description: This variable when TRUE indicates that the previously-selected boundary value will
be restored upon returning to a tracking program from a call to another (tracking or non-tracking)
program. This works in conjunction with the Select Bounds value set within the program Detail
header data to set a default boundary pair. When FALSE, the current boundary value remains
set.
Power Up: This value initializes to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$slc_pt_trig
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use SLC interrupt service to detect the part detect switch.
Description: This variable when TRUE indicates that line tracking will use the slc interrupt
service routine to detect the part detect. This provide a more accurate trigger value of part and
the fast line tracking feature.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen.
$LNCFG.$soft_delay
Minimum: 16 Default: 96 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Track Soft (Adjustable) Delay Time (in ROS TICKs)
Description: This system variable adjusts the tracking prediction delay to account for system
delays other than those due to the servo system.
Power Up: This value initializes to 96 (TICKS) and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$srvo_delay
Minimum: 16 Default: 48 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Track Servo Delay Time (in ROS TICKs)
Description: This system variable adjusts the tracking prediction delay to account for the servo
system delays.
Power Up: This value initializes to 48 (TICKS) and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$sync_timout
Minimum: 1 Default: 120 Maximum: 600
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Tracking Conveyor (Re)Synchronization Time-Out Period
Description: This variable represents the time (in seconds) that the line tracking system will wait
for a part to be detected during the automatic conveyor synchronization sequence. Upon timeout
you will be warned that a time-out occurred and will be automatically returned to the Program
Select menu.
Power Up: This value initializes to 120 (2 minutes) and maintains its previous value over
subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$LNCFG.$t2s_pst_ccn
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking Track-To-Stationary Position Post Continuous Tracking Cancel
Description: This variable when TRUE indicates that a continuous tracking cancel will be
automatically issued at the first program CALL to a non tracking program after returning from a
tracking program. However, when TRUE the cancel routine will cause the robot to pause briefly
before moving to the next stationary position.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen
$LNCFG_GRP STRUCTURE
Name: Line Tracking Configuration Group Structure
Description: This set of variables controls the mode of operation of Line Tracking. See the
descriptions of the individual fields below.
$LNCFG_GRP.$int_no_ gone
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking INTR Track Destination Gone Error Posting
Description: This variable when TRUE indicates that Track Destination GONE errors which
occur during robot motion should NOT be posted. When FALSE, these errors will be posted
(causing all robot motion will STOP) any time that the current tracking position moves past the
current DOWN Boundary window.
Power Up: This value initializes to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen
$LNCFG_GRP.$pln_no_ gone
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking PLAN Track Destination Gone Error Posting
Description: This variable when TRUE indicates that Track Destination GONE errors which
occur during motion planning should NOT be posted. When FALSE, these errors will be posted,
and all robot motion will STOP.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen
$LNCFG_GRP.$rstr_bnds
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Tracking Restore Selected Boundary Value
Description: This variable when TRUE indicates that the previously-selected boundary value will
be restored upon returning to a tracking program from a call to another (tracking or non-tracking)
program. This works in conjunction with the Select Bounds value set within the program Detail
header data to set a default boundary pair. When FALSE, the current boundary value remains
set.
Power Up: This value initializes to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen
$LNCFG_GRP.$soft_delay
Minimum: 16 Default: 96 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Track Soft (Adjustable) Delay Time (in milliseconds)
Description: This system variable adjusts the tracking prediction delay to account for system
delays other than those due to the servo system.
Power Up: This value initializes to 96 (in millisecond). It can be adjusted on the fly to tune line
tracking accuracy.
User Interface Location: System global variable screen
$LNCFG_GRP.$srvo_delay
Minimum: 16 Default: 48 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Track Servo Delay Time (in milliseconds)
Description: This value initializes to 96 (in milliseconds). It can be adjusted on the fly to tune line
tracking accuracy.
Power Up: This value initializes to 48 (in milliseconds) its previous value over subsequent power
cycles.
User Interface Location: System global variable screen
$LNEDTMOD
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Linetracking Editing Mode
Description: When linetracking program is selected and if $LNEDTMOD is
0: user must set trigger value.
1: user can select whether he sets trigger value or not.
Power Up: Change of this variable takes effect immediately
User Interface Location: System global variable screen
See Also: This variable is used for multi-arm linetracking only.
$LNLPR STRUCTURE
Name: Line Track Process Control System Variable Structure
Description: This set of variables provide a process control interface into the Line Tracking
system. Individual fields within the structure are defined below.
Power Up: This value initializes to 48 (TICKS) and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNLPR.$ln_holdmotn
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Track Process Hold Motion
Description: This variable can be set by an application process to cause Line Tracking to hold
all program motion at the next Extreme Position WAIT-FOR-WINDOW event. In this way the
robot can be made to complete only the current motion path rather than all reachable paths
under such circumstances as when a conveyor stops moving.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNLPR_GRP STRUCTURE
Name: Line Track Process Control Group System Variable Structure
Description: This set of variables provide a process control interface into the Line Tracking
system. Individual fields within the structure are defined below.
$LNLPR_GRP.$ln_holdmotn
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Track Process Hold Motion
Description: This variable can be set by an application process to cause Line Tracking to hold
all program motion at the next Extreme Position WAIT-FOR-WINDOW event. In this way the
robot can be made to complete only the current motion path rather than all reachable paths
under such circumstances as when a conveyor stops moving.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: System global variable screen.
$LNLPR_GRP.$seg_predtim
Minimum: 0 Default: 4 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Line Track Motion Segment Prediction Time
Description: This variable can be adjusted by an application process to modify the prediction
time that line tracking uses for intercept position computations. This is an internal variable used
during tracking motion planning. It is in units of ITP time intervals.
Power Up: This value initializes to 4 and maintains its previous value over subsequent power
cycles.
User Interface Location: System global variable screen.
See Also: $SCR.$ITP_TIME
$LNSCH[1] STRUCTURE
Name: Line Track Schedule Structures
Description: The Line Tracking Schedule contains a set of setup and storage parameters for the
Line Tracking system (LINE and RAIL tracking). Up to six (6) different schedules can
simultaneously exist on the system ($LNSCH[1], ... $LNSCH[6]). These are selected within user
and application (teach pendant) programs to set up and run LINE (and/or RAIL) tracking.
Each schedule can contain completely different information to allow you to select between
different Line Track environments. Examples include specifying choices for tracking sensors (for
a multi-conveyor environment), tracking modes (LINE or RAIL), boundaries, and so forth.
One schedule must be associated with each tracking program as part of its program header
data. (Currently programs are limited to teach pendant programs only, but a KAREL version of
Line Track will be included within a future software release.) Program schedule numbers are
currently specified using the DETAIL screen during teach pendant program creation.
Individual fields within this structure are described below.
User Interface Location: SYSTEM Variables screen, teach pendant program DETAIL screen,
and the SETUP Tracking screen
$LNSCH[1].$bound1[1-10]
Minimum: -3.0E38 Default: 0.0 Maximum: 3.0E38
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Boundary Position 1 (Up-Stream) Array
Description: This specifies the up-stream boundary of the workspace window of operation.
Values stored here are used as position offsets (in millimeters) relative to either the nominal
tracking frame X-axis (for LINE Tracking), or the zero position of the extended axis indicated by
the track axis number (for RAIL Tracking).
Values stored here MUST be farther up-stream than the corresponding values found in
$LNSCH[1].$bound2 (indexed by $LNSCH[1].$sel_bound). During window checking, positions
which are farther up-stream than the selected $LNSCH[1].$bound1 value are considered to be
IN-BOUND (not yet within the work window), and those which are down-stream of these values
are considered to be IN-WINDOW or GONE (depending upon the position's comparison with the
corresponding $LNSCH[1].bound2 value).
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
See Also: $LNSCH[1].$bound2, LNSCH[1].$sel_bound
$LNSCH[1].$bound2[1-10]
Minimum: -3.0E38 Default: 0.0 Maximum: 3.0E38
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Boundary Position 2 (Down-Stream) Array
Description: This specifies the down-stream boundary of the workspace window of operation.
Values stored here are used as position offsets (in millimeters) relative to either the nominal
tracking frame X-axis (for LINE Tracking), or the zero position of the extended axis indicated by
the track axis number (for RAIL Tracking).
Values stored here MUST be farther down-stream than the corresponding values found in
$LNSCH[1].$bound1 (indexed by $LNSCH[1].$sel_bound). During window checking, positions
which are farther up-stream than the selected $LNSCH[1].$bound2 value are considered to be
either IN-BOUND or IN-WINDOW (depending upon the position's comparison with the
corresponding $LNSCH[1].$bound1 value), and those which are down-stream of these values
are considered to be GONE (beyond the work window).
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
See Also: $LNSCH[1].$bound1, LNSCH[1].$sel_bound
$LNSCH[1].$part_queue
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Vision tracking use part queue
Description: This variable indicates whether or not Vision setup the part queue for the trigger
value. This variable is set by vision tracking. All the part queue data also stored by vision
tracking.
Power Up: Reset to False.
User Interface Location: SYSTEM System Variable screen
See Also: $LNSCH[1].$TRK_AXS_NUM
$LNSCH[1].$rec_shift
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Record Shift (Encoder Counts)
Description: The Line Tracking record shift value is the offset distance (in units of sensor or
encoder counts) between the current conveyor (or other external tracking equipment) position
and the position which is associated with the teach distance.
This number is combined with the number stored in $LNSCH[1].$teach_dist and multiplied by the
scale factor ($LNSCH[1].$scale) to compute the part position offset to use during all position
teaching and motion execution.
This number is automatically set by the Line Track system at the time that the tracking positions
are recorded or updated.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $LNSCH[1].$teach_dist, and $LNSCH[1].$scale
$LNSCH[1].$ scale
Minimum: -3.0E38 Default: 1.0 Maximum: 3.0E38
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Encoder Scale Factor (in counts/millimeter)
Description: The Line Track scale factor is a SIGNED value which defines the relationship
between the conveyor (or other external tracking equipment) FORWARD motion and the encoder
(or other sensor) counts.
For a typical line tracking application, this scale factor should be a number of encoder counts per
millimeter of FORWARD conveyor motion. For example, for a forward counting encoder the
number might be: 45.579 counts/mm. For a backward counting encoder the number might be:
-59.321 counts/mm.
This number might also be used when determining the proper number for the teach distance
such that the distance might be measured in millimeters and converted using the scale factor into
encoder counts.
Note: This value CANNOT be 0.0.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
See Also: $LNSCH[1].$teach_dist, $LNSCH[1].$rec_shift
$LNSCH[1].$sel_bound
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Select Boundary Pair Number
Description: Specifies which of the boundary pairs (each pair has an IN-BOUND and an OUTBOUND
position) within this schedule will be used during any window boundary checking.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variable screen, SETUP Tracking screen
See Also: $LNSCH[1].$bound1
$LNSCH[1].$tcp_xtrm
Minimum: -3.0E38 Default: 1.0E6 Maximum: 3.0E38
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Tool Center Point (TCP) Extreme Position
Description: Defines the position to be used for all window boundary checking. - A value of
1,000,000.0 (1.0E6) indicates that no extreme position checking will be performed. Instead, each
program position will be checked individually to determine its boundary status.
- Any other value is used as a position offset (in millimeters) along the tracking axis (the X-axis of
the tracking frame for LINE tracking, or the extended axis indicated by the track axis number for
RAIL tracking) which will be used during window boundary checking.
The TCP extreme position should indicate the farthest upstream position (the most negative Xaxis
position relative to the tracking frame for LINE tracking systems) of a path such that the
entire path motion is prevented from execution until after the TCP extreme position becomes INBOUNDS,
thus indicating that all position along the path are reachable.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $LNSCH[1].$trk_frame, $LNSCH[1].$trk_axis_num, $LNSCH[1].$bound1
$LNSCH[1].$teach_dist
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Teach Distance (Encoder Counts)
Description: The Line Tracking teach distance is the distance (in units of sensor or encoder
counts) which is used to define a reference position during path teaching. In many cases this is
the measurement from the zero position of the robot to the part detect sensor, measured along
the conveyor (or other tracking equipment).
This number gets combined with the number stored in $LNSCH[1].$rec_shift and multiplied by
the scale factor ($LNSCH[1].$scale) to compute the part position offset to use during all position
teaching and motion execution.
This number must be set by the application (or manually by the user) prior to any part teaching.
This number is most important for systems which include multiple robots where paths taught on
one robot must be copied to another robot. In this way, any cell-to-cell placement adjustments
(for the relative placement of the part detect switch, for example) can be made.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variable screen, SETUP Tracking screen
See Also: $LNSCH[1].$rec_shift, $LNSCH[1].$scale
$LNSCH[1].$trg_din_num
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Trigger Digital Input Number
Description: Specifies to which digital input the part detect switch (sensor) will be connected.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
$LNSCH[1].$trig_value
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Trigger Value (Encoder Counts)
Description: This is the value of the Line Track encoder (or other sensor) which was recorded
(by a user application program) when an associated part detect sensor was activated by a
passing part. This value must be filled in by an application program prior to attempting any
tracking motions (either teaching or playback).
Power Up: Set to UNINITIALIZED at every cold start.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
$LNSCH[1].$trk_axs_dir
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Tracking Axis Direction
Description: For RAIL tracking (ONLY), this is used to indicate the coordination between the
Tracking Axis and the conveyor. When set to TRUE, this indicates that FORWARD conveyor (or
other external tracking equipment) motion is in the POSITIVE direction of the Tracking Axis.
When FALSE, this indicates that FORWARD conveyor motion is in the NEGATIVE direction of
the Tracking Axis. (Note: This variable has no meaning for LINE tracking configurations and
should thus be set to TRUE since the X-axis of the nominal tracking frame should always point in
the direction of forward conveyor motion.)
NOTE: The Tracking Axis for RAIL tracking systems MUST be parallel to the direction of travel of
the conveyor (or other external tracking equipment).
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
See Also: $LNSCH[1].$TRK_AXS_NUM
$LNSCH[1].$trk_axs_num
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Tracking (Extended) Axis Number
Description: For RAIL tracking (ONLY). This specifies the extended axis number (from 1 to 3) to
be used for all tracking motions. (Note: This variable has no meaning for LINE tracking
configurations and should thus be set to 0.)
NOTE: The Tracking Axis for RAIL Tracking systems MUST be parallel to the direction of travel of
the conveyor (or other external tracking equipment).
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
See Also: $LNSCH[1].$trk_axs_dir
$LNSCH[1].$trk_enc_num
Minimum: 1 Default: 1 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Tracking Encoder Number
Description: Specifies which external tracking encoder data will be used during all tracking
position computations and motions within programs which use the specified tracking schedule.
One of two external sensor channels can be selected by specifying a value of either 1 or 2.
(Note: On some hardware configurations, only one external tracking sensor channel is provided.)
This number corresponds with the $ENC_STAT[x], $SCR.$enc_axis[x], and $SCR.$enc_type[x]
system variables where x is the sensor (encoder) number specified by the value of this variable
($LNSCH[1].$trk_enc_num).
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variable screen, SETUP Tracking screen
$LNSCH[1].$trk_frame
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: Nominal Tracking Reference Frame
Description: This is the stationary coordinate frame which describes the conveyor direction and
orientation for Line Tracking systems. (Note: This is NOT used during Rail Tracking.) The X-axis
of this frame MUST be the direction of FORWARD conveyor motion. This frame is automatically
used as the UFRAME during all tracking operations (teach and execution). All boundaries and
taught positions are stored and referenced relative to this frame. This frame should be set up
using the 3-point method to precisely establish the conveyor line (or other external tracking
equipment) direction and orientation.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
See Also: $LNSCH[1].$trk_axs_num, and $LNSCH[1].$trk_axs_di r
$LNSCH[1].$trk_grp_num
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Track Group Number
Description: Specifies the motion group number to be associated with this tracking schedule.
(Note: Currently tracking is only supported for group 1.)
Power Up: This value initializes to Group 1 and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
$LNSCH[1].$trk_type
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Line Tracking Type (Mode)
Description: Allows you to specify either LINE or RAIL Tracking. (0 = LINE, 1 = RAIL)
LINE tracking specifies that the robot Tool Center Point (TCP) position be adjusted to follow
along (track) a conveyor or other external environment by changing the robot arm configuration
(robot joint angles) in accordance with tracking information provided by an external sensor. All
extended axis positions (eg. integrated rail positions) remain as programmed.
RAIL tracking specifies that the robot TCP position be adjusted to follow along (track) a conveyor
or other external environment by changing ONLY the specified extended axis positions (the
integrated rail positions, for example) in accordance with tracking information provided by an
external sensor. All other robot joint positions and arm configurations remain as programmed.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen, SETUP Tracking screen
$LNSCH[1].$vision_trk
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Tracking with vision trigger
Description: This variable indicate whether or not Vision is used for the trigger mechanism.
When Vision CPU exist and this schedule is set for vision tracking, the vision CPU will do the
part snap shot and find out what is the encoder value at the time the snap shot is taken. The
vision CPU will then calculate the trigger value accordingly and set the trigger value for this part.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen and the SETUP Tracking screen
See Also: $LNSCH[1].$PART_QUEUE
$LNSNRSCH[1] STRUCTURE
Name: Line Track Sensor (Encoder) Schedule Structure
Description: The Line Tracking Sensor Schedule contains a set of setup variables for a tracking
sensor (encoder). Up to 3 different sensor schedules can simultaneously exist on the system
($LNSNRSCH[1], ... $LNSNRSCH[3]). These are selected within user and application programs
to set up the tracking sensor(s). Each schedule can contain completely different information to
allow you to select between several sensor (encoder) configurations. Examples include
specifying different sensor averaging (signal filtering), update rates, and enabling/disabling
sensor simulation.
Values within a sensor setup schedule must be transferred into the $ENC_STAT[1] structure
using the Line Tracking TPE DEFENC instruction. These values have NO effect except when
used to configure a sensor (encoder) using the above instruction.
Individual fields within this structure are described below.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1], $SCR.$ENC_AXIS[1], $SCR.$ENC_TYPE[1 ]
$LNSNRSCH[1].$average
Minimum: 0 Default: 1 Maximum: 2147483647
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Sensor Average Number
Description: This is the initialization value which specifies the number of previous sensor
(encoder) readings to average (sum and divide) when determining the current sensor rate
values.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_average
$LNSNRSCH[1].$enable
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Sensor Enable
Description: This is the initialization value which specifies the ON/OFF state of the sensor.
(NOTE: The ON/OFF state can also be changed using the Line Track TPE LINE instruction.)
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_enable
$LNSNRSCH[1].$sim_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Sensor Simulation Enable
Description: This is the initialization value which specifies the sensor simulation ON/OFF state.
(NOTE: The ON/OFF state can also be changed using the Line Track TPE LINESIM instruction.
Note also: The sensor MUST be enabled in order to simulate sensor input.)
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_sim_on
$LNSNRSCH[1].$sim_spd
Minimum: -2147483648 Default: 0 Maximum: 2147483647
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Sensor Simulation Speed
Description: This is the initialization value which specifies the sensor simulation speed (in
encoder counts per encoder update). (NOTE: The simulation speed can also be changed using
the Line Track TPE LINESIM instruction.)
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_sim_spd
$LNSNRSCH[1].$thresh
Minimum: 0 Default: 1 Maximum: 2147483647
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Sensor Stop Threshold
Description: This is the initialization value which specifies the sensor stop threshold in units of
sensor counts per sensor update. This value is used by the TPE LINESTOP instruction to
determine whether or not the line (conveyor) has stopped moving. Line rates which are LESS
than the stop threshold value are considered to indicate that the line has stopped.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_thresh
$LNSNRSCH[1].$update_rate
Minimum: 1 Default: 1 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Sensor Update Rate
Description: This is the initialization value which specifies the sensor update rate (in ITP_TIME
intervals). The sensor (encoder) is ready once every $LNSNRSCH[1].$update_rate itp_time
intervals.
Power Up: Maintains its previous value.
User Interface Location: SYSTEM Variables screen
See Also: $ENC_STAT[1].$enc_multipl, $SCR.$itp_time
$LNSTAT_GRP STRUCTURE
Name: Line Track Continuous Tracking Status Group structure
Description: This structure provides line tracking continuous tracking functions. The individual
fields are described below.
$LNSTAT_GRP.$cont _trk_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Line Track Continuous Tracking Status
Description: This flag contains an internal status value. It has no external meaning.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LNSTAT_GRP.$trig_diff
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Line count difference between accutrig and non accutrig.
Description: This is the line count difference between accutrig and non accutrig.
Power Up: This is a monitor variable.
User Interface Location: SYSTEM Variables screen
$LNSTAT_GRP.$wait _4_wndw
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Line Track Wait-For-Window Boundary Check Status Flag
Description: This flag indicates when TRUE that the motion system is waiting for a position (or
extreme position) to enter the currently-selected boundary window prior to planning the new
motion.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$LOCTOL
Minimum: 0.0 Default: 10.0 Maximum: 1000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Location Tolerance
Description: When position values are compared with the approximately equal operator >=.
Power Up:
User Interface Location: SYSTEM Variables screen
$MA_PLAN STRUCTURE
Name: Multi-Pass Planning variables
Description: Reserved for Internal use by FANUC Robotics for multi-pass to resume a motion
with a multi-pass offset. The variables contain information related to the previous motion.
Power Up: Set by motion system
User Interface Location: SYSTEM Variables screen
$MACRO_MAXNU
Minimum: 0 Default: 20 Maximum: 99
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Maximum Number of Macros
Description: This is the number of macros. The default value is 20.
Power Up: Requires a controlled start to take effect.
User Interface Location: SYSTEM Variables screen
See Also: $MACROTABLE[n] where n means $MACRO_MAXNU.
$MACROLDUIMT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Old specification of UI macro for R-J2 Mate
Description: 1: Old specification is used. Macros assigned to UI[1],[2],[3] and [8] are triggered
from ON to OFF.
0: New specification is used. Macros assigned to UI[1],[2],[3] and [8] are triggered from
OFF to ON. This is available only in R-J2 Mate.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MACROMAXDRI
Minimum: 0 Default: 5 Maximum: 24
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Macro Maximum Number of DI and RI
Description: In the macro function, the macro program can be assigned to DI and RI of the
digital input signal. This is the maximum limitation number of the DI/RI macro. The default value
is 5. This default value is appropriate for most applications.
Power Up:
User Interface Location: SYSTEM Variables screen
$MACROTABLE STRUCTURE
Name: Macro Setup Table
Description: The variables in this structure define the data for each Macro command. Changes
to this variable must be made using the SETUP Macro screen. Individual fields within this
structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, SETUP Macro screen
$MACROTABLE[1].$assign_id
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Assign Index
Description: Specifies the position, such as a key, which allocates the macro command.
When $ASSIGN_TYPE is 2 or is 3, 1-7 will be used.
When $ASSIGN_TYPE is four, 1-20 will be used.
When $ASSIGN_TYPE is five, 4-5 will be used.
Changes to this variable must be made using the SETUP Macro Screen.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, SETUP Macro Screen
$MACROTABLE[1].$assign_ type
Minimum: 0 Default: 1 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Assign Type
Description: Specifies the place where the macro command is allocated. The following values
are valid:
1:Unused 2:Teach Pendant User keys 3:Shifted Teach Pendant User keys
4:Manual operation screen 5:User buttons on SOP
Changes to this variable must be made using the SETUP Macro Screen.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, SETUP Macro Screen
$MACROTABLE[1].$ept_index
Minimum: 0 Default: 65535 Maximum: 65535
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Program EPT Index
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MACROTABLE[1].$macro_name
Minimum: " Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Macro Name
Description: The name of the macro command. Changes to this variable must be made using
the SETUP Macro Screen.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, SETUP Macro Screen
$MACROTABLE[1].$mon_no
Minimum: -2147483648 Default: 0 Maximum: 2147483647
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Monitor Number
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MACROTABLE[1].$open_id
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Program Opening ID
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MACROTABLE[1].$prev_su btyp
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Previous Sub Type
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MACROTABLE[1].$prog_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Macro Assigned Program Name
Description: Name of the program assigned to the macro command. Changes to this variable
must be made using the SETUP Macro Screen.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, SETUP Macro Screen
$MACROTABLE[1].$user_work
Minimum: 0 Default: 2 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Work Area for Macro System
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL STRUCTURE
Name: Macro Enable/disable, SOP Inputs
Description: The variables in this structure are used to enable/disable the execution of macros
from SOP input signals. Individual fields within this structure are described below.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_emgop
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Emergency Stop Input
Description: Enables/disables the execution of macros from the SOP Emergency stop input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_hold
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Hold Input
Description: Enables/disables the execution of macros from the SOP HOLD input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_pdi8
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP PDI8 Input
Description: Enables/disables the execution of macros from the SOP PDI8 input. Not currently
used.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_pdi9
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP PDI9 Input
Description: Enables/disables the execution of macros from the SOP pdi9 input. Not currently
used.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_pdia
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP PDIa Input
Description: Enables/disables the execution of macros from the SOP pdia input. Not currently
used.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_pdib
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP PDIb Input
Description: Enables/disables the execution of macros from the SOP pdib input. Not currently
used.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_pdic
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP PDIc Input
Description: Enables/disables the execution of macros from the SOP pdic input. Not currently
used.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_remote
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Remote Input
Description: Enables/disables the execution of macros from the SOP remote input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_reset
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Fault Reset Input
Description: Enables/disables the execution of macros from the SOP fault reset input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_start
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Cycle Start Input
Description: Enables/disables the execution of macros from the SOP cycle start input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_tpdsc
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Teach Pendant Disconnect Input
Description: Enables/disables the execution of macros from the SOP Teach Pendant disconnect
input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_tprel
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP Teach Pendant Release
Description: Enables/disables the execution of macros from the SOP Teach Pendant Release
input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_user1
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP User 1 Input
Description: Enables/disables the execution of macros from the SOP User 1 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRSOPENBL.$sop_user2
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, SOP User 2 Input
Description: Enables/disables the execution of macros from the SOP User 2 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRTPDSBEX
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Enable/disable UK Macro
Description: Enables/disables the UK macro execution while the teach pendant is disabled. If
set to TRUE, the UK macro is executable. If set to FALSE, the UK macro is not executable.
Power Up:
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL STRUCTURE
Name: Macro Enable/disable, UOP Inputs
Description: The variables in this structure are used to enable/disable the execution of macros
from the UOP input signals. Individual fields within this structure are described below.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_cstop
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Cycle Stop Input
Description: Enables/disables the execution of macros from the UOP Cycle stop input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_enbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Enable Input
Description: Enables/disables the execution of macros from the UOP Enable input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_estop
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Emergency Stop Input
Description: Enables/disables the execution of macros from the UOP Emergency stop input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_hold
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP HOLD Input
Description: Enables/disables the execution of macros from the UOP HOLD input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_home
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Home Input
Description: Enables/disables the execution of macros from the UOP Home input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_pdstrt
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Production Start Input
Description: Enables/disables the execution of macros from the UOP Production start input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_pnstrb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP PNS Strobe Input
Description: Enables/disables the execution of macros from the UOP PNS Strobe input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_reset
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Fault Reset Input
Description: Enables/disables the execution of macros from the UOP Fault reset input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr1
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR1/PNS1 Input
Description: Enables/disables the execution of macros from the UOP RSR1/PNS1 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr2
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR2/PNS2 Input
Description: Enables/disables the execution of macros from the UOP RSR2/PNS2 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr3
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR3/PNS3 Input
Description: Enables/disables the execution of macros from the UOP RSR3/PNS3 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr4
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR4/PNS4 Input
Description: Enables/disables the execution of macros from the UOP RSR4/PNS4 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr5
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR5/PNS5 Input
Description: Enables/disables the execution of macros from the UOP RSR5/PNS5 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr6
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR6/PNS6 Input
Description: Enables/disables the execution of macros from the UOP RSR6/PNS6 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr7
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR7/PNS7 Input
Description: Enables/disables the execution of macros from the UOP RSR7/PNS7 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_rsr8
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP RSR8/PNS8 Input
Description: Enables/disables the execution of macros from the UOP RSR8/PNS8 input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_sfspd
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Safety Speed Input
Description: Enables/disables the execution of macros from the UOP Safety speed input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MACRUOPENBL.$uop_start
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Macro Enable, UOP Cycle Start Input
Description: Enables/disables the execution of macros from the UOP Cycle start input.
Power Up: Changes to this variable must be made during a controlled start.
User Interface Location: SYSTEM Variables screen
$MASTER_ENB
Minimum: 0 Default: 3 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Mastering Enable
Description: Specifies whether or not the SYSTEM Master/Cal screen will be displayed. If set to
1, the SYSTEM Master/Cal screen is displayed. If set to 0, the SYSTEM Master/Cal screen is not
displayed.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MAXUALRMNUM
Minimum: 1 Default: 10 Maximum: 999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Maximum Number of User-defined Alarm Messages that can be Defined
Description: Determines the size of the array $UALRM_MSG. Note that a controlled start is
required to changed the size of the array. These messages are displayed by executing a UALM
statement.
Power Up: Requires a controlled start to take effect.
User Interface Location: SYSTEM Variables screen
$MCR STRUCTURE
Name: Motion Control Record
Description: Assorted Motion control records that cause an immediate effect on the motion
system. Individual fields within this structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$brk_out_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Brake Output Enable
Description: Indicates whether or not manual setting of brake outputs is allowed. If it is set to
TRUE, the brakes can be set or released manually as specified by the value of $brk_output. If it
is set to FALSE, the brakes cannot be set or released manually.
By default, the value of $brk_out_enb is set to FALSE. $brk_out_enb is also set to FALSE when
an emergency stop, overtravel condition, or DEADMAN switch error occurs.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Brake Cntrl, SYSTEM Variables screen
$MCR.$brk_output[6]
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Brake Output
Description: $brk_output is an array that you can use to set the brake output bits manually, if
$brk_out_enb is TRUE. Note that the elements in this array do not correspond to individual axes.
Several brakes might be released by a single brake output.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Brake Cntrl, SYSTEM Variables screen
$MCR.$dry_run
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Dry Run
Description: If set to TRUE, then motion is executed with $MCR_GRP.$dry_run_spd (or
$dryrun_jspd), ignoring programmed speed. All motion tracking and weaving features are
disabled.
Power Up: Changes take effect on the next motion.
User Interface Location: TEST CYCLE screen, SYSTEM Variables screen
$MCR.$enbl
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: UOP Enable
Description: If set to TRUE, indicates that the UOP enbl input signal is on.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$fltr_debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Flag for FLTR Task
Description: Reserved for Internal use by FANUC Robotics. This is a debug mask used by
FLTR task.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$genoverride
Minimum: 0 Default: 10 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: General Override
Description: Specifies the rate of robot movement speed. The robot movement speed when the
program is executed is $MCR.$genoverride * $MCR_GRP.$progoverride.
$genoverride, a scaling factor, is expressed as a percentage of the program motion speed.
For all programmed motion $genoverride is multiplied with $progoverride to obtain a total
override value, which is then multiplied by the motion speed.
As a safety feature, the value of $genoverride is automatically set to 10 if you do not confirm the
setting before jogging the robot. You can set the value of $genoverride using the teach pendant
OVERRIDE UP and DOWN keys or KCL commands.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Teach Pendant hard key, SYSTEM Variables screen
$MCR.$mjog_debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Flag for MJOG Task
Description: Reserved for Internal use by FANUC Robotics. This is a debug mask used by
MJOG task.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$mmgr_debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Flag for MMGR Task
Description: Reserved for Internal use by FANUC Robotics. This is a debug mask used by
MMGR task.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$mo_warn_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Motion Warning Enable
Description: Provision for future implementation of motion warning enable/disable. Not
Supported in this release.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$otf_lin_no
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program Line Number Executed in the On-the- fly Feature
Description: The program line number that is currently executing in the on-the-fly feature.
Power Up: Output from the motion system.
User Interface Location: SYSTEM Variables screen
$MCR.$otf_ofst
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: On_The_Fly Offset
Description: The offset from the statement start to the motion statement portion of the TPE
internal instruction.
Power Up: Output from the motion system.
User Interface Location: SYSTEM Variables screen
$MCR.$otf_prg_id
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program ID used in the On_the_fly Feature
Description: The program id that is currently used in the on-the-fly feature.
Power Up: Output from the Motion System
User Interface Location: SYSTEM Variables screen
$MCR.$ot_release
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Overtravel Release
Description: When set to TRUE, the robot can be jogged out of overtravel.
Power Up: Changes to this variable take effect immediately.
User Interface Location: MANUAL OT Release, SYSTEM Variables screen
$MCR.$sfspd
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Safe Speed
Description: If set to TRUE, indicates the fence is open, UOP sfspd input signal.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR.$spc_reset
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Serial Pulse Coder Reset
Description: If the software detects that the serial pulse coder has changed more than the
tolerance during the cycle power, an alarm will be posted. The system variable $MCR.$spc_reset
allows you to reset the pulse code mismatch error.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP STRUCTURE
Name: Group Motion Control Record
Description: This variable structure contains motion control information for individual group.
Individual fields within this structure are described below.
Power Up: Changes to this variable take effect immediately. At a cold start, this variable is reset
to its default.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$calibrate
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Calibrate
Description: Resets the current position based on mastering data and encoder counts.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Master/Cal screen
$MCR_GRP[1].$chk_jnt_sp d[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Check Joint Speed
Description: Only the first element $chk_jnt_spd[1] is used. $chk_jnt_spd[1] indicates whether
or not joint speed is checked against the system variable $jntvellim during Cartesian motion. If it
is set to TRUE, the speed of each joint is checked against the corresponding joint speed limit. If
a limit is exceeded, all joint speeds are reduced at the same ratio. If it is set to FALSE, joint
speed limits are not checked.
Note that the motor speed limits ($mot_spd_lim) are always checked regardless of this variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Master/Cal screen
$MCR_GRP[1].$crc_rsm_tol
Minimum: 0.0 Default: 0.2 Maximum: 10000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Circular Resume Tolerance
Description: Determines the tolerance that the current position must be at when resuming a
circular motion, with respect to the start, via, or dest positions. If the current position is within the
tolerance of the destination position, a linear motion is used to complete the motion. If the current
position is within the tolerance of the start or via positions, the current position replaces the start
or via position in the circular motion calculations internally.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$dry_jog_ovr
Minimum: 1.0 Default: 100.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name:
Description: Provides special speed control for linear and joint jogging during dry run. When
DRY RUN is enabled, the jog speed is further reduced by setting Jog dry run override to less
than 100% in DRY RUN setup menu. The dry run override has no effect on jog speed if it is set
to 100%. Its value will be reset to the default (100%) on COLD start.
User Interface Location:
$MCR_GRP[1].$dry_run_spd
Minimum: 0.001 Default: 300.0 Maximum: 2000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Dry Run Speed
Description: The speed, in mm/sec, that the robot will travel for LINEAR and CIRCULAR motion
when $MCR.$dry_run is set to TRUE. The programmed speed is ignored in this case.
Power Up: Changes take effect on the next motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$dryrun_jspd
Minimum: 0.001 Default: 25.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Dry Run Jog Speed
Description: The speed as a percentage of $PARAM_GROUP.$jnt vellim, that the robot will
travel for JOINT motion when $MCR.$dry_run is TRUE. The programmed speed is travel for
JOINT motion when $MCR.$dry_run is set to TRUE. The programmed speed is ignored in this
case.
Power Up: Changes take effect on the next motion.
User Interface Location: TEST CYCLE screen
$MCR_GRP[1].$dsp_update[ 9]
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: DSP Update Request
Description: Requests a copy of the servo parameter block defined by $dsp_upd_blk to DSP
memory.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$dsp_upd_bl k[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: DSP Update Block Number
Description: The block number for servo parameter update to DSP memory.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$eachmst_se l[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Single Axis Mastering Select
Description: Specifies the axis to be mastered if single axis mastering is selected.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Master/Cal screen
$MCR_GRP[1].$fjog_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Fast Jogging Mode Enable
Description: Enables a fast mode of jogging. In this mode jogging motion accelerate and
decelerate faster. The lower override the faster the acceleration.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$fltr _flush
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: FilterFlush
Description: 1: FLTR TASK perform FilterFlush
Users should not change this system variable.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$forc eupdate
Minimum: 0 Default: 0 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Update current angle with machine puls
Description: Do not change this system variable.
0 : NOTHING
1 : PUT ON ECC BIT AND FORCE UPDATE $MOR_GRP[].$current_ang WITH MACHINE
PULSE.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$hard_hold
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Hard Hold
Description: Causes motion to stop and when motion filters are empty and brakes are engaged.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$hold
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Hold
Description: Temporarily stops execution of a program. When $hold is TRUE, the robot
decelerates and all motion stops. Interpolation of the motion is suspended. The robot remains
stopped until $hold is FALSE.
Pressing the operator panel HOLD button or teach pendant HOLD key sets the value of $hold to
TRUE. To set $HOLD to FALSE, use the KCL> RESUME command.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$intplockhol
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Interpreter Lock Hold
Description: If set to TRUE, only the interpreter (teach pendant program or KAREL program)
can clear the hold status.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$intr_debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Flag for INTR Task
Description: Reserved for Internal use by FANUC Robotics. This is a debug mask used by INTR
task.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$jnt_prc_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Joint Process Enable
Description: Provision for future implementation of enabling the application process during a
joint motion. Not Supported in this release.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$lckd_caldon
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Locked Cal Done
Description: Backup value for cal_done at machinelock. You should not change this system
variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$lch_edm_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Local Condition End Motion Enable
Description: Reserved for Internal use by FANUC Robotics for keeping an already completed
motion within the motion subsystem so that it may be resumed in case an error occurs before an
application specified local condition is triggered.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$machinelock
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Machine Lock
Description: Brakes are engaged and subsequent motion is executed normally, but the final
output to the servo system is disabled. Motion appears to have moved from all system aspects,
but the mechanical robot has not moved. Current position reflects the virtual robot position and
not the locked robot position.
When $machinelock is set to FALSE after having been TRUE, the calibration sequence is
executed and the robot position is reset to reflect the actual mechanical position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1]. $master
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Mastering
Description: When $master is TRUE, mastering data is updated in $DMR_GRP, and
$DMR_GRP.$master_done is set to TRUE.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Master/Cal screen
$MCR_GRP[1].$master_type
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Master Type
Description: When $MCR_GRP.$master is set to TRUE, the type of mastering depends on this
variable:
0 = Normal mastering using $DMR_GRP.$master_pos 1 = Zero position mastering (joint angles
are at zero)2 = Quick mastering using $DMR_GRP.$ref_pos and $DMR_GRP.$ref_count
Power Up: Changes take effect the next time the robot is mastered.
User Interface Location: SYSTEM Master/Cal screen
$MCR_GRP[1].$otf_org_spd
Minimum: 0.0 Default: 300.0 Maximum: 2000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: On-The-Fly Original Speed
Description: The original program speed at the time the motion statement is executed. This is
used as a reference for the softpart support of the On-The-Fly function.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Setup On_The_Fly screen
$MCR_GRP[1].$otf_spd_chg
Minimum: -100 Default: 0 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: On-The-Fly Speed Change
Description: The speed change, in increments of 5% units, as modified by the On-The-Fly
softpart.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Setup On_The_Fly screen
$MCR_GRP[1].$otf_spd_upd
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: On-The-Fly Speed Update Request
Description: As set by the On-The-Fly softpart, this variable enables the update of the program
with the current speed.
Power Up: Changes take effect at the end of the current motion.
User Interface Location: Setup On_The_Fly screen
$MCR_GRP[1].$otf_speed
Minimum: 0.0 Default: 300.0 Maximum: 2000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: On-The-Fly Speed
Description: The current speed used during the On-The-Fly function. The application softpart
supported by On-The-Fly, updates this variable to dynamically change the motion speed.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SETUP On-the-fly screen
$MCR_GRP[1].$pg_o rg_rsm
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: PG original path resume function
Description: 1: PG original path resume function is enabled.
0: PG original path resume function is disabled.
Do not change this system variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$plan_debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Flag for PLAN Task
Description: Reserved for Internal use by FANUC Robotics. Setting this variable without loading
MODEBUG softpart may crash system. This is a debug mask used by PLAN task. PLAN task will
display certain debug messages on the debug consol when a certain bit is set.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$pos_can_req
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: post cancel request
Description: When $pos_can_req is becomes TRUE, FLTR TASK posts cancel request and
finish cancel request to MMGR TASK. User should not use this.
Power Up: Effective immediately
User Interface Location: SYSTEM Variables screen
See Also:
$MCR_GRP[1].$pos_estblsh
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: position establishment
Description: When $pos_estblsh is becomes TRUE, $MOR_GRP.$current_ang is reestablished
with encoder counts. User should not use this.
Power Up: Effective immediately
User Interface Location: SYSTEM Variables screen
<="">$MCR_GRP[1].$prgoverride
<="">
Minimum: 0.001 Default: 100.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Override
Description: Specifies the rate of robot movement speed. The robot movement speed when the
program is executed is $MCR.$genoverride * $MCR.$progoverride. It is requested by
$MCR_GRP.$progoverride.
$prgoverride, a scaling factor, is expressed as a percentage of the motion speed.
For all programmed motion, $prgoverride is multiplied by $genoverride to obtain a total override
value, which is then multiplied by the motion speed. $prgoverride has no effect for motions other
than program motions.
You can assign a value to $prgoverride from a program or from the teach pendant.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$qck_stp_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Quick Stop Enable
Description: Allows motion to stop quicker than if the filters were to run out normally. Not as fast
as E-stop, but faster than hold.
Power Up: Changes take effect on the next motion stop or hold.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$rsm_cmd_pth
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Resume Command Path
Description: For org_pth_resume feature, this specifies the stopped position that the resume
motion moves to is the last command position, not the position the robot is at after brakes are
engaged.
Power Up: Changes to this variable take effect immediately with next emergency stop motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$rsm_cmd_pth
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: resume command path
Description: For org_pth_resume feature, this specifies the stopped position that the resume
motion moves to is the last command position, not the position the robot is at after brakes are
engaged.
Power Up: Changes to this variable take effect immediately with next emergency stop motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$rsm_motype
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Resume Motion Type
Description: When the original path resume feature is enabled (usually by a TOOL application),
the return to the position where program motion was stopped will use a motype based on this
variable.
JOINT = 1
LINEAR = 2
PROGRAM = 3
If $rsm_motype is PROGRAM, the motype of the program will be used for the return to the
stopped position. In this case, if program motype was CIRCULAR, LINEAR will be used.
In all cases, the original program motype will be used for the subsequent motion to the original
destination position.
Power Up: Changes take effect on next motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$rsm_offset
Minimum: -25.0 Default: 0.0 Maximum: 25.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Resume Offset
Description: When the original path resume feature is enabled (usually by a TOOL application),
this variable will cause the motion to return to a point on the path that is closer to the start
position by this distance in millimeters. This feature is not effective for CIRCULAR motion.
The motion will never return past the original start position.
Power Up: Changes take effect on the next resumed motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$rsm_orient
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Resume Orient Type
Description: Used for the org_pth_resume feature, to specify the orient_type that is used for the
resumed motion. The meaning is:
Programmed Value: 0
OR_RS_WORLD: 1
OR_AES_WORLD: 2
OR_WRIST_JOINT: 3
The default value is 0 which uses the orient_type specified with the original motion.
Power Up: Changes to this variable take effect immediately with next org_path_resume motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$rsm_speed
Minimum: 0.001 Default: 300.0 Maximum: 2000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Resume Speed
Description: When the original path resume feature is enabled (usually by a TOOL application),
this is the speed in mm/sec of the return to the position where program motion was stopped.
Power Up: Changes take effect on the next resumed motion.
User Interface Location: System Variables screen
$MCR_GRP[1].$rsm_termtyp
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Resume Termtype
Description: When the original path resume feature is enabled (usually by a TOOL application),
the motion to the stopped position will use this termination. The subsequent motion to the original
programmed destination position will use the programmed termtype.
Power Up: Changes take effect on next motion.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$servo_disb l[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Servo Disable
Description: Reserved for Internal use by FANUC Robotics. Turns off servo power.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$set_ref
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Set Reference
Description: Causes the system to set the reference position for use with the quick mastering
feature.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Master/Cal screen
$MCR_GRP[1].$sflt_enb[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Soft Floating
Description: Flag for Soft Floating. In this mode user can block the robot arm motion without
being swept away. Only valid when Soft Floating option is installed.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$sflt_fup
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Soft Floating Follow Up Enable
Description: Enables soft floating follow up.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$sflt_val[9]
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RW Data Type: INTEGER
Name: Soft Floating Ratio
Description: The ratio of soft floating.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$soft_alarm
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Soft Alarm
Description: Causes a servo alarm to occur, servo power to go off, programs to pause, and
brakes to engage.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$srvo_q_stop
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Internal data of Servo Quick Stop function
Description: For internal use only. Do not modify this system variable.
Power Up: Change to this variable take effect immediately.
$MCR_GRP[1].$syn_adj_mod
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Synchronous Adjust Mode
Description: For robot models with dual drive (synchronous) control, $syn_adj_mod indicates
whether or not the synchronous adjust mode is enabled.
If it is set to TRUE, synchronous adjust mode is enabled and you can jog only the master or the
slave motor. You cannot move any of the other axes while synchronous adjust mode is enabled.
If it is set to FALSE, you axes while synchronous adjust mode is enabled. If it is FALSE, you
cannot jog the master and slave motors independently.
$syn_adj_mod should remain FALSE for all normal operations. If it is set to TRUE, the robot
loses its calibration and must be recalibrated after $syn_adj_mod is set back to FALSE.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$syn_adj_sel
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Synchronous Adjust Selection
Description: For robot models with dual drive (synchronous) control, $syn_adj_sel indicates
which axis, either master or slave, is selected for synchronous adjust mode. If it is set to TRUE,
the slave axis is selected. If it is set to FALSE, the master axis is selected.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$tsmod_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Tip Stick Mode On
Description: Enables spot welding tip stick detection.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$turn_on_srv
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Turn On Servos
Description: When servo power is off, this variable causes servo power to return if the system is
not in error status.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCR_GRP[1].$uop_imstp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Immediately Stop From UOP
Description: Immediately a stop is asserted from the UOP.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MCTCFG STRUCTURE
Name: Motion Cycle Time Recording Configuration System Variables
Description: These system variables allow the user to turn the Motion Cycle Time Recording On
or OFF and allow the debug flag to be set for internal use only. Individual fields within this
structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$MCTCFG.$debug
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motion Cycle Time Recording Debug Flag.
Description: Reserved for Internal use by FANUC Robotics.
Power Up:
User Interface Location: SYSTEM Variables screen
$MCTCFG.$mct _enbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motion Cycle Time Recording Enable Flag
Description: This system variable allows the user to turn the Motion Cycle Time Recording
softpart On or OFF.
Power Up:
User Interface Location: SYSTEM Variables screen
$MEMO STRUCTURE
Name: Memo Structure
Description: Individual fields within this structure are defined below.
Power Up: Perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables screen
$MEMO.$prc_tbl_siz
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Process table size
Description: This system variable is not used now. This system variable will be used to change
the size of the process table. The process table is used by memory manager only. Do not change
this system variable.
Power Up: Perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables screen
$MEMO.$tpe_area
Minimum: 0 Default: 200000 Maximum: 2097152
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Limit size of TPE memory area
Description: This system variable determines the TPE memory size internally. The user cannot
create the program more than this system variable even though there are plenty memory in the
system. This system variable is set the same value which is set from BMON as a default value.
Do not change this system variable. The unit of this system variable is BYTE.
Power Up: Perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables screen
$MEMO.$tskwrk_area
Minimum: 0 Default: 60000 Maximum: 1000000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: System task work area in temporary memory
Description: This system variable limits the allocation from temporary memory for TPE program.
When the user creates or teaches the TPE program, if the rest of the temporary memory
becomes under this system variable, the system prevents from creating or teaching the program
for safety. The default value is 60000. The unit of this system variable is BYTE. Do not change
this system variable.
Power Up: Perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables screen
$MEMO.$wrk_buf_siz
Minimum: 0 Default: 2000 Maximum: 10000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Work buffer size
Description: This system variable is not used now. This system variable will be used to change
the work buffer size. This work buffer is only for memory manager. Do not change this system
variable.
Power Up: Perform a cold start for the changes to take effect.
User Interface Location: SYSTEM Variables screen
$MISC[1] STRUCTURE
Name: Miscellaneous system variables for each groups.
Description: This system variable has miscellaneous system variables by each motion group
$MISC[1].$hpd_trq[9]
Minimum: -100.00 Default: 0.00 Maximum: 100.00
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: High Precision Disturbance Torque
Description: This system variable shows disturbance torque(%) of each servo motor. This value
is more precise than $MOR_GRP.$CUR_DIS_TRQ.
Power Up: Does not apply. The system updates this variable.
User Interface Location: SYSTEM Variables screen
See: $MISC_MSTR.$hpd_enb
$MISC_MSTR.$hpd_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: High Precision Disturbance Torque Enable
Description:If TRUE: System will update $MISC.$HPD_TRQ[].
If FALSE: System does not update $MISC.$HPD_TRQ[].
Power Up: You must perform a cold start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$MJPTMIR[1-5] STRUCTURE
Minimum: MIN_MJPTMIR Default: 0 Maximum: MAX_MJPTMIR
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: MJPTMIR_T
Name: Information of path jog
Description: This system variable is set up information of path jog.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$cir_ cnt
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: VECTOR
Name: Circular center position
Description: Center position of circular motion. This is need to path jog.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$curp x_task
Minimum: -1 Default: -1 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: current task ID
Description: This means the current task ID when program pause. When program pause is
selected task ID.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$dirc ton_a
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: VECTOR
Name: Path jog frame
Description: Approach vector of path jog frame.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$dirc ton_n
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: VECTOR
Name: Path jog frame
Description: Normal vector of path jog frame.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$dirc ton_o
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: VECTOR
Name: Path jog frame
Description: Orient vector of path frame.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$dirc ton_l
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: VECTOR
Name: Path jog frame
Description: Location vector of path jog frame.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$moty pe
Minimum: MT_JNT_JOG Default: 6 Maximum: MT_CIRCULAR
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: MOTYPE_E
Name: Program motion type
Description: Joint or linear or circular.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused, the variable is set up automatically.
$MJPTMIR[1].$path jog_flg
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Check flag of task ID.
Description: Task ID check flag between program pause and path jog is tried.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$prb_ frm
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: POSITION
Name: Path jog frame
Description: Setup path jog frame.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$r_re verse
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: path jog frame direction flag
Description: The flag setup reverse or no reverse each direction of path jog frame.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$tool_frm
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: POSITION
Name: Tool frame
Description: This means the tool frame is used in pause program. This is used at circular path
jog.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$used _utool
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: POSITION
Name: Utool used in MIR by INTP
Description: This means the UTool data is used in pause program.
Power Up: Changes to this variable take effect immediately
User Interface Location: Do not change this variable. When the program is paused or path jog
is tried, the variable is set up automatically.
$MJPTMIR[1].$utoo l_num
Minimum: 1 Default: 5 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of tool
Description: This means the tool number is used in pause program.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MJPTMIR[1].$z_r_ frm
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: POSITION
Name: z direction of path jog frame
Description: This mean the z direction of path jog frame Setup robot pose position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: When program paused or path jog is tried, the variable is set up
automatically.
$MKCFG STRUCTURE
Name: KAREL Motion (Motion-KAREL) Configuration System Variable Structure
Description: This set of variables controls the mode of operation of KAREL Motion. See the
descriptions of the individual fields below.
User Interface Location: SYSTEM Variables screen
$MKCFG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Flag.
Description: This variable is used for general debugging of KAREL Motion during development
and should not be used by users.
Power Up: This value initializes to 0 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$MKC FG.$group_mask
Minimum: 0 Default: 1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: KAREL Motion Group Mask Bit Map
Description: This system variable specifies which motion group can perform the KAREL motion.
Power Up: This value initializes to 1 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$MK CFG.$mb_conflict
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motion-Basic Conflict mask.
Description: This is a bit-mapped variable. The bit will be set if if KAREL Motion is in conflict
with any other softparts in the SID_MB socket.
Power Up: This value initializes to 0 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$MK CFG.$mb_required
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motion Basic Required Mask.
Description: This is a bit-mapped variable to indicate that KAREL Motion is required by another
softpart in SID_MB.(NOTE: Currently, it is not used.)
Power Up: This value initializes to 0 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$MK CFG.$mo_conflict
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: General Motion Conflict mask.
Description: This is a bit-mapped variable. The bit will be set if KAREL Motion is in conflict with
any softpart in the SID_MO socket.
Power Up: This value initializes to 0 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$MK CFG.$mo_required
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: General Motion Basic Required Mask.
Description: This is a bit-mapped variable to indicate that KAREL Motion is required by a
softpart in SID_MO.(NOTE: Currently, it is not used.)
Power Up: This value initializes to 0 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$MNDSP_CMNT
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Enable Display of Program Comment
Description: Enables/disables the display of a program comment in SELECT screen.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MNUFRAME[1, 6]
$MNUFRAME[1, 6] = POSITION NIL NIL NIL RW RW RW
Minimum: NIL Default: NIL Maximum: NIL
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: User Frame Array
Description: This system variables contains the positional value of the user frame used by the
teach pendant system. This is a two dimensional array. The inner dimension is the frame number
(1-6). The outer dimension is the group number (gnum). The frame number is
$MNUFRAMENUM[gnum].
When $MNUFRAMENUM[gnum] is between 1 and 6 the system uses the following userframe:
$MNUFRAME[gnum, $MNUFRAMENUM[gnum]]
If $MNUFRAMENUM[gnum] is zero the null frame is used.
If $MNUFRAMENUM[gnum] is 14 $GROUP[gnum].$UFRAME is used.
Power Up:
User Interface Location: SETUP Frames
$MNUFRAMENUM[2]
Minimum: 0x0 Default: 0 Maximum: 0x15
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: User Frame Number
Description: Used as the index into $MNUFRAME.
Power Up:
User Interface Location: SETUP Frames, teach pendant position programming
$MNUTOOL[1, 6]
Minimum: NIL Default: NIL Maximum: NIL
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSITION
Name: Tool Frame Array
Description: This system variables contains the positional value of the tool frame used by the
teach pendant system. This is a two dimensional array. The inner dimension is the tool number
(1-6).The outer dimension is the group number (gnum). The tool number is
$MNUTOOLNUM[gnum].
When $MNUTOOLNUM[gnum] is between 1 and 6 the system uses the following toolframe:
$MNUTOOL[gnum, $MNUTOOLNUM[gnum]]
If $MNUTOOLNUM[gnum] is zero the null frame is used.
If $MNUTOOLNUM[gnum] is 14 $GROUP[gnum].$UTOOL is used.
Power Up:
User Interface Location: SETUP Frames
$MNUTOOLNUM[2]
Minimum: 0x0 Default: 0 Maximum: 0x15
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: User Tool Frame Number
Description: Used as the index into $MNUTOOL.
Power Up:
User Interface Location: SETUP Frames, TOOL teach pendant instruction
$MONITOR_MSG[32]
Minimum: "" Default: "EXEC1 " Maximum: "EXEC1 "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Task Message in the Monitor Screen
Description: In the multi-task system, you can confirm the tasks in execution on the monitor
screen. This screen displays the name of task. This variable defines the task name with less than
9 characters. The relations between these system variables and the names of tasks are the
following:
$MONITOR_MSG [1] : name of task No.1
[2] : name of task No.2
[32] : name of task No.32
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$MOR STRUCTURE
Name: Motion Output Record
Description: Variable structure containing motion status information. Individual fields within this
structure are described below.
Power Up: At a cold start, this variable is reset to its default. Data is then updated dynamically
by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR.$brk_status
Minimum: 0 Default: 0 Maximum: 63
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Brake Status
Description: Indicates the brake output status.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR.$ pg_mctl
Minimum: 0 Default: 0 Maximum: 63
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Motion Control Mask
Description: Motion control mask. Indicated which motion group is currently activated by th
program. This variable is used by Detached Jog.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR.$reg_dis_amp[ 1-16]
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Regenerative discharge of amplifier
Description: $MOR.$reg_dis_amp are calculated in FLTR task with servo data. You cannot set
this variable. It means that the regenerative discharge of amplifier.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: $MOR.$reg_dis_amp cannot be set by user.
$MOR.$safety_stat
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Safety signals status
Description: $MOR.$safety_stat is bit parameter of safety signals. The bits assignment of
$MOR.$safety_stat is as follows.
* Bit position for $safety_stat
MFS_EMGOP 1
MFS_EMGTP 2
MFS_DEADMAN 4
MFS_FENCE 8
MFS_ROT 16
MFS_HBK 32
MFS_EMGEX 64
MFS_PPABN 128
MFS_BELTBREAK 256
MFS_ENABLE 512
MFS_FALM 1024
When FLTR task detects the above alarms, FLTR set the bit which corresponds to the alarm.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: $MOR.$safety_stat cannot be set by user.
$MOR.$smh_done
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: semi-hot start done
Description: If hot start recover processed this flag will be true.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP STRUCTURE
Name: Motion Output Record
Description: Variable structure containing motion status information for individual group.
Individual fields within this structure are described below.
Power Up: At a cold start, this variable is reset to its default. Data is then updated dynamically
by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$apc_ counter[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Absolute Pulse Coder Pulse Counter
Description: The absolute pulse coder pulse count.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$apc_done
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Absolute Pulse Code Communication Done
Description: When set to TRUE, $apc_done indicates the successful completion of absolute
pulse coder (APC) communication for robots with APC motors. When set to FALSE, it indicates
communication has not been successfully completed. The value of $apc_done is set and
updated automatically.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$atpe rch
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: At Perch Position Status
Description: If the robot is within the perch position tolerance, the flag will be automatically set.
Power Up: $atperch will be set automatically by the system if the feature is enabled. At a cold
start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cal_done
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Calibration Done
Description: Displays the completion of the position adjustment (calibration).
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cart fltremp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Cartesian Filter Empty
Description: When set to TRUE, the stage 1 and stage 2 cartesian filters are empty. Not
currently supported.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cur_ acctime
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Acceleration Time
Description: Total acceleration time currently being used. Units are in ticks of $scr.$itp_time.
Includes sum of stage 1 and stage 2 Joint filters, but does not include exponential filter, S filter or
D filter.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cur_ axs_acc[9]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Axis Acceleration Time
Description: Current axis acceleration time in ticks with units of $SCR.$itp_time.
Power Up: Updated automatically by the system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cur_ crframe
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: POSITION
Name: Current CR Frame
Description: Reserved for future use. $cur_crframe is updated by the system, which indicates
the current circular reference frame defined by the arc of the motion. It is used in conjunction with
$cur_prframe and $pfr_resume to resume a stopped motion smoothly for moves in the Path
Relative Frame.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cur_ dis_trq[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Current Disturbance Torque
Description: Current disturbance torque updated automatically by the system.
Power Up: Updated automatically by the system.
User Interface Location: STATUS Axis
$MOR_GRP[1].$cur_ prframe
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: POSITION
Name: Current PR Frame
Description: Reserved for future use. $cur_prframe is effective for linear moves only in Path
Relative Frame (optional feature).
$cur_prframe indicates the current Path Relative Frame with respect to the World Coordinate
Frame and is updated by the system. It is used in conjunction with $cur_crframe and
$pfr_resume to resume a stopped motion for moves in the Path Relative Frame.
Power Up: Data is updated dynamically by the motion system
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cur_ prog_id
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Program Identification
Description: Indicates the identification number of the program that generated the current or last
motion.
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$cur_ seg_id
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Segment Identification
Description: Identification number of the current segment being processed.
Power Up: Data is updated dynamically by the motion system
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$curp thacc
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Total Cartesian Acceleration Length For Cartesian Filter
Description: Not currently supported. Indicates the total Cartesian acceleration length currently
being used, 1 length unit corresponds to cartesian_rate * $SCR.$itp_time. Includes sum of stage
1 and stage 2 filters, but does not include exponential filter.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$curr ent_ang[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Current Angle
Description: Indicates the joint angles, in radians, of the output of the filter. This is the motion
command to the servo system.
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: POSITION
$MOR_GRP[1].$curr ent_pos
Minimum: MIN_POSX Default: DEF_POSX Maximum: MAX_POSX
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: POSITION EXT
Name: Current Position of the Robot
Description: Not currently available.
Power Up: Data is updated dynamically by motion system
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$ currentline
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Line Number
Description: The line number in the source program that generated the current or last motion.
Power Up: This variable is dynamically updated by the motion system. At a cold start, this
variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$curt imeacc
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current time filter length
Description: Display the time filter length that is currently being used. This variable is active only
when $CF_PARAMGP[].$timefltrenb is set to TRUE.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
See Also: $CF_PARAMGP[].$timefltrenb
$MOR_GRP[1].$dsp_ stat[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: DSP (Digital Signal Processor) Status
Description: Status returned from the servo system DSP of each axis.
bit 2 CKAL Abnormality of clock for revolution counter
bit 3 BZAL Zero voltage of battery
bit 4 RCAL Abnormality of revolution counter
bit 5 PHAL Abnormality of signal phase
bit 6 BLAL Lower voltage of battery
bit 7 CSAL Alarm of check sum
bit 8 OHAL Alarm of motor over heat
bit 9 DTERR Alarm concerning receiving failure of all serial pulse coder data for servo CPU
bit 10 CRCERR Alarm of data transfer error
bit 11 STBERR Alarm of stop bit error
bit 12 SPHAL Soft phase alarm
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: STATUS axis status1, status2
$MOR_GRP[1].$dvc_axes
Minimum: 0x80000000 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Time Scale axes image
Description: Each bit corresponds to one axis. The bit is set to 1 when the motion command
from INTR exceeds the motor speed limit.
Power Up:
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$dvc_ delay
Minimum: 0x80000000 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: ITPs delayed by Time Scale
Description: [ITP] total of time delayed by time scale
Power Up:
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$dvc_ reduce
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Velocity reduction ratio by time scale
Description: Output velocity(FLTR) / input velocity(INTR). When there is no slow down caused
by time scale it is set to 1.0
Power Up:
User Interface Location:
$MOR_GRP[1].$erro r_cnt[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Error Count
Description: The error, in pulse counts, from the actual position as seen by the encoders to the
command position.
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: STATUS axis pulse
$MOR_GRP[1].$nilp os
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: POSITION
Name: Zero Position
Description: The position data of ( 0, 0, 0, 0, 0, 0, 0 ) is specified.
$NILP defines a nil or zero position, which is useful in program assignment statements. For
example, the statement $UTOOL = $NILP assigns a nil position to $UTOOL.
Power Up: The data is never modified.
User Interface Location:
$MOR_GRP[1].$filt er_empt
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Filter Empty
Description: When set to TRUE, the stage 1 and stage 2 joint filters are empty for all axes.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$filt er_type
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Current Filter Type
Description: Reserved for Internal use by FANUC Robotics. It indicates the type of filter being
used.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variable screen
$MOR_GRP[1].$fltr _nc_emp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Non-continuous Filter Empty
Description: When set to TRUE, the stage 1 and stage 2 joint filters are empty for all noncontinuous
turn axes.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$in_p osition[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: In Position
Description: $in_position is an array of flags indicating the axes that are in position. At the
beginning of a segment the flags are automatically set to FALSE. By the end of the segment all
of the flags are TRUE, indicating each axis is within the tolerance for the specified position.
The value of $in_position is set and updated automatically.
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$jogg ed
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Robot jogged
Description: When set to TRUE, the robot has been jogged since the last program motion.
Execution of any user program will reset the flag.
Power Up: Data is updated dynamically by the motion system and reset by program execution.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$line _er_cnt[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: SHORT
Name: Line Tracking Encoder Error Count (not supported)
Description: Line tracking encoder error count.
Power Up:
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$line _offset
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Line Number
Description: Current motion statement offset from the beginning of TPE line. Valid only when
On_The_Fly option is enable.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$mach ine_pls[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Machine Pulse Count
Description: The absolute encoder pulse count reading of the current robot position.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: STATUS axis pulse
$MOR_GRP[1].$max_ dis_trq[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Maximum Disturbance Torque
Description: Maximum disturbance torque updated automatically by system.
Power Up: Automatically updated by Filter task
User Interface Location: STATUS axis
$MOR_GRP[1].$max_ torque[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Maximum Torque
Description: Maximum torque information updated by DSP
Power Up: Updated automatically by the system
User Interface Location: STATUS axis monitor
$MOR_GRP[1].$min_ dis_trq[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Minimum Disturbance Torque
Description: Minimum disturbance torque updated automatically by system.
Power Up: Updated automatically by the system
User Interface Location: STATUS axis
$MOR_GRP[1].$moti on_cmnd[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Motion Command Pulses
Description: The current actual motion command in pulse counts to the servo system
Power Up: Data is updated dynamically by the motion system.
User Interface Location: STATUS axis pulse
$MOR_GRP[1].$move _dist
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: REAL
Name: Distance Moved
Description: Reserved for future use. The total distance moved by this motion statement.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$over run_cnt
Minimum: INTEGER_MIN Default: 0 Maximum: INTEGER_MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Overrun Count
Description: Indicates the number of interpolator cycles since a COLD start that the interpolator
do not have enough time to finish its path interpolation. Updated by the interpolator.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$path _node
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Path Node Number
Description: $path_node indicates the path node to which the robot is moving or has most
recently moved.
After an error, KAREL programs can test to determine the node toward which the robot is or was
most recently moving when the error occurred. For emergency stops or errors that cause brakes
to be applied and drive power to the servo system to be shut off, $path_node might be ahead of
the robot's actual position.
The value of $path_node is set and updated automatically.
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$pend mocount
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Reserved for future use (not supported)
Description: $pendmocount keeps track of how many motions have been issued but have not
yet been completed. It is automatically incremented each time the program interpreter issues a
motion and decremented each time the motion interpolator finishes a motion.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$pos_ valid
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: BOOLEAN
Name: Current Position Valid
Description: Reserved for future use. This specified whether or not the current_pos is valid.
Power Up:
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$segf raction
Minimum: 0.0 Default: 0.0 Maximum: 1.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Fraction of Segment Completed
Description: Reserved for future use. $segfraction indicates what fraction of the current
segment has been interpolated. For example:
0.0 means the interpolation is just beginning.
0.5 means the interpolation is half complete.
1.0 means interpolation is complete, and the robot is starting to decelerate toward the
destination.
Note that when the value is 1.0, the robot will not be exactly at the indicated position because of
the digital filters. The robot still needs to decelerate. $segfraction is set and updated
automatically.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$segmovedist
Minimum: 0.0 Default: 0.0 Maximum: 100000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Distance Moved in this Segment
Description: Reserved for future use. The total distance moved for this segment.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$serv o_ready
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Servo Ready
Description: $servo_ready indicates whether or not servo power is active.
The value of $servo_ready is set and updated automatically.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$spc_ stat[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: SPC (Serial Pulse Coder) Status
Description: The status returned by the serial pulse coder.
Power Up: Data is updated dynamically by the motion system.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$syn_ err_cnt
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Synchronous Error Counter
Description: $SYN_ERR_CNT is the value of the error counter for robot models with dual drive
(synchronous) control.
Power Up: Data is updated dynamically by the motion system. At a cold start, this variable is
reset to its default.
User Interface Location: SYSTEM Variables screen
$MOR_GRP[1].$torq ue[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Average Torque
Description: Average torque information by DSP.
Power Up: Updated automatically by the system.
User Interface Location: STATUS axis monitor
$MOR_GRP_SV[] .$cur_sv_ang
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Current saved angles
Description: When $MOR.$shm_done is set to true. Filter will save the most current joint angle
to this variable.
Power Up: At a cold start, this variable is reset to its default.
User Interface Location: SYSTEM Variables screen
See Also: $MOR.$smh_done
$MOTASK_DATA
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motion Task Data
Description: Reserved for Internal use by FANUC Robotics. Do not change this variable. The
system sets this variable on cold start.
Power Up:
User Interface Location: SYSTEM Variables screen
$NULL_CYCLE
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: System idle cycle counter
Description: This variable is incremented by 1 every time the system executes one idle loop. If
this variable is not incremented over a period of time then the CPU is being utilized 100% of the
time by an application. This is mainly used for comparison of different approaches to an
implementation. If the CPU is 100% utilized, communications will not work because there is no
CPU available.
Power Up: No
User Interface Location: SYSTEM Variables screen
$ODRDSP_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Order File Display Enable
Description: Determines whether the order file screen is selectable or not. If $ODRDSP_ENB is
set to 1, the order file screen is selectable.
This variable is only effective when the corresponding software option is loaded.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OPEN_FILES
Minimum: 10 Default: 10 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Open files
Description: Determines the maximum number of open files at one time.
Power Up: Only effective during cold start
User Interface Location: SYSTEM Variables screen
$OPTION[1] - [20]
Minimum: "" Default: " " Maximum: " "
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Name of a standard/optional features.
Description: Displays the release time name of a standard feature or the release time name and
version of an optional feature that been installed.
Power Up: This variable cannot be changed.
User Interface Location: SYSTEM Variables screen
$OPWORK STRUCTURE
Name: Operator Work
Description: Controls the buttons and lamps on the SOP/UOP and teach pendant. Individual
fields within this structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$enbl_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: ENBL input is ON
Description: When this value is set to TRUE, ENBL of UI is regarded as ON even if the actual
input is OFF.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OPWORK.$int pmask
Minimum: 0 Default: 0xFFFFFFFF Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Interpreter Mask
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$intppaused
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Program is Paused
Description: This variable remains > 0 while the program is temporarily stopped. The system
updates it automatically.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$intprunning
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Program is Running
Description: This variable remains > 0 while the program is executing. The system updates it
automatically.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$op_inv_mask[3]
Minimum: 0 Default: 0 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Inverted signal mask
Description: Indicates which signals are inverted.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$op_prev_img[3]
Minimum: 0 Default: 0 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Operator Panel Previous output image.
Description: Controls the buttons and lamps on the SOP/UOP and teach pendant
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$opt_out
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Enable/Disable use of UOP Optional Output.
Description: When set to TRUE enables the optional UOP output signals.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$orgovrdval
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Original Override Value
Description: When the safety fence is opened (i.e. *SFSPD turns off), the override value is
recorded in this system variable automatically.
This value is used to recover the override value when the safety fence is closed (i.e. *SFSPD
turns on).
This value is cleared if you change the override value while the safety fence is opened. In this
case, the override is not recovered when the safety fence is closed. This variable should be
maintained by the system only. Do not change this variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OPWORK.$outimage[3]
Minimum: 0 Default: 0 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Current output image.
Description: Current output image.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$sopbusymsk
Minimum: 0 Default: 524287 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: System Operator Panel Busy Mask
Description: This is the task mask indicating not to turn on the SOP busy lamp. This is output
when the operator control panel I/O is being processed. When it is > 0, a BUSY signal is output
from the operator control panel. The system updates it automatically.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$sysbusy
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: System Busy
Description: This variable remains > 0 while the system is processing. The system updates it
automatically.
User Interface Location: SYSTEM Variables screen
$OPWORK.$tpbusymsk
Minimum: 0 Default: 524287 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Teach Pendant Busy Mask
Description: Task mask indicating not to turn on the teach pendant busy lamp. This is output
when the teach pendant is processing. When it is > 0, the lamp will be lit while the teach pendant
is processing. The system updates it automatically.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$uop_disable
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Enable/disable UOP signal.
Description: Peripheral devices I/O invalidity. Invalidate all peripheral devices I/O at one.
0 = Enable
1 = Disable
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$uopbusymsk
Minimum: 0 Default: 524287 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: User Operator Panel Busy Mask
Description: Task mask indicating not to turn on UOP busy lamp. This is output when the
peripheral device I/O is being processed. When it is > 0, the operator control panel BUSY signal
will be lit. The system updates it automatically.
Power Up:
User Interface Location: SYSTEM Variables screen
$OPWORK.$user_output[3]
Minimum: 0 Default: 0 Maximum: 0xFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: User Output
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$ORIENTTOL
Minimum: 0.0 Default: 10.0 Maximum: 360.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Orientation Error Tolerance
Description:
$ORIENTTOL is used when comparing the y-axis (orient vector) of two positions. $ORIENTTOL,
along with $APPROACHTOL, $LOCTOL, and $CHECKCONFIG, is used in conjunction with the
relational operator ``>=
Power Up:
User Interface Location: SYSTEM Variables screen
$OVRD_RATE
Minimum: 0 Default: 5 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: ULONG
Name:Override change rate
Description: The value of $OVRD_RATE indicates the rate of changing override of 10%-100%.
For example, when $OVRD_RATE = 25, override is changed as follows.
V.FINE - FINE - 1 - 2 - 3 - 4 - 5 - 10 - 25 - 50 - 75 - 100
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT STRUCTURE
Name: Override Select Setup
Description: Sets the override to predefined values based on digital inputs. This feature is only
available if the option is installed. This is not a standard option. Individual fields within this
structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen SETUP Override screen
$OVRDSLCT.$off_off_ovr
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Override Setting when Both SDI 1 and 2 are OFF
Description: This variable contains the override value used when both SDI signals 1 and 2 are
OFF.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT.$off_on_ovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Override Setting when SDI 1 is OFF and SDI 2 is ON
Description: This variable contains the override value used when SDI signal 1 is OFF and 2 is
ON.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT.$on_off_ovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Override Setting when SDI 1 is ON and SDI 2 is OFF
Description: This variable contains the override value used when SDI signal 1 is ON and 2 is
OFF.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT.$on_on_ovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Override Setting when Both SDI 1 and 2 are ON
Description: This variable contains the override value used when both SDI signals 1 and 2 are
ON.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT.$ovsl_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Override Select Feature Enable
Description: This enables the override select feature if the option is installed. This is not a
standard option.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT.$sdi_index1
Minimum: 1 Default: 0x7fffffff Maximum: 0x7fffffff
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: SDI Number for Signal 1
Description: Digital input which, along with $OVRDSLCT.$sdi _index2, selects one of four
override values.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$OVRDSLCT.$sdi_index2
Minimum: 1 Default: 0x7fffffff Maximum: 0x7fffffff
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: SDI Number for Signal 2
Description: Digital input which, along with $OVRDSLCT.$sdi _index1, selects one of four
override values.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP STRUCTURE
Name: Parameter Group
Description: Motion parameters that are generally robot dependent. These can be modified at
any time, but require a cold start to take effect. Individual fields within this structure are described
below.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$acc_pa_uma
Minimum: 0.0 Default: 0.0 Maximum: 50
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Scaling Parameter A for Maxaccel/standard Short Motion
Description: Scaling factor A for maxaccel and standard short motion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$acc_pc_uma
Minimum: 0.0 Default: 1.0 Maximum: 50
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Scaling Parameter C for Maxaccel/standard Short Motion
Description: Scaling factor C for maxaccel and standard short motion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$acc_s cl_uca
Minimum: 0.01 Default: 1.0 Maximum: 50.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Filter 1 Scale Factor
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ac cel_param[4]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Acceleration Parameter
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$accel _ratio
Minimum: 0. Default: 0.5 Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Acceleration Ratio
Description: The ratio of the second stage acceleration time to the first stage acceleration time.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ac cel_time1[9]
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Acceleration Time 1
Description: $accel_time1 is an array of times, one per axis, for the first stage of the second
order acceleration/deceleration algorithm for joint motion. The value is in milliseconds.
$accel_time1 is set by the controlled start robot setup program, and should not be changed. For
the extended axes, you are responsible for setting this variable using the Control Start Extended
axes/Nobot setup Program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ac cel_time2[9]
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Acceleration Time 2
Description: $accel_time2 is an array of times, one per axis, for the second stage of the second
order acceleration/deceleration algorithm for joint motion. The value is in milliseconds.
$accel_time2 is set by the controlled start robot setup program, and should not be changed. For
the extended axes, you are responsible for setting this variable using the Control Start Extended
axes/Nobot setup Program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$armload[3]
Minimum: 0.0 Default: 0.0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Arm Payload
Description: Payload on robot arm for inertia calculation (units in Kg).
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$armload_x[3]
Minimum: -10000 Default: 0.0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Armload_x
Description: X position of armload (units in cm).
Power Up: You must perform a cold start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$armload_y[3]
Minimum: -10000 Default: 0.0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Armload_y
Description: Y position of armload (units in cm).
Power Up: You must perform a cold start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$armload_z[3]
Minimum: -10000 Default: 0.0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Armload_z
Description: Z position of armload (units in cm).
Power Up: You must perform a cold start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$auto_sngstp
Minimum: 0.0 Default: 0.0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Singularity stop at auto mode.
Description: Specifies whether or not the robot should stop in auto mode when entering
singularity zone.
Power Up: You must perform a cold start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$axis_ im_scl
Minimum: 0.0 Default: 0.0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Divider of Inertia and Moment
Description: Divider values of inertia ($axisinertia) and moment ($axismoment).
Power Up: You must perform a cold start for the change to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ax isinertia[9]
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Reserved for Internal use by FANUC Robotics
Description: Reserved for Internal use by FANUC Robotics (units in Kg).
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$axi smoment[9]
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Reserved for Internal use by FANUC Robotics
Description: Reserved for Internal use by FANUC Robotics (units in Kg).
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$bc klsh_coun[9]
Minimum: 0 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Backlash Compensation Count
Description: Backlash compensation count for anti-bac klash compensation. This value is
normally determined by experiment for each individual mechanical unit.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$belt_ enable
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Belt Break Detect Enable
Description: $belt_enable enables the belt breakage detection feature. If it is set to TRUE, the
controller will generate an error message if a drive belt breaks. For robots that are equipped with
belt-driven axes, such as the A-510, $belt_enable should be TRUE. For all other robots,
$belt_enable should be set to FALSE.
If your system is equipped with belt-driven axes, setting $belt_enable to TRUE changes the
normal message of OVERTRAVEL to BELT BROKEN.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$cart_ accel1
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Cartesian Acceleration Time 1
Description: $cart_accel1 is the length, in milliseconds, of the first stage of the second order
acceleration/deceleration filter for Cartesian motion.
The total acceleration/deceleration time for either linear or circular Cartesian motion (except
where speed override is used) is the sum of $cart_accel1 and $cart_accel2.
The value of $cart_accel1 is set by the controlled start robot setup program and should not be
changed for robot axes.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$cart_ accel2
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Cartesian Acceleration Time 2
Description: $cart_accel2 is the length, in milliseconds, of the second stage of the second order
acceleration/deceleration filter for Cartesian motion.
The total acceleration/deceleration time for either linear or circular Cartesian motion (except
where speed override is used) is the sum of $cart_accel1 and $cart_accel2.
The value of $cart_accel2 is set by the controlled start robot setup program and should not be
changed for robot axes.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$cartmo_mgn
Minimum: 0.0 Default: 0.2 Maximum: 1000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Standard Short Motion Acceleration Scale for Cartesian Motion
Description: Scale factor for Cartesian standard short motion. One of the system variables for
Cartesian standard short motion support.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$chklimtyp
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Limit Check Type
Description: Limit check type for S-420 robots only. If set to 0, the limit is checked from joint 3. If
set to 1, the limit is checked from vertical.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$circ_rate
Minimum: 1 Default: 1 Maximum: MAX_MOTYPE_RATE
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Circular Rate
Description: The number of $scr.$itp_time cycles is used in one interpolation of circular motion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$clalm_time
Minimum: 0 Default: 200 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Collision Detection Time
Description: Collision detection time.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$cn_gear_n1
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Numerator of Continuous Turn Axis Gear Ratio
Description: $cn_gear_n1 gives the exact integer value of the numerator of the gear ratio for the
continuous turn axis. The gear ratio for the continuous turn axis is specified by
cn_gear_n1/cn_gear_n2 where typically cn_gear_n1 > cn_gear_n2. $cn_gear_n1 gives the
number of motor revolutions per $cn_gear_n2 revolutions of the joint.
In addition to the maximum value, the continuous turn option does not allow gear ratios over
4000. I.E. cn_gear_n1/cn_gear_n2 must be 4000 or less. The value should be set only through
the Setup menu in the continuous turn option.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen, SETUP Continuous Turn
$PARAM_GROUP[1].$cn_gear_n2
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Denominator of Continuous Turn Axis Gear Ratio
Description: $cn_gear_n2 gives the exact integer value of the denominator of the gear ratio for
the continuous turn axis. The gear ratio for the continuous turn axis is specified by
cn_gear_n1/cn_gear_n2 where typically cn_gear_n1 > cn_gear_n2. The value should be set only
through the Setup menu in the continuous turn option.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen, SETUP Continuous Turn
$PARAM_GROUP[1].cnt_acc_mgn
Minimum: 0.0 Default: 1.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Continue acceleration margin.
Description: A scaling factor for tuning the application speed.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$coincident
Minimum: 0 Default: 1.0 Maximum: 1000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Coincidence Limit for Circular Points
Description: Coincident is used for scaling short motion criterion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$collinear
Minimum: 0 Default: 0.0076 Maximum: 1000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Collinearity Limit for Circular Pts
Description: Collinear is used as a scale factor for the torque used by $mr_max_trq.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$contaxisnum
Minimum: 0 Default: 0 Maximum: 9
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Continuous Turn Axis Number
Description: $contaxisnum indicates which axis operates in continuous turn mode (optional
feature) and enables continuous turn for that axis. The valid values for $contaxisnum are only the
highest robot axis number or an extended axis number and should be set only through the Setup
Menu in the continuous turn option.
The default value indicates that no axis will operate in continuous mode (all axes operate
normally.)
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen, SETUP Continuous Turn
$PARAM_GROUP[1].$contwindow
Minimum: 0 Default: 0 Maximum: MAX
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Continuous Turn Window (Not supported)
Description: The range of pulse count that master reference count have to be updated when the
distance between the current robot position and master reference count exceed this range.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$cp_cutoffov
Minimum: 0 Default: 5 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Lower cutoff value for override when $GROUP.$CNSTNTPT HJT is TRUE.
Description: Constant path is not maintained for override values that are less than the setting
for this variable.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].ddacc_ratio
Minimum: 0.0 Default: 1.0 Maximum: 100.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Double D filter acceleration ratio.
Description: This is a robot tuning variable for splitting the double D filter at the process_spd.
This variable is in effect only when process_spd is in effect.
Power Up: Effective on cold start.
User Interface Location: SYSTEM variables
$PARAM_GROUP[1].$decel _ratio
Minimum: 0. Default: 0.5 Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Deceleration Ratio for Short Motion
Description: Deceleration ratio for short motion. This will be used to determine whether or not to
use short motion algorithm.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$def_ maxaccel
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: BOOLEAN
Name:
Description: Reserved for future use (not supported).
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$duty_enb[1-9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Duty calculation enable flag
Description: For internal use only. Do not modify this system variable.
If this variable is TRUE, duty calculation for that axis is done.
Power Up: Requires a cold start to take effect.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$PARAM_GR OUP[1].$duty_param1[1-9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Duty parameter 1
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Requires a cold start to take effect.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$PARAM_GR OUP[1].$duty_param2[1]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Duty parameter 2
Description: For internal use only. Do not modify this system variable.
This variable is used to calculate the duty of the cycle program.
Power Up: Requires a cold start to take effect.
User Interface Location: The System Variables screen (on the teach pendant).
See Also: This variable is used for Duty diagnosis.
$PARAM_GR OUP[1].$dvc_ac0_max[1-9]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Time Scale max acceleration0
Description: [cnt/msec/msec] -> [cnt/ITP/ITP]
Power Up: Requires a cold start to take effect.
User Interface Location: The System Variables screen (on the teach pendant).
$PARAM_GR OUP[1].$dvc_ac1_max[1-9]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Time Scale max acceleration1
Description: [cnt/msec/msec] -> [cnt/ITP/ITP]
Power Up:
User Interface Location:
$PARAM_GR OUP[1].$dvc_acc_max[1-9]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Time Scale max acceleration
Description: [cnt/msec/msec] -> [cnt/ITP/ITP]
Power Up:
User Interface Location:
$PARAM_GR OUP[1].$dvc_acc_min[1-9]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Time Scale min acceleration
Description: [cnt/msec/msec] -> [cnt/ITP/ITP]
Power Up:
User Interface Location:
$PARAM_GR OUP[1].$dvc_jrk_max[1-9]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Time Scale max jerk
Description: [cnt/ITP/ITP/ITP] -> [cnt/msec/msec/msec]
Power Up:
User Interface Location:
$PARAM_GR OUP[1].$dvc_jrk_min[1-9]
Minimum: -10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Time Scale min jerk
Description: [cnt/ITP/ITP/ITP] -> [cnt/msec/msec/msec]
Power Up:
User Interface Location:
$PARAM_GROUP[1].$encs cales[9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Encoder Scale Factor
Description: For rotational axes, $encscales[i] specifies the number of encoder pulses per
degree of movement of axis i. For translational axes, $encscales[i] specifies the number of
encoder pulse per mm of movement of axis i.
$encscales is set by the controlled start robot setup program, and should not be changed. For
the extended axes, you are responsible for setting this variable using the Control Start Extended
axes/Nobot setup Program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$exp_ accel[9]
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Exponential Acceleration Time Constant
Description: Time constant, in milliseconds, of the exponential filter which is enabled by
$PARAM_GROUP.$exp_enbl.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$exp_enbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Exponential Filter Enable
Description: Enables the use of the exponential filter. The time constant of the exponential filter
is $PARAM_GROUP.$exp_accel[i].
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$exp_j og_acc[9]
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Jog Exponential Filter Acceleration.
Description: Exponential filter length for jog motion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$extac cratio
Minimum: 0.0 Default: 0.5 Maximum: 1.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Acceleration Ratio for Extended Axes
Description: Motion system uses this variable to split the total filter length between the first and
second stage filter for the extended axes.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ffg_mgn_j2
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Margin for feed forward (J2)
Description: Not used
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ffg_mgn_j3
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Margin for feed forward (J3)
Description: Not used
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$fwp_time1
Minimum: 0 Default: 64 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Follow up Acceleration Time 1
Description: Follow up acceleration time 1 for the first stage filter if motor speed limit occurs.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$fwp_time2
Minimum: 0 Default: 32 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Follow Up Acceleration Time 2
Description: Follow up Acceleration Time 2 for the first stage filter if motor speed limit occurs.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$gear_ratio[9]
Minimum: -10000000000. Default: 0 Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gear Ratio
Description: Gear ratio of mechanical unit for each axis.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$inp os_time[9]
Minimum: 0 Default: 5000 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: In-position Detection Time
Description: In position detection time after command output is zero. If the robot does not come
in the position within specified time values, an alarm will be posted.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$inpos_type
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: In-position Type
Description: Type of inposition checking.
0 : use error and counts in filter
1 : use error only and ignore exp filter
2 : same as o but include current and previous command
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$jg_fl tr_scl
Minimum: 0.0 Default: 1.0 Maximum: 2.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Jog Filter Scale
Description: Scale factor for filter lengths while jogging.
Power Up: Effective on cold start
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$jntv ellim[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Joint Velocity Limits
Description: $jntvellim defines joint speed limits in units of degrees per second or millimeters
per second for each robot joint. It is used to calculate the speed of all joint interpolated motion.
If motion speed of any joint exceeds the value of $jntvellim during linear or circular motion, the
robot speed will slow down so that the joint velocity becomes within its limit, and the warning
message, ``Joint speed limit used,'' will be displayed. Since the accuracy of motion is not
guaranteed in this case, this condition should be avoided by reteaching the positions.
The value of $jntvellim is set by the controlled start robot setup program and should not be
increased beyond the default values for robot axes. For the extended axes, you are responsible
for setting the value correctly using the Control Start Extended axes/Nobot setup Program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$jog_time_m
Minimum: 0 Default: 5 Maximum: 30
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Jog Time
Description: The number of $SCR.$itp_time cycles that are used for each jog motion interval.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$joint_rate
Minimum: 1 Default: 1 Maximum: MAX_MOTYPE_RATE
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Joint Rate
Description: The number of $SCR.$itp_time cycles is used in one interpolation of joint motion.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$lc_qstp_enb
Minimum: 0.0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Local condition enable flag at quick stop.
Description: Specifies local condition handler handling at quick stop.
If TRUE, normal logic, local condition handler trigger is sent at quick stop.
If FALSE, lch trig is not sent at quick stop.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$linea r_rate
Minimum: 1 Default: 1 Maximum: MAX_MOTYPE_RATE
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Linear Rate
Description: The number of $SCR.$itp_time cycles is used in one interpolation of linear motion.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$lowe rlims[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Axis Lower Limits
Description: $lowerlims defines the lower joint limits in degrees or millimeters. The value of
$lowerlims is set by the controlled start robot setup program and should not be changed for robot
axes. For extended axes, you are responsible for setting the value correctly by the controlled
start extended axes setup program.
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$lowerlimsdf[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Default Axis Lower Limits
Description: This variable contains the default value of the lower joint limits in degrees or
millimeters. This value is used for resetting $PARAM_GROUP[1].$lowerlims[9].
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mas ter_pos[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Master Position
Description: $master_pos defines the mastering position of the robot as determined by the
mastering fixture. The value of $master_pos is in degrees for rotary axes and millimeters for
linear axes.
$master_pos is set by the controlled start robot setup program and should not be changed for
robot axes. For extended axes, you are responsible for setting the value correctly using the
controlled start extended axes setup program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ma x_amp_cur[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Maximum Amplifier Current
Description: Reserved for Internal use by FANUC Robotics.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$max_p ayload
Minimum: 0. Default: -0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Maximum Payload
Description: The maximum payload supported by the robot (units in Kg).
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$max_p th_acc
Minimum: 0.001 Default: 3125. Maximum: 20000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Maximum Cartesian Accel Along Path
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$min_a cc_cmc
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum acceleration time for CMC software
Description: This variable is no longer being used.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$min_a cc_shm
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum Accel Time for Joint Short Motion
Description: Minimum acceleration time for JOINT short motion. It is used for standard short
move softparts and Turbo move softparts.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$min_a cc_uca
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum Cartesian Acceleration Time for Short Motion
Description: This defines the minimum Cartesian acceleration time that will be used in case of
short motion. On V3.06P This defines the minimum acceleration time that will be used in case
$GROUP[1].$use_cartacc is turned on.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$min_a cc_uma
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum Joint Acceleration Time for Use Maxaccel Case
Description: This defines the minimum joint acceleration time that will be used in case
$GROUP[1].$usemaxaccel is turned on. It is used for standard short move softpart and Turbo
move softpart. On V3.06P and later it is used for the minimum joint and Cartesian acceleration
time in case $GROUP[1].$usemaxaccel is turned on.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mi n_acctime[9]
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum Acceleration Time
Description: This defines the minimum acceleration time that will be used for any motion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$min_c at_uma
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum Cartesian Acceltime for Usemaxaccel
Description: Minimum Cartesian acceltime when a value of $GROUP[*].$usemaxaccel is
enabled. It is used for standard short move softpart and Turbo move softpart.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$min_p ayload
Minimum: 0. Default: -0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Minimum payload for robot
Description: $min_payload is a minimum payload for robot (units in Kg). This variable is not
used from V4.10P.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mosign[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Motor Sign
Description: Defines the direction of axis motor rotation for each axis during calibration of robots
with absolute encoders.
The value of $mosign is set using the controlled start robot setup program and should not be
changed for robot axes. For extended axes, you are responsible for setting the value correctly
using the controlled start extended axes setup program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mot_l im_stp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Motor speed limit stop
Description: If true, when motor speed limit occurs a STOP severity error is issued and the
current motion is cancelled. If FALSE, the error is WARNING severity.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mo t_spd_lim[9]
Minimum: 0 Default: 2000 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motor Speed Limit
Description: $mot_spd_lim defines an array of motor speed limits, one per motor, in units of
RPM.
The value of $mot_spd_lim is set by the controlled start robot setup program and should not be
changed.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mount _angle
Minimum: -100000. Default: 0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Mount Angle
Description: For robots that support angle mounting, this is the angle of inclination.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mov er_gain[9]
Minimum: 0.0 Default: 0.0 Maximum: 1000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Move Error Gain Factor
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mo ver_offst[9]
Minimum: 0 Default: 524288 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Move Error Offset
Description: .$mover_offset replaces $moverrlims for move error limit checking
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mo ver_scale[9]
Minimum: 0.0 Default: 0.0 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Move Error Scale Factor
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$move rrlim[9]
Minimum: 0 Default: 0 Maximum: 100000000
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Move Error Limit (not supported)
Description:
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$mrrdum2
Minimum: 0 Default: 0 Maximum: 1000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Pad 2 Byte (Not supported)
Description: Reserved for Internal use by FANUC Robotics.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$path_ accel1
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Path Acceleration Time 1
Description: Used for IntelliTrak. This is the time, in milliseconds, of the first stage Cartesian
filter.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$path_ accel2
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Path Acceleration Time 2
Description: Used for IntelliTrak. This is the time, in milliseconds, of the second stage Cartesian
filter.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$path_ accel3
Minimum: 0 Default: 64 Maximum: 10000
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: SHORT
Name: Reserved for Future Use
Description: Reserved for future use
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload
Minimum: 0 Default: 0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Payload (not supported)
Description: Payload
Power Up: Requires a cold start to take effect (units in Kg).
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload_ix
Minimum: 0. Default: 0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Inertia of payload (x)
Description: The X direction component of the load's inertia around the load's centroid on the
tool coordinate whose setting is (x:0, y:0, z:0, w:0, p:0, r:0). Units in Kg cm2.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload_iy
Minimum: 0. Default: 0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Inertia of payload (y)
Description: The Y direction component of the load's inertia around the load's centroid on the
tool coordinate whose setting is (x:0, y:0, z:0, w:0, p:0, r:0). Units in Kg cm2.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload_iz
Minimum: 0. Default: 0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Inertia of payload (z)
Description: The Z direction component of the load's inertia around the load's centroid on the
tool coordinate whose setting is (x:0, y:0, z:0, w:0, p:0, r:0). Units in Kg cm2.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload_x
Minimum: -10000. Default: 0. Maximum: 10000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: X position of payload
Description: The X direction position of the load's centroid on the tool coordinate whose setting
is
(x:0, y:0, z:0, w:0, p:0, r:0). Units in cm.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload_y
Minimum: -10000. Default: 0. Maximum: 10000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Y position of payload
Description: The Y direction position of the load's centroid on the tool coordinate whose setting
is
(x:0, y:0, z:0, w:0, p:0, r:0). Units in cm.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$payload_z
Minimum: -10000. Default: 0. Maximum: 10000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Z position of payload
Description: The Z direction position of the load's centroid on the tool coordinate whose setting
is
(x:0, y:0, z:0, w:0, p:0, r:0). Units in cm.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$perch[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: REAL
Name: Perch Position (Reserved for future use).
Description: $perch is used to set the perch position. The $atperch system variable can be used
to determine if the current position of the robot is the same position as specified by $perch.
For robot axes, $perch[i] is in degrees or millimeters depending on the value of $rotary_axis. for
extended axes, $perch[i] is in the coordinates determined by $encscales. $perch is set using the
SETPERCH built-in procedure.
A softpart is available for perch detection which does not use this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$perch tol[9]
Minimum: -100000. Default: 0.1 Maximum: 100000.
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: REAL
Name: Perch Tolerance (Reserved for future use)
Description: $perchtol is used to define the tolerance used when the robot position is checked
using $perch.
For robot axes, $perchtol[i] is in degrees or millimeters depending on the value of $rotary_axis.
For the extended axes, $perchtol[i] is in the coordinates determined by $enscales.
If $perchtol[i] is negative, perch checking is turned off for axis i. $perchtol normally is set using
the built-in function SETPERCH.
A softpart is available for perch detection which does not use this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$ppabn_enbl
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Air Pressure Abnormal Signal
Description: Enable/disable the air pressure abnormal signal.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].proc_spdlim
Minimum: 0.0 Default: 2000.0 Maximum: 2000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Application process speed limit
Description: The upper limit for the application process speed. If the program speed is larger
than this speed, Cartesian filter uses double D filters.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].process_spd
Minimum: 0.0 Default: 2000.0 Maximum: 2000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Application process speed
Description: Application process speed. A tuning variable for Cartesian filter. The unit is in mm.
When this speed is greater than 0 and less than 2000, then a special filtering technique will be
apply for tighter corner rounding. However, if Turbo Move is loaded and enabled, this speed does
not take an effect.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$qstop_tol[1]
Minimum: 0 Default: 10 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Quick Stop Speed Tolerance.
Description: This is the maximum speed (in degrees/second) of quick stop for the first axis. If
speed is greater than this value, quick stop does not work to protect mechanism.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$qstop_tol[2 - 3]
Minimum: 0 Default: 28 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Quick Stop Speed Tolerance.
Description: This is the maximum speed (in degrees/second) of quick stop for the first axis. If
speed is greater than this value, quick stop does not work to protect mechanism.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$qstop_tol[4 - 5]
Minimum: 0 Default: 20 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Quick Stop Speed Tolerance.
Description: This is the maximum speed (in degrees/second) of quick stop for the first axis. If
speed is greater than this value, quick stop does not work to protect mechanism.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$qstop_tol[6 - 9]
Minimum: 0 Default: 0 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Quick Stop Speed Tolerance.
Description: This is the maximum speed (in degrees/second) of quick stop for the first axis. If
speed is greater than this value, quick stop does not work to protect mechanism.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$rotsp eedlim
Minimum: 0.001 Default: 500. Maximum: 1440.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Rotational Speed Limit
Description: The maximum value, in degrees per second, for the rotational speed of the
orientation vectors in a programmed Cartesian motion.
The default value can be reset to a higher value to increase the speed of the robot. If the new
value is too large, the error message, ``Joint Velocity Limit ($jntvellim)'' will be displayed.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$servo_ctrl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Servo Control Scheme
Description: Servo control scheme where:
$servo_ctrl = 0 : PI_CONTROL (PI servo control scheme)
$servo_ctrl = 1 : SM_CONTROL (Sliding Mode servo control scheme) constants are defined in
MOCONS.HC. > From V3.07P, $sv_ctrl_typ[] is used instead.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$shft_erlim
Minimum: 0 Default: 0 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Soft Floating Error Limit
Description: These parameters are used for searching errors exceeding with soft floating ON.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$short mo_mgn
Minimum: 0.0 Default: 0.2 Maximum: 1000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Standard Short motion Acceleration Scale for Joint Motion
Description: Scale factor for JOINT standard short motion. One of the system variables for joint
standard short motion support.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$slmt_e1_lw[3]
Minimum: -100000 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Software Lower Limit Extended Axis 1
Description: Software lower limit extended axis 1.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$slmt_ e1_num
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Software Limit Number for Extended Axis 1
Description: Software limit number for extended axis 1. Three choices can be selected from
$slmt_j1_up or $slmt_j1_lw.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$slmt_e1_up[3]
Minimum: -100000 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Software Upper Limit Extended Axis 1
Description: Software upper limit extended axis 1.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$slmt_j1_lw[3]
Minimum: -100000 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Software Lower Limit Joint 1
Description: Software lower limit for joint 1.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$slmt_ j1_num
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Software Limit Number Joint 1
Description: Software limit number for joint 1. Three choices can be selected from $slmt_j1_up
or $slmt_j1_lw.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$slmt_j1_up[3]
Minimum: -100000 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Software Upper Limit Joint 1
Description: Software upper limit for joint 1.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$snglr ty_stp
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Singularity Stop Control Switch
Description: Singularity stop control switch. If $snglrty_stp is set to TRUE, the robot will stop
near the singularity point.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$spcco unttol[9]
Minimum: 0 Default: 524287 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Serial Pulse Coder Checking Tolerance
Description: Serial pulse coder for pulse coder reset checking. This checking is performed
during the power up by comparing the current encoder value with previous stored value of pulse
code machine pulse just prior to power down. The difference is then compared with this variable,
if this axis is not moving at the time of power down. This is checked only if this axis has brake on
it.
Power Up: Set by filter task internally.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$spcmovetol[9]
Minimum: 0 Default: 3670016 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Serial Pulse Coder Checking Moving Tolerance
Description: Serial pulse coder for pulse coder reset checking. This checking is performed
during the power up by comparing the current encoder value with previous stored value of pulse
code machine pulse just prior to power down. The difference of it is then compared with this
variable, if this axis is moving at the time of power down. This is checked only if this axis has
brake on it.
Power Up: Set by filter task internally.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$speedlim
Minimum: 0.001 Default: 2000 Maximum: 100000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Speed Limit
Description: The maximum programmed speed. If the instruction speed exceeds this value,
then a run-time error is posted.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$speed limjnt
Minimum: 0 Default: 2000 Maximum: 100000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Joint Speed Limit
Description: When JOINT motion is issued, the units of $group.$speed are used and are in
mm/sec. However,internally this is converted to a percentage of maximum speed, so that at
maximum speed the command joint velocity is the same as $PARAM_GROUP.$jntvellim.
$PARAM_GROUP.$speedlimj nt is used as the maximum speed for joint motion.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$spin_ctrl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Wrist Joint Speed Control
Description: This flag is used to enable or disable usage of maximum wrist joint speed. When
user specify a linear motion with the wrist joint option, if the wrist joint motion dominates, not
much of linear motion but lots of wrist motion, this flag will affect the motion time. When this flag
is false, the maximum wrist joint speed is used. This means the wrist joint option will not affect
the motion time. When this flag is true, the programmed wrist joint speed is used. This means the
wrist joint option will slow down the motion time.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$stop erlim[9]
Minimum: 0 Default: 0 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Stop Error Limit
Description:
$stoperlim defines an array of the servo following error tolerances while stopping for each axis. It
is expressed in units of detector pulses.
The value of $stoperlim is set by the controlled start robot setup program and should not be
changed for robot axes. For extended axes, you are responsible for setting the value correctly by
the controlled start extended axes setup program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$stoptol[9]
Minimum: 0 Default: 0 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Stop Tolerance
Description: Defines how close the current position must be to the command position for the
motion to be considered complete for FINE termination type.
$param_group.$stoptol is set by the controlled start robot setup program and should not be
changed for robot axes. For extended axes, you are responsible for setting the value correctly by
the controlled start extended axes setup program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv _ctrl_typ[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Servo Control Type
Description: Servo control scheme where
$sv_ctrl_typ = 0 : PI servo control scheme
$sv_ctrl_typ = 1 : Sliding Mode servo control scheme
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_dbl_smt
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Enables/disables double smoothing of Newton-Eul er compensation torque
Description: TRUE: Enables double smoothing of Newton-Euler compensation torque
FALSE: Disables double smoothing of Newton-Euler compensation torque
This system variable is a motion parameter and is tuned by FANUC. Normally, users should not
change this system variable. Note that the path and cycle time will be changed after modifying
this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_dh_a[1-9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: D-H parameter a
Description: D-H parameter a [mm]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_dh_cosa[1-9]
Minimum: -1. Default: 1. Maximum: 1.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: D-H parameter cos(alpha)
Description: D-H parameter cos(alpha) [non]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_dh_costh[1-9]
Minimum: -1. Default: 1. Maximum: 1.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: D-H parameter cos(theta)
Description: D-H parameter cos(theta) [non]
This parameter is effective only when $sv_dmy_lnk is TRUE.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_dh_d[1-9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: D-H parameter d
Description: D-H parameter d [mm]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_dh_sina[1-9]
Minimum: -1. Default: 0. Maximum: 1.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: D-H parameter sin(alpha)
Description: D-H parameter sin(alpha) [non]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_dh_sinth[1-9]
Minimum: -1. Default: 0. Maximum: 1.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: D-H parameter sin(theta)
Description: D-H parameter sin(theta) [non]
This parameter is effective only when $sv_dmy_lnk is TRUE.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_dmy_lnk[1-9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Dummy link
Description: If this variable is TRUE, the link is dummy link. If FALSE, it is not.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_grv_x
Minimum: -1000000. Default: 0. Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gravity X
Description: X component of gravity vector [mm/s^2]
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_grv_y
Minimum: -1000000. Default: 0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gravity Y
Description: Y component of gravity vector [mm/s^2]
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_grv_z
Minimum: -1000000. Default: 0. Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gravity Z
Description: Z component of gravity vector [mm/s^2]
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_lnk_ix[1-9]
Minimum: 0. Default: 0 Maximum: 100000000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Inertia about center of gravity of each link X
Description: X component of inertia about center of gravity of each link [kg.mm^2]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_lnk_iy[1-9]
Minimum: 0. Default: 0 Maximum: 100000000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Inertia about center of gravity of each link Y
Description: Y component of inertia about center of gravity of each link [kg.mm^2]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_lnk_iz[1-9]
Minimum: 0. Default: 0 Maximum: 100000000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Inertia about center of gravity of each link Z
Description: Z component of inertia about center of gravity of each link [kg.mm^2]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_lnk_m[1-9]
Minimum: 0. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Mass of each link
Description: Mass of each link [kg]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_lnk_x[1-9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Center of gravity of each link X
Description: X component of center of gravity of each link [mm]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_lnk_y[1-9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Center of gravity of each link Y
Description: Y component of center of gravity of each link [mm]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_lnk_z[1-9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Center of gravity of each link Z
Description: Z component of center of gravity of each link [mm]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_mcmd_dly
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Enables/disables motion command delay
Description: TRUE: Enables motion command delay when using Newton-Euler FALSE:
Disables motion command delay when using Newton-Euler
The calculation of Newton-Euler compensation torque takes 1 ITP or more. If this variable is
TRUE, the motion command delays for the time of the calculation of Newton-Euler compensation
torque. If FALSE, the motion command does not delay.
This system variable is a motion parameter and is tuned by FANUC. Normally, users should not
change this system variable. Note that the path and cycle time will be changed after modifying
this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_off_all
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: All Axes Control Switch for Automatic Servo on/off
Description: If $sv_off_all is set to TRUE, automatic servo on/off will be applied to all axes
simultaneously. If $sv_off_all is set to FALSE, automatic servo on/off will be applied to individual
axes.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_ off_enb[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Servo Off Enable
Description: $sv_off_enb controls whether or not each servo motor uses a timed servo
shutdown feature. It is used with $sv_off_time to shut off servo motors after motion has been
completed.
This feature is used primarily for energy saving purposes.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv _off_time[9]
Minimum: 0 Default: 10000 Maximum: 100000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Servo Off Time
Description: $sv_off_time defines the time interval, in milliseconds, after which the servo motors
are shut down.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sv_thet0[1-9]
Minimum: -6.2832 Default: 0. Maximum: 6.2832
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Theta0
Description: When calculating theta from each joint axis, this Theta0 is added as an offset
angle. [rad]
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GR OUP[1].$sv_z_sign[1-9]
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Z sign
Description: If this variable is TRUE, Z direction of the link frame is the same as the rotational
direction of the link when the motor moves to positive direction. If FALSE, it is opposite.
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$syn_e rr_lim
Minimum: 0 Default: 0 Maximum: 100000
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Synchronous Error Limit (Not supported)
Description:
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sync_gain
Minimum: 0 Default: 0 Maximum: 100000
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Synchronous Gain Factor (not supported)
Description:
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$sync_ offset
Minimum: 0 Default: 0 Maximum: 100000
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Synchronous Compensation Offset (not supported)
Description:
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$t1t2_sngstp
Minimum: 0.0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Singularity stop at T1 and T2 mode.
Description: Specifies whether or not the robot should stop in T1 or T2 mode when entering a
singularity zone.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$torque_cons[9]
Minimum: 10000000000. Default: 0. Maximum: 10000000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Torque Constants
Description: $The static torque constants of motor. These values are generally set in robot
library.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$trkerrlim
Minimum: 0 Default: 0 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Tracking Error Limit
Description: Tracking error limit for sliding mode control. If the servo tracking error exceeds
$trkerrlim in sliding mode control, the ``move error limit'' alarm will be posted.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$tsmod_time
Minimum: 0 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Tip Stick Detection Time
Description: Tip stick detection time for spot welding applications.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$uppe rlims[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Axis Upper Limits
Description: $upperlims defines the upper joint limits, in degrees or millimeters.
The value of $upperlims is set using the controlled start robot setup program and should not be
changed for robot axes. For extended axes, you are responsible for setting the value correctly
using the controlled start extended axes setup program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$upperlimsdf[9]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Default Axis Upper Limits
Description: This variable contains the default value of the upper joint limits in degrees or
millimeters. This value is used for resetting $PARAM_GROUP[1].$upperlims[9].
Power Up: Effective on cold start.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$use_cal
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Alarm Type Switch for Motor Speed Limit
Description: If set to true, a servo alarm will occur when motor speed limit is exceeded during
CMC motion. If set to FALSE, only a warning will occur.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decoup_mgn STRUCTURE
Name: Decoupling torque (between J2 and J3 axes) parameters
Description: Decoupling torque (between J2 and J3 axes) parameters
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decoup_mgn[1]
Minimum: -100000. Default: 1 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (between J2 and J3 axes) parameter (1)
Description: Margin parameter for coupling torque between J2 and J3 axes.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decoup_mgn[2]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (between J2 and J3 axes) parameter (2)
Description: This value is added to the J3 axis angle when calculating coupling torque between
J2 and J3 axes. [radian]
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decoup_mgn[3]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (between J2 and J3 axes) parameter (3)
Description: Not used.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decoup_mgn[4]
Minimum: -100000. Default: 0 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (between J2 and J3 axes) parameter (4)
Description: Not used.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr STRUCTURE
Name: Decoupling torque (considering wrist axes) control parameters
Description: Decoupling torque (considering wrist axes) control parameters
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[1]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (1)
Description: Margin parameter for gravity of J4 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[2]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (2)
Description: Margin parameter for position of gravity center of J4 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[3]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (3)
Description: Margin parameter for inertia at gravity center of J4 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[4]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (4)
Description: Margin parameter for gravity of J5 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[5]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (5)
Description: Margin parameter for position of gravity center of J5 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[6]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (6)
Description: Margin parameter for inertia at gravity center of J5 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[7]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (7)
Description: Margin parameter for gravity of J6 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[8]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (8)
Description: Margin parameter for position of gravity center of J6 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_GROUP[1].$decp_mgn_wr[9]
Minimum: 0. Default: 1. Maximum: 10.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Decoupling torque (considering wrist axes) parameter (9)
Description: Margin parameter for inertia at gravity center of J6 axis
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PARAM_MENU[21]
Minimum: "" Default: " " Maximum: " "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Menu of PARAMETER statement in TPE
Description: This variable contains the items displayed in the CHOICE menu for the
PARAMETER statement in the teach pendant editor. This allows you to setup default values for
easy selection in the PARAMETER statement and avoid the use of alpha entry.
In the SYSTEM Variables screen, it is possible to set a total of 21 parameter names. The
parameter names must be within 20 characters.
$PARAM_MENU[21] has the following 3 strings as default:
`DEFPULSE', `WAITTMOUT', `RCVTMOUT'
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PASSSUPER STRUCTURE
Name: Super User Password variable structure
Description: This set of variables provides super user password information that controls the
password functionality.
Power Up:
User Interface Location: SYSTEM Variables screen.
$ PASSSUPER.$level
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Install Users Level
Description: This variable indicates the password level associated with the install user.
Power Up:
User Interface Location: SYSTEM Variables screen.
$PASSSUPER.$name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Install User Password variable structure
Description: This set of variables provides password information on the install user.
Power Up:
User Interface Location: System global variable screen.
$PASSSUPER.$time_out
Minimum: -1 Default: 15 Maximum: 10080
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Install Users Time Out
Description: This variable indicates the amount of time that the install user will stay logged in.
Power Up:
User Interface Location: SYSTEM Variables screen.
$PASSWORD STRUCTURE
Name: Password configuration record
Description: This structure contains password information.
Power Up: Changes take effect immediately.
User Interface Location: SETUP Passwords screen
$PASSWORD.$count_down
Minimum: 0 Default: 0 Maximum: 151200000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Countdown of Password Time-out
Description: The system will automatically begin a countdown of the time-out value after a
password is entered. When the countdown value reaches 0, the password will expire. The
countdown value is specified in CPU ticks.
Power Up: The system decrements the countdown every CPU tick after a password is specified.
User Interface Location: SETUP Passwords screen
See Also: PASSWORD.$time_out system variable
$PASSWORD.$curr_level
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Current password level
Description: Specifies the current password level. The levels are
OPERATOR = 0
PROGRAM = 1
SETUP = 2,
INSTALL = 3.
Power Up: Changed on the SETUP Passwords screen after a password is entered correctly.
User Interface Location: SETUP Passwords screen
$PASSWORD.$curr_user
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Current User
Description: This indicates which user is currently logged in.
Power Up:
User Interface Location: SYSTEM Variables screen.
$PASSWORD.$levels[4]
Minimum: MIN_INT Default: 0 Maximum: MAX_INT
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Bit Mask of the Password Levels
Description: The system uses this variable to determine which level of access is required for
any given component.
Power Up: This variable cannot be modified.
User Interface Location:
$PASSWORD.$log_events
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Log Password Events
Description: This indicates whether events that occur will be logged into the Password Log.
Power Up:
User Interface Location: System global variable screen.
$PASSWORD.$num_users
Minimum: 10 Default: 10 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Number of Users
Description: This indicates how many password users to allow.
Power Up:
User Interface Location: System global variable screen.
$PASSWORD.$time_out
Minimum: -1 Default: 15 Maximum: 10080
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Password Time-out
Description: Indicates a time-out value, in minutes, until a given password is automatically
disabled. This will prevent an advanced user from leaving a system unprotected. If the time-out
value is > 0, then the system will automatically reset to the OPERATOR level password after the
time expires or after the next cold start. If the time-out value is 0, the given password will never
expire.
Power Up: Change is effective immediately after a password is specified.
User Interface Location: SETUP Passwords screen
See Also: PASSWORD.$count_down
$PATH_ADJUST STRUCTURE
Name: Setup of torch posture conversion function
Description: These system variables are used by the torch posture conversion function.
Individual fields within this structure are described below.
Power Up: Changes to these variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$c onv_enbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ENABLE/DISABLE for torch posture conversion function
Description: ENABLE : Posture conversion function is enabled. DISABLE: Posture conversion
function is disabled.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$c reate
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: REPLACE/CREATE of converted program
Description: This system variable is used to select which the converted part is created as a new
program or is replaced on the original program. REPLACE : The converted part is replaced on
the original program.
CREATE : The converted part is created as a new program.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$m atch_first
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ABSOLUTE/MATCH first selection for reference torch posture
Description: ABSOLUTE : Direct entried values for travel and work angle are used. MATCH_1 :
Posture of top in specified range is used for travel and work angles.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$n um_addpnt
Minimum: 0 Default: 1 Maximum: 9
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Number of additional points
Description: This indicates the number of additional points.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$p art_of_prg
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: WHOLE/PART of converted range
Description: This system variable is used to select the range of conversion in program. WHOLE
: whole of program is converted PART : Specified range is only converted
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$p itch_len
Minimum: 0 Default: 3 Maximum: 20
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Pith length of additional points
Description: This indicates the distance between additional points.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$r ef_plane
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Kind of base plane
Description: 1(HORIZON): Horizontal plane is used as base plane. 2(3POINTS): Plane created
from 3 taught positions is used as base plane. 3(ADJUST) : Plane whose normal vector matches
approach vector of 1 taught positions is used as base plane.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$s mooth_enbl
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ENABLE/DISABLE for corner smoothing function
Description: ENABLE : Corner smoothing function is enabled. DISABLE: Corner smoothing
function is disabled.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$t ravel_angl
Minimum: -360 Default: 0 Maximum: 360
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Travel angle for direct entried
Description: This system variable is travel angle at the direct entry.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATH_ADJUST.$w ork_angl
Minimum: -360 Default: 90 Maximum: 360
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Work angle for direct entried
Description: This system variable is work angle at the direct entry.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_AJST STRUCTURE
Name: Information of base plane (ADJUST)
Description: This is normal vector information of base plane when ADJUST (torch posture) is
selected in base plane selection screen. Individual fields within this structure are described
below.
Power Up: Changes to these variables take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_AJST.$d ummy
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: UBYTE
Name: Dummy variable
Description: For internal use only. Do not modify this system variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: System Variables screen
$PATHAJ_AJST.$d ummy1
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: UBYTE
Name: Dummy variable
Description: For internal use only. Do not modify this system variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: System Variables screen
$PATHAJ_AJST.$d ummy2
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: UBYTE
Name: Dummy variable
Description: For internal use only. Do not modify this system variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: System Variables screen
$PATHAJ_AJST.$g rp_num
Minimum: 0 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: UBYTE
Name: Recorded position group number
Description: For internal use only. Do not modify this system variable. This system variable
indicates the recorded position group number.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_AJST.$i ndex
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Recorded position index
Description: For internal use only. Do not modify this system variable. This system variable
indicates the recorded position index.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_AJST.$p os_type
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Recorded position type
Description: For internal use only. Do not modify this system variable. This system variable
indicates the recorded position type.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_AJST.$p osdat
Minimum: MIN_POSX Default: DEF_POSX Maximum: MAX_POSX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: POSEXT
Name: Position data for base plane of ADJUST
Description: For internal use only. Do not modify this system variable. This system variable
indicates the position data.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1] Structure
Name: Information of base plane (3POINTS)
Description: This is normal vector information of base plane when 3POINTS (3 taught positions)
is selected in base plane selection screen. Individual fields within this structure are described
below.
Power Up: Changes to these variables take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1].$approach_x
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: X element of approach vector in position data
Description: For internal use only. Do not modify this system variable. This system variable
indicates X element of approach vector in the recorded position.
Power Up: Changes to this variable take effect immediately
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1].$approach_y
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Y element of approach vector in position data
Description: For internal use only. Do not modify this system variable. This system variable
indicates Y element of approach vector in the recorded position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1].$approach_z
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Z element of approach vector in position data
Description: For internal use only. Do not modify this system variable. This system variable
indicates Z element of approach vector in the recorded position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3 POS[1].$e[1-2]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Extended axis element of position data
Description: For internal use only. Do not modify this system variable. This system variable
extended axis element of the recorded position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3 POS[1].$grp_num
Minimum: 0 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: UBYTE
Name: Recorded position group number
Description: For internal use only. Do not modify this system variable. This system variable
indicates the recorded position group number.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3 POS[1].$index
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Recorded position index
Description: For internal use only. Do not modify this system variable. This system variable
indicates the recorded position index.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3 POS[1].$pos_type
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Recorded position type
Description: For internal use only. Do not modify this system variable. This system variable
indicates the recorded position type.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1].$x
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: X element of position data
Description: For internal use only. Do not modify this system variable. This system variable
indicates X element of the recorded position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1].$y
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Y element of position data
Description: For internal use only. Do not modify this system variable. This system variable
indicates Y element of the recorded position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PATHAJ_3POS[1].$z
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Z element of position data
Description: For internal use only. Do not modify this system variable. This system variable
indicates Z element of the recorded position.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Torch posture conversion screen
$PAUSE_NCONT
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Pause when no contact. In the menu, it is defined as Error on Failure.
Description: If this variable is set to true, the teach pendant program will pause when robot can
not make a contact with a part after it exhausts its search distance. If this variable is set to
FALSE, the robot will only post a warning message and continue to the next TPE instruction
Power Up: Changes take effect immediately.
User Interface Location: In touch schedule under Data screen.
See Also: $SEARCH_DIST, $CONT_R_NUM
The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller ArcTool Setup
and Operations Manual
$PC_TIMEOUT
Minimum: 0 Default: 25 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: ULONG
Name: RPC Client Timeout
Description: Specifies the time in seconds for a client connection to wait for a reply from the PC
before cancelling the read operation.
Power Up: Effective at cold start or when the controller client is reconnected.
User Interface Location: SYSTEM Variables screen
$PCCRT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PC CRT/KB Feature Enable
Description: Enables (1) or disables (0) the PC CRT/KB. $PCCRT_HOST is the host name of
the PC CRT/KB.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$PCCRT_HOST
Minimum: "" Default: "PCCRT " Maximum : ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: PC CRT/KB Host Name
Description: A string of up to 32 characters defining the name which represents the PC for the
CRT/KB on the network. It should be unique across the network. It must also be defined as an
element in the $HOSTENT array.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PCTP
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PC Teach Pendant Feature Enable
Description: Enables (1) or disables (0) the PC teach pendant. $PCTP_HOST is the host name
of the PC teach pendant.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$PCTP_HOST
Minimum: "" Default: "PCTP " Maximum : ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: PC Teach Pendant Host Name
Description: A string of up to 32 characters defining the name which represents the PC teach
pendant on the network. It should be unique across the network. It must also be defined as an
element in the $HOSTENT array.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$PG_DEFSPD STRUCTURE
Name: Default motion speed and unit for application motion speed statement
Description: This variables are used with application motion speed statements; for example, the
WELD_SPEED statement in ArcTool.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen and application setup screen
( WELD system setup screen and so forth )
$PG_DEFSPD.$ap_def_spd
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Description: For internal use only. Do not modify this system variable. When application speed
statement (WELD_SPEED) is executed without application start statement (ARC START), this
variable is used as the default speed. It is also used in step mode and backward execution.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen and Application Setup screen
(WELD system setup screen and so forth )
$PG_DEFSPD.$ap_def_ unit
Minimum: 0 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Application default speed unit
Description: For internal use only. Do not modify this system variable. When application speed
statement (WELD_SPEED) is executed without application start statement (ARC START), this
variable is used as the default speed unit. It is also used in step mode and backward execution.
0:%, 1:mm/sec, 2:cm/min, 3:IPM, 4:deg/sec, 5:sec
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen and Application Setup screen (WELD
system setup
screen and so forth )
$PG_DEFSPD.$apsp_pr exe
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Pre-execution of application default speed statement
Description: Enable/disable for pre-execution when application speed statement
(WELD_SPEED) is executed.
0: Disable of pre-execution for application speed statement
1: Enable of pre-execution for application speed statement
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PG_DEFSPD.$dly_las tps
Minimum: 0 Default: 2000 Maximum: 4000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Delay time for adjustment of taking last paused position data
Description: For internal use only. Do not modify this system variable. When original path
resume without motion statement is executed, the last paused position used, which is recorded
as the last pausing position. When the data is not recorded at appropriate timing, the robot
moves back at restart. This variable is used for adjustment of this timing.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM variable screen
See Also: This is not related to application speed statement.
$PG_MAX_SPED[5] STRUCTURE
Name: Program Maximum Speed Structure
Description: These system variables are used to control maximum motion speed. Individual
fields within this structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen. This variable is set by MAX SPEED
instruction.
$PG_MAX_SPED[1].$jnt_speed[9]
Minimum: 0.001 Default: 0.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Joint Speed
Description: The joint motion speed in program is clamped by this value. (Units are in deg/sec)
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen. This variable is set by MAX SPEED
instruction.
$PG_MAX_SPED[1].$cart_speed
Minimum: 0.001 Default: 0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian Speed
Description: The Cartesian motion speed in program is clamped by this value. (Units are in
mm/sec)
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen. This variable is set by MAX SPEED
instruction.
$PGDEBUG
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program Debugging
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$PGINP_WORD[5]
Minimum: "" Default: "PRG " Maximum: " "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Word for Program Name Input
Description: Used to set the text string for the Word field in the program create screen.
$PGINP_WORD[i] corresponds to softkey Fi (where i=1 - 5). You can use these variables to
reset the softkey labels if you frequently use the same word for the program name.
By default,
$PGINP_WORD[1]
PRG$PGINP_WORD[2]
MAIN$PGINP_WORD[3]
SUB$PGINP_WORD[4]
TEST$PGINP_WORD[5] *uninit*
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen, SYSTEM Config screen
$PGTRACE_UP Structure
Name: Update information of execution history
Description: For internal use only. Do not modify this system variable. This system variable
updates execution history information. Individual fields within this structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACE_UP.$disp _pxnn
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Current displayed PX task number
Description: For internal use only. Do not modify this system variable. This system variable
means the current displayed PX task number.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$PGTRACE_UP.$trc_ update
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Update flag for execution history
Description: For internal use only. Do not modify this system variable. This system variable
means the update flag for execution history.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACECTL[1] STRUCTURE
Name: Control data of execution history
Description: For internal use only. Do not modify this system variable. This system variable
controls data for execution history. Individual fields within this structure are described below.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACECTL [1].$task_id
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: PX task ID which controls this buffer
Description: For internal use only. Do not modify this system variable. This system variable
means PX task ID which controls this trace buffer.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACECTL[1].$task_status
Minimum: -2 Default: 2 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: PX task status
Description: For internal use only. Do not modify this system variable. This system variable
means PX task status.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACECTL[1].$trc_btm_idx
Minimum: -32768 Default: 1 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Index of bottom of execution history buffer
Description: For internal use only. Do not modify this system variable. This system variable
means the index in history buffer which is displayed at the bottom in execution history.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACECTL[1].$trc_top_idx
Minimum: -32768 Default: 1 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Index of top of execution history buffer
Description: For internal use only. Do not modify this system variable. This system variable
means the index in history buffer which is displayed at the top in execution history.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACED T[1,1].$ept_index
Minimum: -32768 Default: -1 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: EPT index of executing program
Description: For internal use only. Do not modify this system variable. This system variable
means the EPT index of executing program. EPT index is internal index number of the program.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACED T[1,1].$exec_type
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: FWD/BWD execution type
Description: For internal use only. Do not modify this system variable.
1:No execution
2:FWD execution
3:BWD execution
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACED T[1,1].$file_ofst
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Executed line number
Description: For internal use only. Do not modify this system variable. This system variable
means the file offset for the KAREL program.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACED T[1,1].$line_num
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Executed line number
Description: For internal use only. Do not modify this system variable. This system variable
means the executed line number of the executing program.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACED T[1,1].$line_st
Minimum: 1 Default: 4 Maximum: 4
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Line status
Description: For internal use only. Do not modify this system variable.
1:Line is not executed.
2:Line is executing.
3:Line is finished.
4:Program is aborted.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PGTRACELEN
Minimum: 1 Default: 200 Maximum: 1000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Length of execution history list
Description: This system variable indicates the length of execution history list.
Power Up: You must perform a cold start for the change of take effect.
User Interface Location: SYSTEM Variables screen
$PLID_GRP Structure
Name: Payload identification
Description: $PLID_GRP is used to identify the payload parameters of the each robot.
Individual variables within this structure are described below.
Power Up: Changes to these variables take effect immediately.
User Interface Location: SYSTEM Variables screen
$PLID_GRP.$armload1
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Default armload
Description: For internal use only. Do not modify this system variable.
This variable is used to set the "DEFAULT" value in the Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$ARMLOAD[1]. This
value is based on the acceptable armload (ex. mounted to J3 axis in S-420iF)[kg].
$PLID_GRP.$armload2
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Default armload
Description: For internal use only. Do not modify this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT in the Payload setup screen, this is set to $PARAM_GROUP.$ARMLOAD[2]. And this
value is based on the the acceptable armload.
$PLID_GRP.$cal_po s[1-9]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Robot position at Payload calibration.
Description: For internal use only. Do not modify this system variable. This variable is the
position where Payload calibration is done. It is set in the end of Payload calibration. When
Payload estimation is executed, robot must be the same position as Payload calibration,
because gravity that affects to robot relies on robot position.
$PLID_GRP.$cal_tcmd[1-9]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Torque command at Payload calibration.
Description: For internal use only. Do not modify this system variable. This variable is the torque
command of each axis received from the servo at Payload calibration. "$est_tcmd - $cal_tcmd" is
used for calculating payload.
$PLID_GRP.$calaxe s
Minimum: 0 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of axes in group that Payload calibration was done.
Description: For internal use only. Do not modify this system variable.
This variable is used to check whether the system that Payload estimation is executed is the
same as one that Payload calibration was. For example, when the calibration system has no
extended axis but the estimation one has it, the payload estimation might not have a good result
because the extended axis can affect to gravity moment of robot axes.
$PLID_GRP.$caldon e
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Payload calibration completion flag
Description: For internal use only. Do not modify this system variable.
This variable indicates that Payload calibration is already done or not. It is set to TRUE when
Payload calibration is completed. It is used to check whether Payload estimation can be
executed or not. If $caldone is FALSE, Payload estimation cannot be executed.
$PLID_GRP.$calexe c
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Payload calibration executing flag
Description: For internal use only. Do not modify this system variable.
When Payload calibration starts, $calexec is set to TRUE. And while $calexec is TRUE, torque
command($cal_tcmd) is received from servo. When Payload calibration finishes, $calexec
returns to FALSE.
$PLID_GRP.$dsp_enbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Enable or disable flag to display Payload identification screen.
Description: For internal use only. Do not modify this system variable. This variable is used to
check whether the Payload identification screen can be displayed or not. It is set to TRUE in the
robot which is supported for Payload identification.
$PLID_GRP.$error_ mgn
Minimum: 0 Default: 200 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Acceptable margin of servo position error.
Description: Payload identification needs the real robot position because it uses the gravity that
affects each robot axis. So fewer servo position errors are better for Payload identification.
$error_mgn means how much servo position error is acceptable, unit is [pulse]. Users can tune
this value to improve identification performance. Generally, the smaller $error_mgn is, the longer
executing identification time is and the better the performance of identification is. But if
$error_mgn is set to so small to improve the performance, executing identification time is very
long because the servo error does not intend to be smaller than $error_mgn.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PLID_GRP.$est_tc md[1-9]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Torque command at Payload estimation.
Description: For internal use only. Do not modify this system variable. This variable is the torque
command of each axis received from servo at Payload estimation. "$est_tcmd - $cal_tcmd" is
used for calculating payload.
$PLID_GRP.$estdon e
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Payload estimation completion flag
Description: For internal use only. Do not modify this system variable.
This variable indicates Payload estimation is already done or not. It is used to check whether
Estimation result can be displayed in Payload identification screen or not. It is set to TRUE when
Payload estimation is completed. It is set to FALSE when Payload calibration is re-executed and
completed.
$PLID_GRP.$estexe c
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Payload estimation executing flag
Description: For internal use only. Do not modify this system variable.
When Payload estimation starts, $estexec is set to TRUE. And while $estexec is TRUE, torque
command ($est_tcmd) is received from servo. When Payload estimation finishes, $estexec
returns to FALSE.
$PLID_GRP.$id_res ult[1-10]
Minimum: .0 Default: .0 Maximum: -0.1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Identification result.
Description: For internal use only. Do not modify this system variable.
This variable identifies the result of payload parameters.
$id_result[1] -- payload
$id_result[2] -- payload_x
$id_result[3] -- payload_y
$id_result[4] -- payload_z
$id_result[5] -- payload_ix
$id_result[6] -- payload_iy
$id_result[7] -- payload_iz
$id_result[8] -- armload 1
$id_result[9] -- armload 2
$id_result[10] -- armload 3
$PLID_GRP.$max_diff
Minimum: -1.0 Default: 0.0 Maximum: 1.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Difference from gravity 0 position to large side.
Description: For internal use only. Do not modify this system variable. Payload identification
uses the gravity moment that affects J2 axis in current spec. So J2 axis must be in the position
where gravity intends to affect. Both $max_diff and $min_diff means broader position that
identification works well. And both of them are described in sine of axis. Concretely, if $min_diff <
sin(J2 axis) < $max_diff, Payload identification will not work.
$PLID_GRP.$min_diff
Minimum: -1.0 Default: 0.0 Maximum: 1.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Difference from gravity 0 position to small side.
Description: For internal use only. Do not modify this system variable. Payload identification
uses the gravity moment that affects the J2 axis in current spec. The J2 axis must be in the
position where gravity intends to affect. Both $max_diff and $min_diff means broader position
that identification works well. And both of them are described in sine of axis. Concretely, if
$min_diff < sin(J2 axis) < $max_diff, Payload identification will not work.
$PLID_GRP.$payloa d
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload of test work piece.
Description: For internal use only. Do not modify this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD and
$GROUP.$PAYLOAD. This value is based on the weight[kg] of test work piece.
$PLID_GRP.$payload_ix
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload_ix of test work piece.
Description: For internal use only. Do not modify this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD_IX. This
value is based on the inertia around center of gravity[kgcm^2] of test work piece.
$PLID_GRP.$payload_iy
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload_iy of test work piece.
Description: For internal use only. Do not modify this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD_IY. This
value is based on the inertia around center of gravity[kgcm^2] of test work piece.
$PLID_GRP.$payloa d_iz
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload_iz of test work piece.
Description: For internal use only. Do not modify this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD_IZ. This
value is based on the inertia around center of gravity[kgcm^2] of test work piece.
$PLID_GRP.$payload_x
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload_x of test work piece.
Description: For internal use only. Do not this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD_X. And this
value is based on the center of gravity[cm] of test work piece.
$PLID_GRP.$payload_y
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload_y of test work piece.
Description: For internal use only. Do not this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD_Y. And this
value is based on the center of gravity[cm] of test work piece.
$PLID_GRP.$payload_z
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Payload_z of test work piece.
Description: For internal use only. Do not this system variable.
This variable is used to set the "DEFAULT" value in Payload setup screen. If you press F4,
DEFAULT, in the Payload setup screen, this is set to $PARAM_GROUP.$PAYLOAD_Z. And this
value is based on the center of gravity[cm] of test work piece.
$PLID_GRP.$tcmdsucc
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Success of torque command reception.
Description: For internal use only. Do not modify this system variable. This variable is used to
check whether some error occurs or not in receiving torque command. If $tcmdsucc is not
SUCCESS, some error occurs and receiving torque command will be stopped. The kinds of
errors are the following. - No system variables pointers. - Angle mounted robot. - Some axes are
SRDY off. - Robot is not mastered or not calibrated. - Payload calibration has been not done yet.
(Only Payload estimation error) - Input Motion command while receiving torque command. -
Robot is not in the same position as Payload calibration. (Only Payload estimation error) - Robot
axes number at estimation is different from one at calibration. (Only Payload estimation error) -
Few gravity affects to J2 axis.
$PLID_SV Structure
Name: Payload identification power failure recovery
Description: For internal use only. Do not modify this system variable.
This variable is used to recover the payload identification/setup data at start-up after power down
while identifying or inputting them. Individual variables within this structure are described below.
$PLID_SV.$armload1
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved armload
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$armload[1] in the Payload setup/identification screen, This
$armload1 is set from $PARAM_GROUP.$armload[1]. If you turn off the controller while you are
modifying, $PARAM_GROUP.$armload[1], it is recovered at the next hot start.
$PLID_SV.$armload2
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved armload
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$armload[2] in Payload setup/identification screen, this
$armload2 is set from $PARAM_GROUP.$armload[2]. If you turn off the controller while you are
modifying, $PARAM_GROUP.$armload[2], it is recovered at the next hot start.
$PLID_SV.$cal_pos_sav[1 -9]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved calibration position
Description: For internal use only. Do not modify this system variable.
This variable is used in Payload identification screen and calibration only. Before executing
calibration, $cal_pos_sav is set from $PLID_GRP.$cal_pos. If you turn off the controller while you
are modifying, $cal_pos is recovered from $cal_pos_sav at the next hot start.
$PLID_SV.$cur_group
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Current group.
Description: For internal use only. Do not modify this system variable.
This variable indicates what group is operated when the controller is turned OFF. At hot start,
$cur_group is used to decide what group data should be displayed and recovered.
$PLID_SV.$cur_scrn
Minimum: 1 Default: 1 Maximum: 2
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Current screen.
Description: For internal use only. Do not modify this system variable.
This variable indicates which screen is displayed when the controller is turned OFF. At hot start,
$cur_scrn is used to decide which screen should be displayed. -- 1 : Payload setup screen. -- 2 :
Payload identification screen.
$PLID_SV.$flag_save
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: $PLID_GRP.$caldone or $PLID_GRP.$estdone flag status.
Description: For internal use only. Do not modify this system variable.
This variable is used in only Payload identification screen. It indicates the status of $caldone, if
$pi_type is 0, or $estdone, if $pi_type is 1, when the controller is turned OFF. At hot start and
when $cur_scrn is 2, $flag_save is used to recover status flag according to $pi_type.
$PLID_SV.$no_recover
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Flag to show the necessity of power failure recovery .
Description: For internal use only. Do not modify this system variable.
In Payload identification/setup screen, when modification is completed, $no_recover is set to
TRUE. So $no_recover means the necessity of power failure recovery. If $no_recover is TRUE,
power failure recovery will not be needed because any modification is completed when the
controller is turned OFF.
$PLID_SV.$payload
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP/$GROUP.$payload in the Payload setup/identificati on
screen, this $payload is set from $GROUP.$payload. If power down in modifying,
$PARAM_GROUP/$GROUP.$p ayload are recovered at next hot start. And when F4, DEFAULT,
is selected in the Payload setup screen, then power down and power failure recovery is needed,
the all below parameters, $PARAM_GROUP.$payload_x - $PARAM_GROUP.$armload[2], must
be recovered with $PARAM_GROUP/$GROUP.$payload.
$PLID_SV.$payload_ix
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload_ix
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$payload_ix in the Payload setup/identification screen, this
$payload_ix is set from $PARAM_GROUP.$payload_ix. If you turn off the controller while you are
modifying, $PARAM_GROUP.$payload_ix is recovered at the next hot start.
$PLID_SV.$payload_iy
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload_iy
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$payload_iy in the Payload setup/identification screen, this
$payload_iy is set from $PARAM_GROUP.$payload_iy. If you turn off the controller while you are
modifying, $PARAM_GROUP.$payload_iy is recovered at the next hot start.
$PLID_SV.$payload_iz
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload_iz
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$payload_iz in the Payload setup/identification screen, this
$payload_iz is set from $PARAM_GROUP.$payload_iz. If you turn off the controller while you are
modifying, $PARAM_GROUP.$payload_iz is recovered at the next hot start.
$PLID_SV.$payload_x
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload_x
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$payload_x in the Payload setup/identification screen, this
$payload_x is set from $PARAM_GROUP.$payload_x. If you turn off the controller while
modifying, $PARAM_GROUP.$payload_x is recovered at the next hot start.
$PLID_SV.$payload_y
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload_y
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$payload_y in the Payload setup/identification screen, this
$payload_y is set from $PARAM_GROUP.$payload_y. If you turn off the controller while
modifying, $PARAM_GROUP.$payload_y is recovered at the next hot start.
$PLID_SV.$payload_z
Minimum: 0.0 Default: 0.0 Maximum: 0.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved payload_z
Description: For internal use only. Do not modify this system variable.
Before modifying $PARAM_GROUP.$payload_z in the Payload setup/identification screen, this
$payload_z is set from $PARAM_GROUP.$payload_z. If you turn off the controller while
modifying, $PARAM_GROUP.$payload_z is recovered at the next hot start.
$PLID_SV.$pi_type
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Payload Identification type.
Description: For internal use only. Do not modify this system variable.
This variable indicates which operation is executing in the Payload identification screen at power
down. It is used in only Payload identification screen. At hot start and when $cur_scrn is 2,
$pi_type is used to decide which data should be recovered, calibration or estimation. -- 0 :
Calibration -- 1 : Estimation
$PLID_SV.$result_sav[1- 10]
Minimum: .0 Default: .0 Maximum: -0.1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Saved identification result
Description: For internal use only. Do not modify this system variable.
This variable is used in the Payload identification screen and estimation only. Before executing
estimation, $result_sav is set from $PLID_GRP.$id_result. If you turn off the controller while
modifying, $id_result is recovered from $result_sav at the next hot start.
$PLID_SV.$save_done
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Flag to finish saving data for power failure recovery.
Description: For internal use only. Do not modify this system variable.
In Payload identification/setup screen, all current necessary data are saved before modification.
This variable is set to TRUE after finishing saving all data to be saved. If $save_done is FALSE,
power failure recovery, except screen and group, will not be needed because any necessary
data are not modified when the controller is turned OFF.
$PLID_SV.$tcmd_save[1-9 ]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Saved torque command
Description: For internal use only. Do not modify this system variable.
This variable is used in Payload identification screen only. Before executing calibration or
estimation, $tcmd_save is set from $PLID_GRP.$cal_tcmd or $PLID_GRP.$est_tcmd. If the
controller is turned OFF during calibration execution or estimation, according to $pi_type,
$cal_tcmd or $est_tcmd is recovered from $tcmd_save at next hot start.
$PMON_LOGGER STRUCTURE
Name: PC Monitor Event Logger Configuration
Description: This structure contains configuration information for the PC Monitor Event Logger,
which is a mechanism by which events (like alarms) generated on the controller are logged
through the network to a PMON server running on a PC. This structure contains details
pertaining to the server. The individual fields are described below.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM variables screen.
$PMON_LOGGER.$hostname
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: PMON logger hostname
Description: Contains information regarding the host system to connect to. $HOSTNAME is the
node name of the host (typically a PC, which PMON connects to send alarms as they occur).
The network node name referred to by $HOSTNAME should be entered in the $HOSTENT
system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen.
$PMON_LOGGER.$servname
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: PMON logger service port name
Description: Specifies the service name of the PC running the PMON server. This variable
should be set to "EVENT_LOGGER." This entry should also exist in the $SERVENT array.
$PMON_LOGGER.$filter
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PMON logger filter mask
Description: The $FILTER field is used to determine what class of events will be posted to the
event logger. This integer is divided into 32 boolean bit fields. Setting this integer to zero ( all
FALSE ) disables event logging. The various bit values are ORed together.
(Saved in SYSVARS.SV)
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen.
$PMON_LOGGER.$serverok
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: PMON event logger Server OK flag
Description: $SERVEROK is used as a means to check if the PMON server on the PC is up
and running. PMON initializes it to TRUE. When a send fails, it sets this variable to FALSE.
When the connection is reestablished, the PC side sets this variable to TRUE again .
(Saved in SYSVARS.SV)
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen.
$PMR STRUCTURE
Name: Path Modification Record Route Correction Record Variable Delta Axis Coordinate
System
Description: Scheduled to be removed.
Power Up:
User Interface Location: SYSTEM Variables screen
$PMR.$delta_axis[9]
Minimum: -100000. Default: 0. Maximum: 100000.
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: REAL
Name: Path Modification Record Route Correction Record Variable for the Delta Axis Coordinate
System
Description: Scheduled to be removed Indicates the initial value of positioning form.
Power Up:
User Interface Location: SYSTEM Variables screen
$PMR_GRP[1] STRUCTURE
Name:
Description: Scheduled to be removed
Power Up:
User Interface Location: SYSTEM Variables screen
$PMR_GRP[1].$delta_frame
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: POSITION
Name: Delta Frame Coordinate System
Description: Scheduled to be removed. $deltaframe represents the positional data needed to
integrate the robot motion with an external sensor. The value of $deltaframe is used to provide
dynamic path modification by incorporating it into path planning to change the nominal path.
$deltaframe can be set based on external sensor data, internal auxiliary axes positions (table
coordinates), a generated vector (for weaving applications), or by some other method. Its value
can be with respect to the world coordinate system or the user frame, based on the application
and on the value of $tframenum.
Power Up:
User Interface Location: SYSTEM Variables screen
$PMR_GRP[1].$delta_speed
Minimum: -100000.0 Default: 0.0 Maximum: 100000.0
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: REAL
Name: Delta Speed
Description: Scheduled to be removed.
Power Up:
User Interface Location: SYSTEM Variables screen
$PMR_GRP[1].$delta_tool
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: POSITION
Name: Delta Tool Coordinate System
Description: Scheduled to be removed. $deltatool represents the position change with respect
to the tool frame based on external sensor data. The value of $deltatool, is incorporated into path
planning to change the nominal path dynamically. Its value can be used with respect to the tool
coordinate system or the path relative coordinate system attached to the path trajectory
depending on the value of $ttoolnum.
$ttoolnum can be set in a KAREL program to determine the desired coordinate system. The
difference between cases -1 and -2 and cases -3 and -4 are as follows: In cases -1 and -2, the
direction of the x-vector of Path Relative Frame is pointing from the start position of the segment
to the destination position; while in cases -3 and -4, the direction of the x-vector of Path Relative
Frame is pointing from the destination position of the segment to the start position.
Power Up:
User Interface Location: SYSTEM Variables screen
$PMR_GRP[1].$delta_world
Minimum: MIN_POS Default: DEF_POS Maximum: MAX_POS
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: POSITION
Name: Delta World Coordinate System
Description: Scheduled to be removed
Power Up:
User Interface Location: SYSTEM Variables screen
$PNS_CUR_LIN
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Current Line Number for PNS Program
Description: This system variable holds the current line number of the current executing PNS
program. If the currently executing program is not a PNS program, this variable is not updated.
The ME-NET function uses this system variable to inform the current status of program execution
to the host computer. This variable should be maintained by system only. Never change this
variable manually.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: $PNS_END_EXE, $PNS_NUMBER, $PNS_TASK_ID
$PNS_END_CUR
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Keep Cursor at END of Line
Description: If this system variable is TRUE, the cursor remains at the [END] line or END
command line when program execution is completed.
If this system variable is FALSE, the cursor moves to the first line when program execution is
completed.
The default value is FALSE. If you do not want the program to start again unexpectedly after
program is completed, this variable should be set to TRUE. After this system variable is set to
TRUE, you must move cursor manually when you try to start the program again.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, SYSTEM Config screen
$PNS_END_EXE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: [END] Line or END Command is Executed
Description: When PNS program is started, this system variable is set to FALSE.
When [END] line or END command is executed, this system variable is set to TRUE.
The ME-NET function uses this system variable to inform the current status of program execution
to the host computer. This variable should be maintained by system only. Do not change this
variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: $PNS_CUR_LIN, $PNS_NUMBER, $PNS_TASK_ID
$PNS_NUMBER
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PNS Program Number
Description: When the PNS program is started, the PNS program number (last 4 digit in PNS
program name) is stored in this variable automatically.
The ME-NET function uses this system variable to inform the current status of program execution
to host computer. This variable should be maintained by system only. Do not change this
variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variable screen
See Also: $PNS_CUR_LIN, $PNS_END_EXE, $PNS_TASK_ID
$PNS_PROGRAM
Minimum: "" Default: "PNS" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: PNS Program Name
Description: Not currently used. This is the name of the selected PNS program, which can be
different than the selected program on the TP SELECT MENU (i.e. $TP_DEFPROG).
Power Up:
User Interface Location: SYSTEM Variables screen
$PNS_TASK_ID
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PNS Task ID
Description: When the PNS program is started, the task ID for the PNS program is stored in this
variable automatically.
The ME-NET function uses this system variable to inform the current status of program execution
to the host computer. This variable should be maintained by system only. Do not change this
variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: $PNS_CUR_LIN, $PNS_END_EXE, $PNS_NUMBER
$POWERFL
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: No longer used
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$PPA_IO_IDX
Minimum: 0 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Mapped PPABN (Pneumatic pressure abnormal signal) I/O index number
Description: Not used
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM variables screen
$PPA_IO_TYPE
Minimum: 0 Default: 1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Mapped PPABN (Pneumatic pressure abnormal signal) I/O type
Description: Not used
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM variables screen
$PPA_MAP_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Mapped PPABN (Pneumatic pressure abnormal signal) is enabled
Description: Not used
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$PRGADJ STRUCTURE
Name: Program Adjust
Description: On-line position correction variables. Individual fields within this structure are
described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$next_cycle
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Program Adjust Enable Flag
Description: Not currently used. When implemented and if set to TRUE, means that the enabled
Prog Adjust schedule will not take affect until the next cycle.
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$p_limit
Minimum: 0 Default: 0.5 Maximum: 0x100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Adjust P Adjustment Min/max
Description: Defines the maximum value that you can enter in the Program Adjust menu for the
P adjustment value. The minimum P adjustment value you can enter is -($PRGADJ.$p_limit).
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$r_limit
Minimum: 0 Default: 0.5 Maximum: 0x100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Adjust R Adjustment Min/max
Description: Defines the maximum value that you can enter in the Program Adjust menu for the
R adjustment value. The minimum R adjustment value you can enter is -($PRGADJ.$r_limit).
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$speed_adj
Minimum: 0 Default: 100 Maximum: 200
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program Adjust Speed Adjustment Min/max
Description: Movement speed correction value. Not currently used. When implemented will
define the maximum value that you can enter in the Program Adjust menu for the Speed
adjustment value. The default of 100 means the program will run at programmed speed, 50
means at half the programmed speed, 200 means twice the programmed speed, and so forth.
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$w_limit
Minimum: 0 Default: 0.5 Maximum: 0x100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Adjust W Adjustment Min/max
Description: Defines the maximum value that you can enter in the Program Adjust menu for the
W adjustment value. The minimum W adjustment value you can enter is -($PRGADJ.$w_limit).
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$x_limit
Minimum: 0 Default: 26.0 Maximum: 0x100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Adjust X Adjustment Min/max
Description: Defines the maximum value that you can enter in the Program Adjust menu for the
X adjustment value. The minimum X adjustment value you can enter is -($PRGADJ.$x_limit).
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$y_limit
Minimum: 0 Default: 26.0 Maximum: 0x100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Adjust Y Adjustment Min/max
Description: Defines the maximum value that you can enter in the Program Adjust menu for the
Y adjustment value. The minimum Y adjustment value you can enter is -($PRGADJ.$y_limit).
Power Up:
User Interface Location: SYSTEM Variables screen
$PRGADJ.$z_limit
Minimum: 0 Default: 26.0 Maximum: 0x100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Program Adjust Z Adjustment Min/max
Description: Defines the maximum value that you can enter in the Program Adjust menu for the
Z adjustment value. The minimum Z adjustment value you can enter is -($PRGADJ.$z_limit).
Power Up:
User Interface Location: SYSTEM Variables screen
$PGDEBUG
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program Debugging
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$PRIORITY
Minimum: 0 Default: 128 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Priority Level of Interrupting
Description: $PRIORITY is used to specify the default priority of execution for routine call
actions (interrupt routines) in KAREL condition handler statements.
$PRIORITY can also be used in a condition handler statement WITH clause. In this case, the
indicated routine will execute at the priority specified without actually changing the default value
of $PRIORITY.
An interrupt routine with a low priority will not be executed until control is returned to the program
from a higher-priority routine. Therefore, the actual priority value specified is not important; only
that one must be larger than the other.
When $PRIORITY is not specified, interrupt routines will interrupt each other, thereby executing
in reverse order from which they appear in the condition handler definition.
Power Up:
User Interface Location: SYSTEM Variables screen
$PROTOENT STRUCTURE
Name: Protocol Entry
Description: An array of structures defining the available protocols on the controller. Individual
fields within this structure are described below.
Power Up: Requires a cold start to take effect.
User Interface Location: System Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$PROTOENT[1 ].$p_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Protocol Name
Description: Name of an available protocol on the controller.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$PROTOENT[1].$p_proto
Minimum: 0 Default: 0 Maximum: 2500
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Protocol Number
Description: Number associated with this particular protocol.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$PRPORT_NUM
Minimum: 3 Default: 4 Maximum: 4
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Printer Port Number
Description: This is the serial port to which the printer is attached. The serial port configuration
must also be set up in the SETUP Port Init screen.
Power Up: No
User Interface Location: SYSTEM Variables screen
$PURGE_ENBL
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name:
Purge enabled
Description: Enables the purging of the FROM disk. If $PURGE_ENBL is set to FALSE, the
FROM disk cannot be purged. You can set $PURGE_ENBL to FALSE before running a program
or application which requires fast cycle time.
Power Up:
User Interface Location: SYSTEM Variables screen
$PWF
Minimum: 1 Default: 4 Maximum: 4
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type:
Name: Restore pre-powerfail I/O status
Description: This controls whether the values for digital and analog output signals are restored
on semi-hot start to their values immediately before power-down,and whether pre-power -down
simulation status of all ports is to be restored.
Values are as follows:
1: Output port values are not restored and simulation is turned off on all ports
2: Output port values are not restored and but simulation status of all ports is restored.
3: Output port values are restored but simulation is turned off on all ports
4: (default) Output port values and simulation of all ports are restored
Power Up: This variable can be set at any time but has effect only at power-up.
User Interface Location: SYSTEM Variables screen
See Also: $SEMIPOWERFL
$PWFENBDO
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: No longer used
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$PWR_HOT
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Power Hot
Description: Specifies the name of the program that is automatically started when the controller
powers up in power fail recovery mode (hot start). Motion instructions cannot be used in the hot
start program. The execution time for the power hot program is limited to 5 seconds. This
program should be used for very limited functions only.
Power Up:
User Interface Location: SYSTEM Variables screen
$PWR_NORMAL
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Power Normal
Description: Specifies the name of the KAREL program, TPP program or Command File that is
executed when the system does a normal powerup (cold start). The system only runs a
Command File of the specified name if a program of that name cannot be found.
You are responsible for setting the value of $PWR_NORMAL if you want a program or Command
File to be executed at power up.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$PWR_SEMI
Minimum: " " Default: " " Maximum: " "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type:
Name: Program to execute on semi-hot start
Description: If this is not blank, this is the name of a program that is executed during semi-hot
power-fail recovery.
Power Up: This can be set at any time but has effect only on power up
User Interface Location: SYSTEM Variables screen
See Also: $SEMIPWFAIL
$PWR_UP_RTN STRUCTURE
Name: Power up Routine Name
Description: 1. At semi-hot power up, if PX status is "PAUSED", power-up ISR runs for each PX.
2. After power-up ISR starts running, it works the same as normal ISR.
3. For power-up ISR, user can use PWR_UP_RTN built-in. User can use any strings as
parameter
of PWR_UP_RTN, if it's length is within 12. (This built-in doesn't check whether the
program name is correct one or not about item 4. Only string length is checked.)
4. At start of power-up ISR, if specified program by the built-in is as follows, an error is posted:
Non exist one TPE program KAREL built-in KAREL routine KAREL program which has motion
group All that which is not KAREL program
In above case, error is posted with wrong program name. Only a KAREL program which
has no motion group can run as power-up ISR.
5. Differ from PWR_HOT or PWR_SEMI, power-up ISR doesn't have time-out limitation.
6. If it is single step status at power-up, power-up ISR runs with single-step status too.
7. System variable $PWR_UP_RTN[1]--[16] is cleared by cold start.
8. In KAREL program AAA.PC if $PWR_UP_RTN[*] is set, $PWR_UP_RTN[*] is cleared at
end of AAA.PC
Power Up:
User Interface Location: None
$QSKIP_GRP[1] Structure
Name: QUICK SKIP function internal data for each group.
Description: For internal use only. Do not modify this system variable. Individual variables within
this structure are described below.
Power Up: Changes to these system variables take effect immediately.
$QSKIP_GR P[1-9].$error_cnt2[1]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Error count.
Description: Current error count of each axis. This is set by FLTR at every ITP. For internal use
only. Do not modify this system variable.
Power Up: Changes to this system variable take effect immediately.
$QSKIP_GRP[1].$qskp_curan(g, 1-9)
Minimum: 0. Default: 0. Maximum: 0.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Current angle of each axis
Description: Current angle of each axis set by CHND. For internal use only. Do not modify this
system variable.
Power Up: Changes to this system variable take effect immediately.
$QSKIP_GRP[1] .$qskp_errcnt[1-9]
Minimum: 0 Default: 0 Maximum: 0x7fffffff
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Error count at skip condition triggered
Description: Error count of each axis when the skip condition is triggered. This is copied from
$error_cnt2 by CHND when skip condition is completed. For internal use only. Do not modify this
system variable.
Power Up: Changes to this system variable take effect immediately.
$RCVTMOUT
Minimum: 0 Default: 3000 Maximum: 0x7FFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: RCV Instruction Time-out Time
Description: If RCV (Received data from V120) statement cannot get any data from the V120
within the $RCVTMOUT time, the program jumps to the specified LABEL statement.
$RCVTMOUT is in units of 0.01 seconds.
Power Up:
User Interface Location: SYSTEM Variables screen
$RE_EXEC_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: RE-EXECution Enable/disable
Description: If TRUE, when the last line executed by BWD is executed by FWD, the line is reexecuted.
This means that the motion option instruction of the last line is executed. TRUE =
Enable and FALSE = Disable.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen (on the teach pendant)
$REFPOS1 STRUCTURE
Name: Reference Point (Group 1) Variable
Description: Stores a set value of movement for group 1 at a reference point. It is set
automatically using the SETUP Reference Position screen. $REFPOS1 uses the REFPOS11_T
structure.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $REFPOS2, $REFPOS3, $REFPOS4, $REFPOS5, $REFPOSxx_T Structure
$REFPOS2 STRUCTURE
Name: Reference Point (Group 2) Variable
Description: Stores a set value of movement for group 2 at a reference point. It is set
automatically using the SETUP Reference Position screen. $REFPOS2 uses the REFPOS21_T
structure.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $REFPOS1, $REFPOS3, $REFPOS4, $REFPOS5, $REFPOSxx_T Structure
$REFPOS3 STRUCTURE
Name: Reference Point (Group 3) Variable
Description: Stores a set value of movement for group 3 at a reference point. It is set
automatically using the SETUP Reference Position screen. $REFPOS3 uses the REFPOS31_T
structure.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $REFPOS1, $REFPOS2, $REFPOS4, $REFPOS5, $REFPOSxx_T Structure
$REFPOS4 STRUCTURE
Name: Reference Point (Group 4) Variable
Description: Stores a set value of movement for group 4 at a reference point. It is set
automatically using the SETUP Reference Position screen. $REFPOS4 uses the REFPOS41_T
structure.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $REFPOS1, $REFPOS2, $REFPOS3, $REFPOS5, $REFPOSxx_T Structure
$REFPOS5 STRUCTURE
Name: Reference Point (Group 5) Variable
Description: Stores a set value of movement for group 5 at a reference point. It is set
automatically using the SETUP Reference Position screen. $REFPOS5 uses the REFPOS51_T
structure.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $REFPOS1, $REFPOS2, $REFPOS3, $REFPOS4, $REFPOSxx_T Structure
$REFPOSxx_T.$atperch
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Reference point position.
Description: Displays if there is a robot currently at reference point. xx represents
11,21,31,41,51.
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSxx_T.$comment
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Comment
Description: Text providing additional information at the reference point. xx represents
11,21,31,41,51.
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSxx_T.$dout_indx
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Signal Number of Reference Point General-Purpos e Output
Description: Indicates how many digital signals are output when there is a robot at reference
point. 0 shows a non-setting. xx represents 11,21,31,41,51.
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSxx_T.$dout_type
Minimum: 0 Default: 2 Maximum: 50
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Signal Form of Reference Point General-purpose Output
Description: Digital signal indicating there is a robot at reference point. xx represents
11,21,31,41,51.
Setting 2:Digital signal ( SDO ) and 8:Robot signal ( RDO )
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSxx_T.$enabled
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Reference Point Effective.
Description: Makes the function effective at reference point. xx represent 11,21,31,41,51.
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSxx_T.$perchpos[9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Reference Point Position
Description: Set the coordinate value of reference point of each axis at the position. xx
represent 11,21,31,41,51.
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSxx_T.$perchtol[9]
Minimum: -1000000. Default: 0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Perch Tolerance
Description: Range of error tolerance at a reference point position. This variable sets the range
of error tolerance of the coordinate value of the reference point for each axis from the position. xx
represents 11,21,31,41,51.
Power Up:
User Interface Location: SYSTEM Variables screen
$REFPOSMAXNO[5]
Minimum: 1 Default: 1 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Maximum number of reference positions
Description: Individually, set the number at reference point ( $REFPOS 1-5 ) which can be the
registration in each group.
Power Up:
User Interface Location: SYSTEM Variables screen
$REMOTE
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Remote Operation
Description: Displays the state of the remote switch of operator control panel. The system
updates it automatically.
1:The remote switch is ON
0:The remote switch is OFF
$REMOTE indicates the operator panel REMOTE keyswitch setting. It is 1 when the key is set to
ON and a remote device has motion control. It is 0 when the key is set to OFF and the operator
panel has motion control.
The value of $REMOTE is set and updated automatically.
Power Up:
User Interface Location: SYSTEM Variables screen
$RESUME_PROG
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Resume Program
Description: This string can be set from a teach pendant program using the RESUME_PROG
instruction. A KAREL "shell" program can access this string during an error recovery process.
This string typically contains the name of a program that is run as part of error recovery. Note
that this contains the result of the last access to an resume_prog instruction from a teach
pendant program.
Power Up: No
User Interface Location: SYSTEM Variables screen
$RGSPD_PREXE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Register Speed Pre Execution
Description: This variable controls the interpreter pre-execution when a register value is used
for the speed parameter. The default value is FALSE which means to stop the pre-execut ion. If it
is set to TRUE then pre-planning is not stopped. In this case, if the user changes the register
used for the speed immediately before executing the motion the speed which is used will be the
previous value of the register. If the register is not typically changed right before issuing the
motion then it may be safe to allow the pre-execution to occur.
Power Up: Changes to this variable take effect after power up.
User Interface Location: SYSTEM Variables screen
$RMT_MASTER
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Remote Master
Description: Determines which remote device is in control of motion when the remote switch is
set to REMOTE.
0:User Operator Panel
1:CRT/KB
2:Host computer
3:Remote device none.
Power Up:
User Interface Location: SYSTEM Variables screen
$ROBOT_NAME
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Robot Name
Description: Specifies the application entity name that represents this node on the network.
Available only if the KSL, MOTET or MAP option has been installed. Used only for MAP.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM System Variables screen or KCL
See Also:FANUC Robotics SYSTEM R-J Controller MAP Interface Setup and Operations
Manual
$RPC_TIMEOUT
Minimum: 0 Default: 35 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: ULONG
Name: RPC Server Timeout
Description: Specifies the time in seconds for a server connection to wait for a reply from the
PC before cancelling the read operation.
Power Up: Effective at cold start or when the PC client is reconnected.
User Interface Location: SYSTEM Variables screen
$RPM_CFG STRUCTURE
Name: RPM Configuration Record
Description: Variable structure containing configuration information for the RPM. Individual
fields within this structure are described below.
User Interface Location: SYSTEM Variables screen
$RPM_CFG.$data_size
Minimum: 4 Default: 16 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: The Record Size for each Root Pass Memorization (RPM) Data
Description: The size, in bytes, of the data that RPM records. Size depends on which sensor
uses RPM option.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$RPM_CFG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug flag used in RPM
Description: Debug flag used in RPM.
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen
$RPM_CFG.$group_num
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: RPM Group Number
Description: Specifies in which group RPM is available.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$RPM_CFG.$n_buffers
Minimum: 1 Default: 5 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Number of Available Buffers
Description: The number of buffers allocated to be used. You can expand this number if
memory available.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$RPM_GSB STRUCTURE
Name: Root Pass Memorization (RPM) Global Status Block
Description: Root Pass Memorization (RPM) global status block. Reserved for Internal use by
FANUC Robotics. Individual fields within this structure are defined below.
Power Up:
User Interface Location: SYSTEM Variables screen
$RPM_GSB.$l ast_bfr
Minimum: 1 Default: 1 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Last Buffer Used
Description: The buffer number that was last used to record RPM data.
Power Up:
User Interface Location: SYSTEM Variables screen
$RPM_GSB.$last_posn
Minimum: 1 Default: 1 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Last Position Recorded
Description: The position that is the destination of last RPM recorded segment.
Power Up:
User Interface Location: SYSTEM Variables screen
$RPM_GSB.$last_prog
Minimum: 1 Default: 1 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Last Program Recorded
Description: The program that is the last one to use the RPM function.
Power Up:
User Interface Location: SYSTEM Variables screen
$RPM_PG STRUCTURE
Name: Root Pass Memorization (RPM) Program Record
Description: Variable structure containing configuration information of the way the RPM function
is executed in the program. Individual fields within this structure are described below.
Power Up: Effective immediately
User Interface Location: SYSTEM Variables screen
$RPM_PG.$buffer_no
Minimum: 1 Default: 1 Maximum: 32767
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Buffer Number Used
Description: The buffer number that is currently used for RPM recording or playing back.
Power Up:
User Interface Location: SYSTEM Variables screen
$RPM_PG.$pitch
Minimum: 0 Default: 1 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: RPM Pitch Value
Description: Specifies how often RPM will record the offset into its buffer. When the pitch mode
is time, RPM records offset data into specified buffer every $pitch (ms). When the pitch mode is
distance, RPM records offset data every $pitch (millimeter). If every recording point is less than
100 ms apart the error, "Pitch too small," will be displayed. If this occurs, you should adjust the
speed.
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J3 Controller ArcTool Setup and Operations Manual
$RPM_PG.$pitch_mode
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Pitch Mode used in RPM
Description: Specifies the RPM recording mode. 0 : distance 1 : time
Power Up: Effective immediately.
User Interface Location: SYSTEM Variables screen
$RPM_PLAN STRUCTURE
Name: RPM Plan Status Record
Description: RPM internal planning record. Reserved for Internal use by FANUC Robotics.
Individual fields within this structure are defined below.
Power Up:
User Interface Location: SYSTEM Variables screen
$RPM_PLAN.$bfr_stat[5]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: RPM_GSB_T
Name: Buffer Status Record
Description: The buffer status record for each group.
Power Up:
User Interface Location: SYSTEM Variables screen
$RSM_DIALM[3]
Name: DI alarm monitor function table.
Description: This system variable is used by DI alarm monitor feature in the auto error recovery
function.
Power Up: Changes to some variables take effect immediately and the other system variables
need cold/controlled start to do available.
User Interface Location: Auto error recovery setup screen
See Also: Do not change these system variables from system variable screen.
$RSM_DIALM[1].$edge
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Trigger timing, turn on or off.
Description: This variable can be set to On or Off.
0: Turn off
1: Turn on
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery function setup screen
$RSM_DIALM[1].$port_num
Minimum: 0 Default: 0 Maximum: 999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Port number of DI alarm
Description: It specifies the port number to be monitored for DI alarm.
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery function setup screen
$RSM_DIALM[1].$port_type
Minimum: 1 Default: 1 Maximum: 99
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Port type of DI alarm
Description: It specifies the port type to be monitored for DI alarm.
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery function setup screen
$RSM_DIALM[1].$sev_alarm
Minimum: 1 Default: 1 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Severity of DI alarm
Description: This variable can be set to either a Local or Global alarm.
1: Local alarm
2: Global alarm
Power Up: Takes effect immediately
User Interface Location: Error recovery function setup screen
$RSM_DIALM[1].$ualm_msg_no
Minimum: 0 Default: 0 Maximum: 999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: User alarm message number
Description: The user alarm message specified by this value is displayed at the error post.
Power Up: Takes effect immediately
User Interface Location: Error recovery function setup screen
$RS232_CFG[ 1 - 5] STRUCTURE
Name: Communication port variable
Description: Defines the purpose of each serial communication port. It is set automatically by
input from the "Port Init" Menu. Ports 1-4 are standard, ports 5-8 are optional. Individual fields
within this structure are defined below.
Power Up: Yes
User Interface Location: Read only from KCL and SYSTEM Variables screen
Can only be set by uif from CTRL start.
See Also:FANUC Robotics SYSTEM R-J3 Controller application-specific Setup and Operations
Manual
$RS232_CFG.$auxtask
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Internal task number
Description: Reserved for internal use by FANUC Robotics.
Power Up: Reserved
User Interface Location: Read only from KCL and SYSTEM Variables screen
$RS232_CFG.$comment
Minimum: "" Default: " " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Comment
Description: Text describing serial port use.
Power Up: No
User Interface Location: Read only from KCL and SYSTEM Variables screen
$RS232_CFG.$custom
Minimum: 0x00000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Custom (reserved)
Description: Reserved for internal use by FANUC Robotics.
Power Up: Reserved
User Interface Location: Read only from KCL and SYSTEM Variables screen
$RS232_CFG.$deviceuse
Minimum: 0 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Device use
Description: Numeric representation of serial port use.
No Use 1 Teach Pendant 2 Debug Console 3 PS-100/200 Disk 4 FANUC Floppy 5 Handy File 6
Sensor 7 Host Comm 8 Printer 9 KCL/CRT 10
Power Up: Yes
User Interface Location: Read only from KCL and SYSTEM Variables screen
Use the "Port Init" menu to change this value after a cold start.
$RS232_CFG.$flowcontrol
Minimum: 0x80000000 Default: 275 Maximum: 0x0FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Flow control
Description: Flow control used on serial port.
None 0
Optional XOFF 255
XON/XOFF 256
RTS 512
DTR 1024
DSR 2048
Power Up: Yes
User Interface Location: Read only from KCL and SYSTEM Variables screen
$RS232_CFG.$parity
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Parity
Description: Parity used for serial port.
None 1 Odd 2 Even 3
Power Up: Yes
User Interface Location: Read only from KCL and SYSTEM Variables screen
Use the "Port Init" menu to change this value after a cold start.
$RS232_CFG.$speed
Minimum: 0 Default: 0 Maximum: 6
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Baud rate
Description: Baud rate used for serial port.
1200 baud 4 2400 baud 3 4800 baud 2 9600 baud 1
Power Up: Yes
User Interface Location: Read only from KCL and SYSTEM Variables screen
Use the "Port Init" menu to change this value after a cold start.
$RS232_CFG.$stopbits
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Stop bits
Description: Stop bits used for serial port.
1 stop bit 1 1.5 stop bits 2 2 stop bits 3
Power Up: Yes
User Interface Location: Read only from KCL and SYSTEM Variables screen
Use the "Port Init" menu to change this value after a cold start.
$RS232_CFG.$timeout
Minimum: 0 Default: 0 Maximum: 3600
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Time limit
Description: Internally used timeout limit.
Power Up: No.
User Interface Location: Read only from KCL and SYSTEM Variables screen
Use the "Port Init" menu to change this value after a cold start.
$RS232_NPORT
Minimum: 1 Default: 4 Maximum: 8
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Maximum number of serial ports
Description: This is the maximum number of serial ports that can be used by the system.
You must set this to the actual number of serial ports used, if it is greater than four.
Power Up: Yes
User Interface Location: Set from KCL and SYSTEM Variables screen
$RSM DIO.$port_num
Minimum: MIN Default: DEF Maximum: MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Resume Program DO
Description: It shows the assignment of the resume program DO
Power Up: Takes effect by cold start
User Interface Location: Error recovery function setup screen
$RSMFST_SV STRUCTURE
Name: Resume Fast Fault
Description: Individual fields within this structure are listed below.
$RSMFST_SV.$ffast_dsp
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Fast Fault Display
Description: This variable enables and disables the display of the maintenance program setup
menu items and also the execution of maintenance programs. If $ffast_dsp is TRUE, the setup
menu items are displayed and maintenance programs can be executed. If FALSE, the Error
Recovery setup menu does not display the maintenance program section and maintenance
programs can not be executed.
The Error Recovery sequence of exiting a paused program, running a maintenance program,
and entering the program to the point of the error is sometimes referred to as "Fast Fault
Recovery."
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery SETUP menu.
$RSMFST_SV.$ffast_enbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Fast Fault Enable
Description: This variable enables and disables the execution of Error Recovery programs. If
TRUE, resume programs and maintenance programs can be executed.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Error Recovery SETUP menu.
$RSMFST_SV.$use_dry_run
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Use Dry Run
Description: This variable enables and disables the use of dry run speeds during maintenance
program EXIT and ENTRY paths. It also enables and disables weaving during the EXIT and
ENTRY moves.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Error Recovery SETUP menu.
$RSMFST_SV.$def_maint
Minimum: " " Default: " " Maximum: " "
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Default Maintenance Program Name
Description: This variable contains the name of the maintenance program to run during error
recovery if the user program has not yet defined one using the MAINT_PROG instruction.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Error Recovery SETUP menu.
$RSMFST_SV.$fastdo_stat
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Resume Program Status DO Value
Description: This variable is a boolean variable that indicates if a Resume Program will execute
at the next START input.
Power Up: Changes to this variable take effect immediately.
User Interface Location: Error Recovery SETUP menu.
$RSMPRG_ALRM[1-10]
Minimum: 0 Default: 0 Maximum: 0xFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Alarm code to be monitored
Description: This system variable is used by error recovery function.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen, Resume program function setup screen
$RSMPRG_DSBL
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RW Data Type: BOOLEAN
Name: Auto error recovery disable parameter
Description: This system variable is used by the system. When load the optional function which
doesn't support the auto error recovery function, the optional function should set this variable to
1. If set, the auto error recovery function is disabled.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$RSMPRG_SV STRUCTURE
Name: Error Recovery (Resume program) function data
Description: This system variable is used by error recovery function.
Power Up: Changes to some variables take effect immediately and the other system variables
need cold/controlled start to do available.
User Interface Location: SYSTEM Variables screen
$RSMPRG_SV.$alarm_h apen
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Defined alarm happens
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$alarm_inf
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Alarm information for each PX task
Description: It means the alarm information for each PX task.
Power Up: Do not change.
User Interface Location: SYSTEM Variables screen
See Also: Do not change this variable because of the internal data.
$RSMPRG_SV.$autorcv _enb
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Auto error recovery enable parameter for customer condition
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$chk_rem ote
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Remote condition check
Description:
1: when TP is disabled and $RMT_MASTER is 0, add remote condition check to error recovery
DO
0: Do not check remote condition
Power Up: Takes effect immediately
User Interface Location: SYSTEM Variables screen
$RSMPRG_SV.$cont_exec
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Continuous execution
Description: 1: When the defined alarm occurs, the fault is not output and resume program is
executed continuously. 0: This feature is disabled.
Power Up: Takes effect immediately
User Interface Location: SYSTEM Variables screen
$RSMPRG_SV.$cur_mod e
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current mode
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$defined _prg
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Resume program is defined ?
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$desire_ mode
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Desired mode
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$di_on
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Resume DI is ON
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$incomp_di
Minimum: MIN Default: DEF Maximum: MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: RSMDIO_T
Name: Reset DI for incomplete end DO
Description: It shows the assignment of the incomplete reset DI
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery function setup screen
$RSMPRG_SV.$incomp_do
Minimum: MIN Default: DEF Maximum: MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: RSMDIO_T
Name: Resume program incomplete end DO
Description: It shows the assignment of the resume program incomplete DO
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery function setup screen
$RSMPRG_SV.$max_count
Minimum: 0 Default: 2 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Maximum counter of automatic start feature
Description: This is a maximum value of the automatic start. This value is compared with the
internal counter which is incremented by the execution of resume program. And the internal
counter is cleared at motion complete and CLEAR_RESUME_PROG execution.
Power Up: Takes effect immediately
User Interface Location: Auto error recovery setup screen
$RSMPRG_SV.$mo_grou p
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Original program has Mo group
Description: This is the status parameter. This is internal parameter. Do not change this value.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
$RSMPRG_SV.$mode
Minimum: 1 Default: 1 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Execution mode of error recovery function
Description:
1: AUTO: Execute resume program according to the conditions.
2: NOEXEC: Do not execute the resume program
3: TP_TEST: Execute resume program always from TP
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
$RSMPRG_SV.$no_dsb_ optn
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: No disable option
Description: This is the status parameter. This is internal parameter. Do not change this value.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
$RSMPRG_SV.$no_step
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: No single step mode
Description: This is the status parameter. This is internal parameter. Do not change this value.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
$RSMPRG_SV.$num_alarm
Minimum: 0 Default: 10 Maximum: 20
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Number of monitored alarm
Description: It means the number of alarm codes to be monitored.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also: Do not set more than 32 to this data
$RSMPRG_SV.$num_di_alm
Minimum: 0 Default: 3 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Number of monitored DI alarm
Description: It means the number of DI alarm codes to be monitored.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also: Do not set more than 5 to this data
$RSMPRG_SV.$pxno_de fprg
Minimum: 0 Default: 0 Maximum: 32
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TP_DEFPROG PX No.
Description: PX task number specified by $TP_DEFPROG
Power Up: Takes effect immediately
User Interface Location: SYSTEM Variables screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$reg_index
Minimum: 0 Default: 0 Maximum: 999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Index number of register to count for continuous execution
Description: This register is cleared when $TP_DEFPROG PX task is RUN, KRUN, BRUN,
CONT and BCONT. This register should be referred in the resume program.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$RSMPRG_SV.$remote
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Remote condition
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$rsmprg_di
Minimum: MIN Default: DEF Maximum: MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: RSMDIO_T
Name: Resume Program DI
Description: It shows the assignment of the resume program DI
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery SETUP menu.
$RSMPRG_SV.$rsmprg_do
Minimum: MIN Default: DEF Maximum: MAX
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: RSMDIO_T
Name: Resume Program DO
Description: It shows the assignment of the resume program DO
Power Up: Requires a cold start to take effect.
User Interface Location: Error recovery SETUP menu.
$RSMPRG_SV.$rsmprg_ enb
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Original and resume program status
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSMPRG_SV.$rspgdo_ stat
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Resume program DO status
Description: It means the resume program DO status
Power Up: Do not change.
User Interface Location: SYSTEM Variables screen
See Also: Do not change this variable because of the internal data.
$RSMPRG_SV.$svprg_e nble
Minimum: 1 Default: 2 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Auto error recovery function enable
Description: This is the status parameter.
Power Up: Takes effect immediately
User Interface Location: Error recovery function manual function screen
See Also: This is internal parameter. Do not change this value.
$RSR[8]
Minimum: 0 Default: 1 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Enable/disable Robot Service Request
Description: Enables/disables the RSR function.
For example, if $RSR[1] is TRUE, you can select and start a program by using RSR1 input
signal.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen or Setting/RSR/PNS screen or the teach
pendant command (RSR[i]=ON/OFF)
$SBR[16] STRUCTURE
Name: Array of Servo Block Record Variable
Description: Displays the data for the servo motors of all joint axes (16 axes or less) controlled
with R-J3 controller. Individual fields within this structure are described below.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SBR[i].$axi s_num
Minimum: 0 Default: 1 Maximum: 16
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Software Axis Number
Description: Indicates to which software axis number (within the specified motion group) that
the hardware servo axis i is connected.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SBR[i].$grp_num
Minimum: 0 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Software Group Number
Description: Indicates to which motion group the hardware servo axis i is connected.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SBR[i].$mtr_id
Minimum: "" Default: "123456789012345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Motor ID String
Description: Motor identification string of the motor to which the hardware servo axis i is
connected.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SBR[i].$mtr_inf_id
Minimum: "" Default: "1234567890" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Motor Information ID String
Description: Information string for the motor to which the hardware servo axis i is connected.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SBR[i].$param[151 - 300]
Minimum: -32768 Default: 0 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Servo Parameter
Description: List of servo parameters for hardware servo axis i.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SBR[i].$sv_param_id
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Servo Parameter ID String
Description: Servo parameter ID string for hardware servo axis i.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCAN_TIME
Minimum: 0 Default: 16 Maximum: 0x7FFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Scanning Time
Description: $SCAN_TIME can be used only in a condition handler statement WITH clause.
This condition handler qualifier is not a normal system variable. It cannot be accessed by KCL
(NO) and has write only (WO) access by programs.
$SCAN_TIME is used to specify the time in milliseconds between scans in a condition handler.
The syntax for $SCAN_TIME = time_in_ms where time_in_ms is an INTEGER expression.
Actual time_in_ms values will be one of the following: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, times
the value of the $COND_TIME system variable.
Any value less than $COND_TIME will default to the value of $COND_TIME. Any value greater
than
(512 * $COND_TIME) ms will default to (512 * $COND_TIME).
Any value between one of the above intervals will default to the next lower value.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR STRUCTURE
Name: System Configuration Record
Description: Displays the variable concerning system configuration.
Power Up: Set only during a controlled start.
$SCR.$amp_type[16]
Minimum: 0 Default: 0 Maximum: 6
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Amplifier type
Description: $SCR.$amp_type are set in robot library or on SYSTEM variables screen at
Controlled start. It means what the type of this index amplifier is.
0= Not Used
1= 6 axis amplifier
2= Alpha series amplifier (which has 3 PWM lines)
3= Alpha series amplifier (which has 6 PWM lines)
4= C series amplifier
5= C series amplifier + conversion board for R-J3
For example, if $SCR.$amp_type[1] is 1, it means that the type of amplifier 1 is 6 axis one.
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$brkhold_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Break Hold Enable
Description: Specifies whether or not to use the temporary stop alarm.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$cabinet_typ
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Cabinet Type field
Description: Stores cabinet type for R-J3 controller cabinet_type.
0 = i cabinet
1 = B cabinet
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$cap_amp_dis[16]
Minimum: 0.0 Default: 0.0 Maximum: 1000000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Capacity of amplifier for regenerative discharge.
Description: $SCR.$cap_amp_dis are set in robot library or on SYSTEM variables screen. It
means capacity of amplifier for regenerative discharge.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM variables screen
$SCR.$coldovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Cold Start Override
Description: The speed override value on a cold start.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$cond_time
Minimum: 8 Default: 8 Maximum: 127
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Condition Time
Description: The condition handler scan time (in milliseconds).
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$coordovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Coordinates Override
Description: The ceiling speed override value when the coordinate system is changed. If the
current speed override is greater than this ceiling speed override, the current speed override will
be updated to the ceiling speed override.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$dsp_type
Minimum: 0 Default: 3 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: DSP hardware type
Description: Software checks the type of DSP on the R-J3 controller during a controlled or cold
start. DSP types are:
0 = DSP V and DSP IV are mounted
1 = DSP IV (320C51) (old DSP)
2 = DSP V (320C52) (new DSP from V4.20P)
If both DSPV and DSP IV are mounted on the hardware, this variable is set to 0.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$dvc_c_ratio
Minimum: -1.0 Default: 0.004 Maximum: 1.0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Time Scale catch up ratio
Description: After motor speed overflow Time Scale will increase the output ratio of FDO by the
value of this variable ($SCR.$dvc_c_ratio) to catch up with the FDO input.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$dvc_dbg
Minimum: 0x80000000 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Time Scale debug mode flag
Description: Time Scale function will print out the internal data on debug console when the bit is
set to 1.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$ dvc_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Enable Time Scale
Description: TRUE : enable time scale.
FALSE : disable time scale.
Compatible with motor speed limit used until V4.10P turned off for offset wrist robots, dual drive,
FlexTool.
$SCR.$dvc_mode
Minimum: 0x80000000 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Time Scale mode
Description: 0x1<0 : : velocity limit, ignored
0x1<1-5 : : reserved for future enhancement.
0x1<6 : 1 : synchronize groups when velocity is reduced 0 : non group synchronization
0x1<7 : 1 : perform Discharge current calculation 0 : skip calculation/disable screen 0x1<8 : 1 :
ignore time scale buffer for inposition calculation. 0 : include time scale buffer for
inposition calculation.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$dvc_mode1
Minimum: 0x80000000 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Time Scale mode 1
Description: Reserved for future enhancement.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$dvc_mode2
Minimum: 0x80000000 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Time Scale mode 2
Description: Reserved for future enhancement.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$dvc_mode3
Minimum: 0x80000000 Default: 1 Maximum: 0x07FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Time Scale mode 3
Description: Upper limit of FDOs piled in filter mail box This restriction was added to avoid
timing problems caused by excessive FDO pile up.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$enc_axis[2]
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Axis
Description: Used for line tracking. Specify which DSP axis is setup for line tracking.
Power Up: Set only during a controlled start or in SETUP Encoder menu. Requires a cold start
to take effect.
User Interface Location: SYSTEM Variables screen, SETUP Encoder screen.
$SCR.$enc_type[2]
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Encoder Type
Description: Used for line tracking. A O indicates incremental. A 1 indicates absolute.
Power Up: Set only during a controlled start or in SETUP Encoder menu. Requires a cold start
to take effect.
User Interface Location: SYSTEM Variables screen, SETUP Encoder screen.
$SCR.$fenceovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Fence Override
Description: The ceiling speed override value when the SFSPD signal is cut. If the current
speed override is greater than the ceiling speed override, the current speed override will be
updated to the ceiling speed override.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$fine_pcnt
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Fine Jog Mode Speed Percentage
Description: The speed used in fine jog mode is:(1% * $JOG_GROUP[1].$fine_ovrd) *
$SCR_GRP[1].$fine_pcnt
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$fwdenblovrd
Minimum: 0 Default: 10 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Override Value When Disable Forward State is Changed
Description: The override value when disable forward state is changed.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$hw_c1_time1
Minimum: 0 Default: 800 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: GM RS-1 Class 1 Stop Mode Deceleration Time
Description: For Class 1 stop mode, servo code stops robot before this timer expires. This
variable defines the worst case deceleration time during class 1 stop.
Power Up: Effective after cold start.
User Interface Location: SYSTEM Variables screen.
$SCR.$hw_c1_time2
Minimum: 0 Default: 200 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: GM RS-1 Class 1 Stop Mode Deceleration Time
Description: For Class 1 stop mode, servo code stops robot before this timer expires. This
variable defines the worst case deceleration time during class 1 stop.
Power Up: Effective after cold start.
User Interface Location: SYSTEM Variables screen.
$SCR.$intask_ovru
Minimum: 0 Default: 0 Maximum: 0x07FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Overrun count for inertia task
Description: The value is increased when inertia task can not execute in interval time, which is
defined by $update_time. If the value is not zero, overrun of inertia task occurs. This values are
not initialized during cold start.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$itp_time
Minimum: 4 Default: 24 Maximum: 124
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: ITP Time
Description: The time in milliseconds of a basic motion cycle.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$jg_dsbl_msk
Minimum: 0 Default: 0 Maximum: 31
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Jog group disable mask
Description: Group mask for disabling jogging. If the bit corresponding to the group is set,
jogging is disabled for that group.
Power Up: Set only during a controlled start
User Interface Location: SYSTEM variables screen
$SCR.$jog_aux_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: auxiliary axis jogging enable
Description: 1: allow user to jog auxiliary axis in non sub group jog mode for 3-5 axes robot 0:
Only allow user to jog auxiliary axes in sub group jog mode.
User may disable this capability by turn off this flag.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$SCR.$joglim
Minimum: 1 Default: 12 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Jog Limit
Description: The percentage of system maximum speed you can jog the robot. It is set by the
individual robot library to ensure ISO safety standards (maximum speed of 250 mm/sec at TCP).
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$joglimrot
Minimum: 1 Default: 4 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Rotation Jog Speed Limit
Description: The percentage of maximum rotspeed applied during the orientation jogging.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$jogovlim
Minimum: 1 Default: 100 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Jog Override
Description: The ceiling speed override value when you jog the robot. If the current speed
override is greater than the ceiling speed override, the current speed override will be updated to
the ceiling speed override.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$jogwst_mode
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Wrist jog mode selection.
Description: Selects wrist jog modes. When set to TRUE the selected wrist jog function allows
you to jog x, y, and z while maintaining the orientation of the wrist. When set to FALSE, the wrist
jog function allows you to jog x, y, and z while fixing the wrist axes. In both cases, when you jog a
wrist axis the other wrist axes will remain stationary, and the rest of the robot axes will move to
accommodate the movement of the wrist axes.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM variables screen.
$SCR.$kept_mirlim
Minimum: 1 Default: 5 Maximum: 8
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Kept Motion Instruction Record Limits
Description: The number of motion instruction records kept in the path planning system during
motion. Adjusting this value makes it possible to recover all interrupted motions after a servo
error (for example, EMERGENCY STOP).
The range of $kept_mirlim is 0-9, but must be less than or equal to ($NUM_MIR - 3).
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$kinem_enb
Minimum: 0 Default: 2 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Kinematics Enable
Description: $kinem_enb shows whether forward and inverse kinematics are defined or not. 2:
Both forward and inverse kinematics has been defined. 1: Only forward kinematics has been
defined. 0: kinematics has not been defined.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$lchdly_time
Minimum: -1000 Default: 0 Maximum: 5000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Local Condition Delay Time
Description: Allows local condition trigger times to be adjusted by this amount (in msec).
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$made_pg_amr
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of AMRs used in PG was made
Description: Not used
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$made_pg_mir
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of MIRs used in PG was made
Description: Not used
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$madegroups
Minimum: 0 Default: 0 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of groups made
Description: Not used
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$madepgtasks
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of PG tasks made .
Description: Not used
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$max_pre_fdo
Minimum: 0 Default: 1 Maximum: 10
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: INTEGER
Name: Max Pre-planned FDOs
Description: This integer variable gives the number of pre-planned motion FDOs that the
system will send, while waiting for the motion to start. It is used by the motion system to cut the
delay time by one interpolation period when starting a motion from a full stop. A zero value
disables the pre-planning. The default is 1. Higher values of $max_pre_fdo will not give any
additional delay reduction and are allowed only for future expansion.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$maxnumtask
Minimum: 0 Default: 1 Maximum: 4
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Maximum Number of Tasks
Description: The maximum number of user programs which can be run simultaneously.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$maxnumufram
Minimum: 1 Default: 9 Maximum: 9
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Maximum Number of User Frames
Description: Displays the total number of user frames the coordinate system can register.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$maxnumutool
Minimum: 1 Default: 9 Maximum: 9
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Maximum Number of Tool Frames
Description: Displays the total number of tool frames the coordinate system can register.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$maxpreapl
Minimum: 0 Default: 3 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Max Pre-planned Application
Description: The maximum number of application instructions that the system can pre-plan.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$maxpremtn
Minimum: 0 Default: 3 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Max Pre-planned Motions
Description: The maximum number of motion statements that the system can pre-plan. Preplanning
allows the motion statement to be executed immediately after the previous statement
finishes.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$mb_dsbl_msk
Minimum: 0 Default: 0 Maximum: 1000000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Motion Basic Softpart Disable Mask
Description: If the bit is set then the softpart in that particular slot of SID_MB will be disabled.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$mb_ld_msk
Minimum: 0 Default: 0 Maximum: 1000000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Motion Basic Softpart loaded mask
Description: This is a bit map of existing Motion Basic softpart. This variable shows which
softpart is loaded.
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$motn_ld_idx[1-32]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Motion Softpart Load Index
Description: Internal variable which indicates which slot is loaded with which softpart.
Power Up:
User Interface Location: System Variables screen
$SCR.$motn_ld_msk
Minimum: 0 Default: 0 Maximum: 1000000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Motion Application Softpart loaded mask
Description: This is a bit map of existing Motion Application softpart. This variable shows which
softpart is loaded.
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$motn_pc_run[1-32]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Motion Softpart PC Program Executed
Description: Reserved for internal used by FANUC Robotics. This indicates whether or not the
softpart PC program has been executed to initialize the softpart variable.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$ ne_mode
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Newton-Euler mode
Description: 1: Newton-Euler is enabled
0: Newton-Euler is disabled
Do not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$ne_sin_reso
Minimum: 0x80000000 Default: 1 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Newton-Euler sin table resolution parameter
Description: n (>= 2): Resolution of angle of sin table for NE is PI/2^n 1: Resolution of angle of
sin table for NE is PI/2^10 (10 was decided by experiment)0: Do no use sin table (compatible
mode)
Users should not change this system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$num_dsp_axs
Minimum: 0 Default: 6 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of DSP Axes
Description: The number of DSP axes supported by servo hardware on the system.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$num_gp_made
Minimum: 0 Default: 1 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Groups Requested to Create
Description: Reserved for internal used by FANUC Robotics. The number of groups that you
have requested to create at control start.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$num_group
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Motion Groups
Description: The number of motion groups installed in the system. A robot and extended axes
are considered one motion group. Additional groups can be installed to allow concurrent or
independent group motion.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$num_motnsoc
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Motion Softpart Sockets
Description: Reserved for internal use by FANUC Robotics. The number of motion softparts that
have been plugged into the motion case socket.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$num_pg_amr
Minimum: 1 Default: 10 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Maximum number of AMR
Description: The number of AMR should be created by the system to be used for Program.
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR.$num_pg_mir
Minimum: 1 Default: 10 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of Program MIRs
Description: Total number of program MIRs (Motion Instruction Records) which exist per motion
group. Program MIRs are only used by program motion sources.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$num_rlibsoc
Minimum: 0 Default: 0 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Robot Libraries in Socket
Description: Reserved for internal use by FANUC Robotics. The number of robot libraries that
have been plugged into the robot library case socket.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$num_sys_mir
Minimum: 3 Default: 10 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of System MIRs
Description: Total number of system MIRs (Motion Instruction Records) which exist per motion
group. System MIRs are used by all motion sources except programs.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$num_tot_axs
Minimum: 0 Default: 6 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Total Axes
Description: The total number of all axes, for all groups, installed in the system.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$ofstincval
Minimum: -1000 Default: 0 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Offset Register Incremental Number
Description: The increment number with new TPE offset execution.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$pg_dsbl_msk
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: PG function disable mask
Description: 1: PG original path resume function is disabled.
0: All PG function is enabled.
Do not change this system variable.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$pre_exe_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Pre-execution Enable
Description: Allows pre-execution of certain program statements, if set to TRUE.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$pre_mb_cmp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Pre MB Version Compatibility
Description: Requires that the system is compatible with pre MB version if set to TRUE.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$prev_ctrl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Previous Start State is Control Start
Description: Reserved for internal use by FANUC Robotics. This variable specifies whether or
not the previous start state is a control start.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$recov_ovrd
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: When Open Fence is Closed Whether or Not to Restore the Override
Description: If set to TRUE and the open fence is closed, this variable restores the override.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$resetinvert
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Reset Signal Inverted
Description: If set to TRUE, the rising edge of the reset signal is used.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$runovlim
Minimum: 1 Default: 50 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program Run Speed Limit
Description: The ceiling speed override value when you execute a program. If the current speed
override is greater than the ceiling speed override, the current speed override will be updated to
the ceiling speed override.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$sfjogovlim
Minimum: 1 Default: 50 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Safety Jog Speed Limit
Description: The ceiling speed override value when you jog the robot while the SFSPD signal is
turned off. If the current speed override is greater than the ceiling speed override, the current
speed override will be updated to the ceiling speed override.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$sfrunovlim
Minimum: 1 Default: 30 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Program Run Override Limit
Description: The ceiling speed override value when you execute a program while the SFSPD
signal is turned off. If the current speed override is greater than the ceiling speed override, the
current speed override will be updated to the ceiling speed override.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$sfspd_ovrd[2]
Minimum: 0 Default: 50 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Safety Override
Description: The override value when the SFSPD signal is turned off.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$subcpu
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: subcpu exist flag
Description: 1: subcpu hardware and software exist in current system. 0: either subcpu
hardware or software does not exist in this system.
This is a read only variable. Used for system to determine itp_time.
Power Up:
User Interface Location: SYSTEM Variables screen
$SCR.$sv_code_opt
Minimum: 0 Default: 0 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Servo Code Option
Description: The servo code option.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$svstat
Minimum: 0 Default: 0 Maximum: 2
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Servo Code Loading Status
Description: System set loading status of servo code software. During system initialization, it set
as follows
0 : Servo code is NOT loaded
1 : Standard servo code is loaded
2 : Sliding mode servo code is loaded
Power Up: Set only during the first controlled start.
User Interface Location: SYSTEM Variables screen
$SCR.$tpenbleovrd
Minimum: 1 Default: 10 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Teach Pendent Enable Override
Description: The ceiling speed override value when the teach pendent is enabled. If the current
speed override is greater than the ceiling speed override, the current speed override will be
updated to the ceiling speed override.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$tpmotnenabl
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Teach Pendant Motion Enable
Description: Disables jogging if set to 1.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR.$turn_axis[3]
Minimum: 0 Default: 4 Maximum: 9
Minimum: 0 Default: 0 Maximum: 9
Minimum: 0 Default: 6 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Robot multiple turn axis
Description: $scr.$turn_axis is an array of three elements. It defines the robot axis which could
have multiple turns.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$update_map1
Minimum: 0x80000000 Default: 1 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: update map 1
Description: Each bit means update status of each modification Do not change this system
variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR.$update_map2
Minimum: 0x80000000 Default: 1 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: update map 2
Description: Each bit means update status of each modification Do not change this system
variable.
Power Up: Effective after COLD start
User Interface Location: SYSTEM Variables screen
$SCR.$update_time
Minimum: 0 Default: 80 Maximum: 100000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Inertia calculation update time
Description: The interval time for performing inertia/moment calculations. The unit is msec.
Power Up: Set only during a controlled start
User Interface Location: SYSTEM Variables screen
$SCR_GRP STRUCTURE
Name: Group System Configuration Record
Description: System configuration record for each group.
Power Up: Some fields in this structure will take effect immediately. Some can only be set at a
controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$arm_type
Minimum: 0 Default: 0 Maximum: 20
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Robot Arm Type
Description: Defines the robot arm type. The meanings associated with these values depend on
which robot is being described. The following are possible arm type definitions:
FLOOR_MOUNT 0 = floor mount
ANGLE_MOUNT 1 = angle mount
RACK_MOUNT 2 = rack mount
STUD_ARM 3 = stud robot
KAI_ARM 4 = Kai robot
W_ARM 5 = W type robot
S_5 6 = S 5
S_10 7 = S 10
S_5UD 8 = S 5 upside down
NORMAL_FLANGE 9 = normal flange
SPECIAL_FLANGE 10 = special flange
AREA_GANTRY 11 = area gantry
LINEAR_GANTRY 12 = linear gantry
RIGHT_SIDE 13 = right coordinates robot
LEFT_SIDE 14 = left coordinates robot
RIGHT_NORMAL 15 = right coordinates robot with normal arm length
RIGHT_EXTEND 16 = right coordinates robot with extended arm length
LEFT_NORMAL 17 = left coordinates robot with normal arm length
LEFT_EXTEND 18 = left coordinates robot with extended arm length
S_10UD 19 = S10 upside-down
R_HOODECK 20 = Right Hood/deck opener
L_HOODECK 21 = Left Hood/deck opener
R_DOOR 22 = Right Door opener
L_DOOR 23 = Left Door opener
FRONT_SIDE 24 = front side for S450
BACK_SIDE 25 = back side for S450
S_TYPE 26 = S type for S450
NO_KINEMATICS 27 = for nobot with no kinematics
LR_MATE 28 = LR Mate
LR_MATE_UD 29 = LR Mate Upside-Down
LR_MATE_L 30 = LR Mate left
LR_MATE_L_UD 31 = LR mate left and upside down
H_ARM 32 = for S900
L_ARM 33 = for S900
UPSIDE_DOWN 34 = for S700/S800 upside-down
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$axisorder[9]
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Axis Order
Description: A mapping array from the software axis index to servo hardware registers. It
indicates which axis is controlled by a particular servo motor.
For example, $axisorder[i]=j, where axis index i is connected to servo register j; (Axis i is
controlled by servo motor j. i is commonly referred to as the software number and j as the
hardware number).
$axisorder[i]=0 indicates that there is no servo register associated with axis i.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$axs_amp_num[1 - 2]
Minimum: 0 Default: 1 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Amplifier number of axis
Description: $SCR_GRP[].$axs_amp_num are set on SYSTEM variables screen at Control
start. It mean which amplifier this index axis belongs to. For example, if $SCR_GRP[1].
$axs_amp_num [1] is 1, The J1 axis of Group 1 belongs to the amplifier 1. This amplifier index is
equal to one of $SCR.$amp_type.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$axs_amp_num[3 - 4]
Minimum: 0 Default: 2 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Amplifier number of axis
Description: $SCR_GRP[].$axs_amp_num are set on SYSTEM variables screen at Control
start. It mean which amplifier this index axis belongs to. For example, if $SCR_GRP[1].
$axs_amp_num [1] is 1, The J1 axis of Group 1 belongs to the amplifier 1. This amplifier index is
equal to one of $SCR.$amp_type.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$axs_amp_num[5 - 6]
Minimum: 0 Default: 3 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Amplifier number of axis
Description: $SCR_GRP[].$axs_amp_num are set on SYSTEM variables screen at Control
start. It mean which amplifier this index axis belongs to. For example, if $SCR_GRP[1].
$axs_amp_num [1] is 1, The J1 axis of Group 1 belongs to the amplifier 1. This amplifier index is
equal to one of $SCR.$amp_type.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$axs_amp_num[7 - 9]
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Amplifier number of axis
Description: $SCR_GRP[].$axs_amp_num are set on SYSTEM variables screen at Control
start. It mean which amplifier this index axis belongs to. For example, if $SCR_GRP[1].
$axs_amp_num [1] is 1, The J1 axis of Group 1 belongs to the amplifier 1. This amplifier index is
equal to one of $SCR.$amp_type.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$axs_ xyz_map[9]
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Axis Cartesian Map
Description: For positioners (robots with unknown kinematics) use coordinated motion. In the
case of a linear axis, $axs_xyz_map defines the direction of the axis for base frame. In the case
of a rotary axis, $axs_xyz_map defines the direction of the axis rotation.
0 = no map
1 = +x -1 = -x
2 = +y -2 = -y
3 = +z -3 = -z
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen, SETUP COORD CAL screen.
$SCR_GRP[1].$brk_number[ 9]
Minimum: 0 Default: 0 Maximum: 6
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Brake Number
Description: Defines the brake number associated with the axis.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$config_mask
Minimum: 0,0,0,0,0,0,0,0 Default: -1 Maximum: 0,0,0,0,0,0 ,0,0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: CONFIG_T
Name: Config Mask
Description: Indicates which configuration bits are tested in the solution programs. The value
depends on the robot type. $config_mask also indicates when multiple-turn joints are used.
$config_mask affects the input and display of the configuration string when you specify or display
positions.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$coord_mask
Minimum: 0 Default: 27 Maximum: 32767
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Mask for Available Jog Coordinate Frames
Description: Controls what jog frames the coordinate key cycles through. There is a bit defined
for each coordinate system available:
Bit 0 = Joint Mode
Bit 1 = Jog Frame
Bit 2 = World Frame
Bit 3 = Tool Frame
Bit 4 = User Frame
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$dd_motor[9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Direct Drive Motor
Description: Indicates the axis uses a direct drive motor, if set to TRUE. Not supported in this
release.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$ext_length[ 3]
Minimum: 0. Default: 0. Maximum: 100000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Extended Axis Length
Description: Defines the link length of the extended axis.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$ext_offset[ 3]
Minimum: 0. Default: 0. Maximum: 100000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Extended Axis Offset
Description: Defines the joint offset (in mm) of the extended axis.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$ext_order[3]
Minimum: 0 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Extended Axis Order
Description: Maps the extended axis 1-3 to the software axis 1-9. The variable $SCR_GRP.
$axisorder further maps all software axes to hardware axes. For example, if $ext_order[1] = 7
then axis [7] is the first extended axis.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$ext_xyz_ma p[3]
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Extended Axis Cartesian Map
Description: For integrating an extended axis to the robot for coordinated Cartesian motion.
$ext_xyz_map defines if the axis corresponds to the x, y, or z robot base coordinate frame and
linear axes. For rotary axes, $ext_xyz_map defines the axis of rotation of the rotary axis.
0 = no map
1 = x axis
2 = y axis
3 = z axis
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$flextooltyp
Minimum: 0 Default: 0 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: FlexTool Type
Description: A value more than 0 means that this group is a FlexTool Robot.
Power Up: FlexTool robot set up program set this during Controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$hw_strt_axs
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Hardware Start Axis
Description: Indicates the first hardware axis associated with the motion group.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$joglim_jnt[ 9]
Minimum: 0 Default: 12 Maximum: 100
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Jog Speed Limit In Joint Jogging
Description: Percentage of joint speed limit during joint jogging. The value is different based on
the individual robot model.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$kinem_enb
Minimum: 0 Default: 2 Maximum: 2
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Kinematics Enabled information
Description: This value shows kinematics information of the robot library:
0: Kinematics has not been defined.
1: Only forward kinematics has been defined.
2: Both forward and inverse kinematics have been defined.
Power Up: Changes to this variable take effect immediately. You should not change this variable.
User Interface Location:
$SCR_GRP[1].$link_lengt h[6]
Minimum: 0. Default: 0. Maximum: 100000.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Robot Link Length
Description: Reserved for internal used by FANUC Robotics. This variable is used in the
Kinematic calculation for certain robots.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$loadratio[9]
Minimum: 0. Default: 0. Maximum: 15.
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Load Ratio
Description: Defines the ratio between the external load inertia and the motor inertia.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$num_axes
Minimum: 0 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Axes
Description: The total number of axes that exist in the motion group.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$num_dual
Minimum: 0 Default: 0 Maximum: 3
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: The number of dual axes config
Description: The number of dual axes in this group.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1]. $num_pt
Minimum: 0 Default: 14 Maximum: 22
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: BYTE
Name: Number of Point Records
Description: Reserved for internal use by FANUC Robotics. The number of point records that
will be created in this group.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$num_rob_axs
Minimum: 0 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Number of Robot Axes
Description: The number of robot axes that exist in a motion group. All remaining axes, that are
not in a motion group, are considered extended axes.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$num_seg
Minimum: 0 Default: 6 Maximum: 10
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: BYTE
Name: Number of Segments
Description: Reserved for internal use by FANUC Robotics. The number of segments that will
be created in this group.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$ofst[9]
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: AX_OFS_T
AX_OFS_T = < $x-100000.0 0.0 10000.0 RW RW RW REAL
$y -100000.0 0.0 100000.0 RW RW RW REAL
$z -100000.0 0.0 100000.0 RW RW RW REAL
Name: Axis Offset
Description: Defines the offsets (in mm) between neighboring axes.
Power Up: Set only during a controlled start. Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen, SETUP COORD CAL screen.
$SCR_GRP[1].$op_brk_num[ 9]
Minimum: 0 Default: 0 Maximum: 6
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Option Brake Number
Description: When one axis has two brakes (ex. M-500), this variable is used to assign the
brake DO number for the second brake for this axis.
Power Up: No
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$robot_id
Minimum: "" Default: "12345678901234567890" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Robot Identification
Description: Defines the robot identification string.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$robot_model
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Robot Model
Description: Defines the robot model string.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$rotary_axs[ 9]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Rotary Axis
Description: Indicates the axis is rotary, if set to TRUE; otherwise, it is a linear axis.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$sv_code_id
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Servo Code Identification
Description: Defines the servo code identification string.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$sync_m_axis
Minimum: 1 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Synchronous Master Axis (not supported)
Description: Indicates which robot axis motor has been designated as the master axis for robot
models with dual drive (synchronous) control. Not supported in this release.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$sync_s_axis
Minimum: 1 Default: 0 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Synchronous Slave Axis (not supported)
Description: Indicates which robot axis motor has been designated as the slave axis for robot
models with dual drive, or synchronous, control. Not supported in this release.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP.$turn_axis[3]
Minimum: 0 Default: 4 Maximum: 9
Minimum: 0 Default: 0 Maximum: 9
Minimum: 0 Default: 6 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Robot multiple turn axis
Description: $scr.$turn_axis is an array of three elements. It defines the robot axis which could
have multiple turns.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$update_map
Minimum: 0x80000000 Default: 1 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: update map
Description: Each bit means update status of the modification for this group. Do not change this
system variable.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$use_tbcart
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Turbo Move Switch for Cartesian Motion
Description: If set to TRUE, the Cartesian (linear and circular) turbo move softpart is used for
the motion system. If set to FALSE, the Cartesian standard short move softpart is used for the
motion system. This flag is initialized during robot library initialization.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$use_tbjnt
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Turbo Move Switch for Joint Motion
Description: If set to TRUE, the Joint turbo move softpart is used for the motion system. If set to
FALSE, the Joint standard short move softpart is used for the motion system. This flag is
initialized during robot library initialization.
Power Up: Can be set at any time.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$wrist_type
Minimum: 0 Default: 0 Maximum: 20
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Wrist Type
Description: Defines the type of wrist and the number of robot axes used with that wrist. The
meanings associated with the values 0 through 9 depend on which robot is being described:
NORMAL_WRIST 0 = normal wrist
F_FORWARD 1 = F forward wrist
F_DOWN 2 = F down wrist
E_FORWARD 3 = E forward wrist
E_DOWN 4 = E down wrist
NO_WRIST 5 = no wrist
F_FORWARD_HS 6 = high speed F forward wrist
F_DOWN_HS 7 = high speed F down wrist
E_FORWARD_HS 8 = high speed E forward wrist
E_DOWN_HS 9 = high speed E down wrist
INLINE 10 = in line wrist
OFFSET 11 = offset wrist
INLINE_HS 12 = high speed in line wrist
OFFSET_HS 13 = high speed offset wrist
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$wrst_axis_e
Minimum: 1 Default: 6 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Wrist Axis End
Description: The axis number of the last wrist axis. For a 6 axis robot, this is normally 6.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SCR_GRP[1].$wrst_axis_s
Minimum: 1 Default: 4 Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Wrist Axis Start
Description: The axis number of the first wrist axis. For a 6 axis robot, this is normally 4.
Power Up: Set only during a controlled start.
User Interface Location: SYSTEM Variables screen
$SEL_DEFAULT
Minimum: 0 Default: 16 Maximum: 0xFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Select Default
Description: This system variable is used in the program SELECT screen to determine what set
of programs are displayed at cold start. You can override this setting using the [TYPE] function
key on the SELECT screen.
Values are defined by the program type constants in TPE.KE as follows:
PT_KRLPRG : INTEGER = 2 -- KAREL program
PT_MNE_UNDEF: INTEGER = 1 -- (hex 0001) TPE program of undefined sub type
PT_MNE_JOB : INTEGER = 257 -- (hex 0101) TPE job
PT_MNE_PROC : INTEGER = 513 -- (hex 0201) TPE process
PT_MNE_MACRO: INTEGER = 769 -- (hex 0301) TPE macro
The default, 16, indicates all programs.
Power Up:
User Interface Location: SELECT screen, SYSTEM Variables screen
See Also: $KAREL_ENB, $JOBPROC_ENB
$SEMIPWFDO
Minimum: 0 Default: 0 Maximum: 256
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type:
Name: Digital output port to be turned on at sem-hot start
Description: If non-zero, this indicates a digital output port to be turned ON at the start of semihot
power-fail recovery. This is turned off near the end of semi-hot power-fail recover.
Power Up: This variable can be set at any time but has effect only at power-up.
User Interface Location: SYSTEM Variables screen
See Also: $SEMIPOWERFL
$SEMIPOWERFL
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type:
Name: Enable semi-hot start power-fail recovery
Description: If $SEMIPOWERFL is TRUE, TPP programs which running or paused when the
controller is powered-down are in paused state and on the same line when the controller is
powered-up. If it is false, all programs will be in ABORTED state at power-up.
Power Up: This variable can be set at any time but has effect only at power-up.
User Interface Location: SYSTEM Variables screen
See Also: $SEMIPWFDO, $PWR_SEMI, $PWF_IO
$SERIALTHROT STRUCTURE
Name: Serial Throttle
Description: Enables and controls the serial throttling feature.
If enabled, output through serial ports can be performed on a polled basis, one character
approximately every 4 milliseconds, when motion is on-going.
Power Up: Determination is made at every cold start whether to enable this feature.
User Interface Location: SYSTEM Variables screen
$SERIALTHRO T.$enable
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Serial Throttle Enable
Description: Enable flag. At cold start, if $ENABLE is 0 then the feature is not enabled and
$pointer will be set to 0. If $enable is non-zero at cold start, the feature is enabled and $pointer
will be non-zero.
Power Up: Requires a cold start to take effect.
User Interface Location: KCL, SYSTEM Variables screen
$SERIALTHROT. $flags
Minimum: 0x0 Default: 0x000000FF Maximum: 0xFFFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Serial Throttle Port Flags
Description: Bit mask to enable/disable serial throttling for each individual port.
lowest bit, bit 0 - P1 (Teach Pendant)
bit 1 = P2
bit 2 = P3
bit 3 = P4
bit 4 = P5 (P5 thru P8 are optional serial ports)
bit 5 = P6
bit 6 = P7
bit 7 = P8
Power Up: No
User Interface Location: KCL, SYSTEM Variables screen
$SERIALTHROT.$pointer
Minimum: 0x0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Serial Throttle Pointer
Description: Internal address used to check if motion is on-going. Write access is not available.
If set to 0, serial throttling is not being used. If set to a non-zero value, serial throttling is in effect
as further specified by $FLAGS.
Power Up: Requires a cold start to take effect.
User Interface Location: Can not be set from KCL or SYSTEM Variables screen
$SERVENT[1-2] STRUCTURE
Name: Server Entry
Description: An array of structures defining the Internet Protocol Services. Individual fields
within this structure are described below.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$SERVENT[1].$s_name
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Service name
Description: Identifies the service.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$SERVENT[1].$s_port
Minimum: 0 Default: 0 Maximum: 30000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Port
Description: Port number associated with this service.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variable screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$SERVENT[1].$s_proto
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Server Protocol
Description: Name of the Protocol associated with this service.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$SERVICE_KL[1-16]
Minimum: "" Default: "SVCPRG[1-16] " Maximum: " "
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Karel program to execute resume program
Description: For internal use only. Do not modify this system variable. The RESUME program is
executed through these KAREL programs. The number of the array[16], indicates the number of
PX task. The RESUME PROGRAM for PX task 1 is executed through SVCPRG_1.PC.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen and Auto Error Recovery Setup screen
$SERVICE_KRL[1-5]
Minimum: "" Default: "SVCPRG_[1-5] " Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: KAREL program to execute resume program
Description: For internal use only. Do not modify this system variable. RESUME program is
executed through these KAREL programs. The length of the array[5], indicates the number of
motion groups. RESUME PROGRAM for motion group 1 is executed through SVCPRG_1.PC.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$SERVICE_PRG[1- 16]
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Resume program
Description: For internal use only. Do not modify this system variable. When RESUME
PROGRAM function is enabled and a RESUME PROGRAM statement is executed, the specified
program is assigned to this variable. The length of the array[16], indicates the number of PX
tasks.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$SFLT_WAILIM
Minimum: 0 Default: 1000 Maximum: 2000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Waiting limiter for SOFTFLOAT ON
Description: Waiting limiter for SOFTFLOAT ON [ms]
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$SHFTOV_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Enables Shifted Override Setting
Description: If set to 0, the override will step up and down in fine increments of 5%. This occurs
regardless of whether you press the SHIFT key.
If set to 1, the override steps up and down from 50% to 100% and back if the SHIFT key is
pressed. If the shift key is not pressed the override moves in fine increments.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG STRUCTURE
Name: Shell Configuration
Description: Describes how the main system control functions are performed. The R-J3
controller "main" program is called the shell. This program can be run when the controller is
turned on and might be the "system" shell. Individual fields within this structure are defined
below.
Power Up: Yes
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$com_timeout
Minimum: 0 Default: 1000 Maximum: 99999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Communication timeout
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$cont_only
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Continue Only
Description: UOP Cycle Start Continue Only Function Used to start the program under the
forced ending according to the START signal. Setting Start only the program under the
interruption for TRUE. Start the program selected now from the line for FALSE now.
If $SHELL_CFG.$cont_only is FALSE, then UOP CYCLE START acts like SOP CYCLE START,
i.e it can run a program or continue a paused program. If $SHELL_CFG.$cont_only is TRUE,
then UOP CYCLE START can only continue a paused program, and has no effect if no program
is running.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$err_report
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Error Report
Description: A report containing the errors that occurred.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$invert_chk
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name:
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$job_base
Minimum: 0 Default: 0 Maximum: 9999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Shell Job Base
Description: Sets the base number when the RSR and the PNS functions are used. It can be
updated using the the SETUP RSR/PNS screen.
The PNS binary input is added to $SHELL_CFG.$job_base. The result is converted to a 4
character string
(0 padded if necessary). This string is appended to $SHELL_CFG.$job_root to create the name
of the job be run when UOP PROD START is asserted. The name of the program is stored in
$PNS_PROGRAM for comparison with other run requests.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$job_root
Minimum: "" Default: "RSR" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Job Root
Description: The shell job root string. Not currently used.
This string is the starting root name of the job to run when a PNS signal is detected. A 4
character string that consists of $SHELL_CFG.$job_root + $SHELL_CFG.$job_base (with
leading 0s if needed) is concatenated to $SHELL_CFG.$job_root.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$karel_sop
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: SOP Flag
Description: Flag that determines which task will detect SOP input signals. If $SHELL_CFG.
$KAREL_SOP is FALSE then the KAREL shell, if running, will not detect SOP signals, the
system condition handler task will. If $SHELL_CFG.$KAREL_SOP is TRUE, then the KAREL
shell, if running, detects any SOP input signals (except for USER PB1 and USER PB2, if
assigned to a macro).
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$karel_uop
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: UOP Flag
Description: Determines which task will detect UOP input signals. If $SHELL_CFG.$karel_uop
is FALSE then the KAREL shell, if running, will not detect UOP signals, the system condition
handler task will. If $SHELL_CFG.$karel_uop is TRUE, then the KAREL shell, if running, detects
any UOP input signals.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$num_rsr[4]
Minimum: 0 Default: 0 Maximum: 9999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: RSR Number
Description: Defines the RSRs in a multi-tasking group and displays the number of the signal
that can be registered with RSR.
Used when the optional RSR multi-tasking feature is purchased. Allows RSR multi-tasking by
defining the number of RSR signals assigned for each group of RSRs. For this optional feature,
there are 8 RSR input signals therefore the sum of all $num_rsr array elements cannot exceed 8.
This sysvar is not used for a single tasking RSR system where one RSR job is executed at a
time, and others are put into a queue. For example, if $SHELL_CFG.$num_rsr[1] = 3, then
RSR's 1, 2, 3 are grouped together to run one task. If one of these 3 is already running, then it is
queued. If $SHELL_CFG.$num_rsr[2] = 3 then RSR's 4, 5, 6 are grouped together to run a
second task, and so on.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$options
Minimum: 0x00000000 Default: 0x00000000 Maximum: 0xFFFFFF FF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Options
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$pns_enable
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Effective/invalidity of PNS
Description: Determines whether RSR or PNS is enabled on a system (they both cannot be
enabled at the same time). If $SHELL_CFG.$pns_enable = TRUE, then PNS is active, and
RSRs are disabled.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$prodstartyp
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Production start type
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$que_enable
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Queue Enable
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr_ack_pul
Minimum: 0 Default: 400 Maximum: 9999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: RSR Acknowledgement Pulse Length
Description: Defines the length of the pulse sent out on ACK1-ACK4 when
$SHELL_CFG.$rsr_ackenbl = TRUE.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr_ackenbl
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Effective/invalidity of RSR Reception Check Signal
Description: RSR Acknowledgement Enable Flag If this is set to TRUE, then when an RSR is
detected, an acknowledgement is returned to the PLC on the corresponding ACK1-ACK8 UOP
output signals. The pulse width is specified in $SHELL_CFG.$rsr_ack_pul.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr_enable[4]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: RSR enable
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr1_name
Minimum: "" Default: "RSR" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: RSR1 Name
Description: Not currently used. This is the name of the job that will be run when RSR1 is
detected.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr2_name
Minimum: "" Default: "RSR" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: RSR2 Name
Description: Not currently used. This is the name of the job that will be run when RSR2 is
detected.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr3_name
Minimum: "" Default: "RSR" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: RSR3 Name
Description: Not currently used. This is the name of the job that will be run when RSR3 is
detected.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$rsr4_name
Minimum: "" Default: "RSR" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: RSR4 Name
Description: Not currently used. This is the name of the job that will be run when RSR4 is
detected.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$shell_name
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Name of the Shell Task
Description: This is the name of the shell task to be run automatically at each cold start. If this is
uninitialized or nil, then the system `C' shell task is run. If this is set to a valid task name, then the
name of the task is run.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$start_mode
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name:
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$tpfwd_karel
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: TP FWD/BWD Flag
Description: Determines which task will detect TP FWD/BWD input signals. If $SHELL_CFG.
$tpfwd_karel is FALSE then the KAREL shell, if running, will not detect SOP signals, the teach
pendant task will. If $SHELL_CFG.$tpfwd_karel is TRUE, then the KAREL shell, if running,
detects any TW FWD/BWD input signals (except for USER PB1 and USER PB2, if assigned to a
macro).
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$uop_sel_sta
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: PNS Selected Program
Description: If this is TRUE, then the UOP PROGRUN and PAUSED output LED's reflect the
status of $PNS_PROGRAM, regardless of any other task being run. If this is FALSE, then the
UOP PROGRUN and PAUSED output signals reflect the status of $TP_DEFPROG.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_CFG.$use_abort
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: UOP Cycle Stop Abort Function
Description: If $SHELL_CFG.$USE_ABORT is FALSE, then the UOP CYCLE STOP will stop
the
program after the current cycle is over. Pressing CYCLE STOP does not immediately stop
program execution.
If $SHELL_CFG.$use_abort is TRUE, then UOP CYCLE STOP will abort the program at the end
of the
current cycle.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_WRK STRUCTURE
Name: Shell Work Area
Description: This variable describes the current state of the system. The variables in this
structure are read only. They are set by the teach pendant editor.
Individual fields within this structure are described below.
Power Up: Yes
User Interface Location: SYSTEM Variables screen
$SHELL_WRK.$by_manual
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Cursor Moved Manually
Description: Indicates that you has manually moved the cursor in the edited program.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_WRK.$curr_line
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Current Line
Description: This is the line number that the teach pendant system is currently displaying. The
line number is in the routine contained in the field $ROUT_NAME.
Power Up: Yes
User Interface Location: Based on the program being edited
$SHELL_WRK.$rout_name
Minimum: "" Default: "" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Current Routine
Description: Name of the routine which is currently being edited. This might not be the same as
$TP_DEFPROG. When the teach pendant system goes into a subroutine, $TPDEFPROG is not
set but this variable will be.
Power Up: Yes
User Interface Location: Based on the program being edited
$SHELL_WRK.$rsr_stat_p
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: ADDRESS
Name:
Description:
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_WRK.$shell_start
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: UNINIT
Name: Shell Start
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$SHELL_WRK.$task_num
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Task Number
Description: Contains the task number of the routine which is currently executing via the teach
pendant edit system.
Power Up: Yes
User Interface Location: Based on program being edited
$SHELL_WRK.$wrk_busy
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: UNINIT
Name: Work Busy
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$SSR STRUCTURE
Name: Single Step Record Structure
Description: Defines dynamic data set by the system concerning single stepping forward and
backward through program execution. Individual fields within this structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$SSR.$bwdstep
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Single Step Backward
Description: If set to TRUE, then single step backward is enabled.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$SSR.$sglsteptask[14]
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Single Step Task Name
Description: Task name for single step operation.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$SSR.$singlestep
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: Single Step
Description: If set to TRUE, then single step forward is enabled.
Power Up: Change takes effect immediately.
User Interface Location: TEST CYCLE
$SSR.$steptasknum
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Single Step Task Id
Description: The identification number of the motion source task.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$SSR.$stepstmttyp
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Single Step Statement Type
Description: Single step statement type where:
case 1 : Task is paused at each statement
case 2 : Task is paused at motion statement only
case 3 : Task is paused at each mnemonic statement and karel motion statement
case 4 : Execution continue in routine
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$SSR.$stpsegtype
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BYTE
Name: Single Step Segment Type
Description: Single step segment type.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
$STOP_ON_ERR
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: KCL Stop On Error
Description: $STOP_ON_ERR indicates whether or not the system stops on a KCL command
file error. If TRUE, execution of the command procedure stops if any error condition is found.
You can set and clear $STOP_ON_ERR within a command procedure to control the execution of
command files depending on the desired response to errors.
Note that $STOP_ON_ERR applies only to errors that can be detected by the KCL command
interpreter. For example, a KCL> RUN command can cause an error during program execution,
but the KCL command interpreter will continue because the command itself has succeeded.
Power Up: No
User Interface Location: SYSTEM Variables screen Usually set using KCL's SET VAR
command.
$SVPRG_COUNT
Minimum: 0 Default: 0 Maximum: 999
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: auto start maximum counter of auto error recovery
Description: Counter of automatic start feature in auto error recovery function. This variable
should be set internally by system software (Program control software and auto error recovery
software). So the customer must not change this value.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM variable screen
$SVPRG_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Resume program enable/disable
Description: For internal use only. Do not modify this system variable. This variable should be
set internally by system software.
0 = Disable
1 = Enable
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen and Application Setup screen
(WELD system setup screen etc.)
$SVPRG_TBL[1-5]
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Resume program table
Description: For internal use only. Do not modify this system variable. When KAREL program
for resume program is executed, the KAREL program executes the resume program
($SERVICE_PRG) specified with the number. The length of the array[5] indicates the number of
motion groups.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$SVPRM_ENB
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Servo Parameter Enable
Description: Displays the servo parameter screen if one exists.
Power Up:
User Interface Location: SYSTEM Variables screen
$SYSDSP_PASS
Minimum: 0 Default: 0 Maximum: 999999
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: System Variable Screen Display Password
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
TB_PARAM[1] STRUCTURE
Name: TurboMove joint softpart parameter
Description: The motion parameter for TurboMove joint softpart. Individual fields within this
structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m a_brk_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Break torque margin for acceleration of joint motion
Description: Margin parameter of Break torque ($TBJ_GRP.$mr_brk_trq) for acceleration of
TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m a_grav_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gravity margin for acceleration of joint motion
Description: Margin parameter of Gravity torque for acceleration of TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m a_load_trq
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Load torque of motor for acceleration
Description: Load torque of motor for acceleration.
But currently, this parameter has other meaning. This is used as the margin parameter for
minimum accel time according to arm height.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m a_nold_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Nold torque margin for acceleration of joint motion
Description: Margin parameter of torque at nold velocity ($TBJ_GRP.$mr_nold_vel) for
acceleration of TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m a_stal_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Stal torque margin for acceleration of joint motion
Description: Margin parameter of Stale torque ($TBJ_GRP.$mr_max_trq) for acceleration of
TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$max_trq_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Max torque margin for joint motion
Description: Margin parameter for max motor torque for TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m d_brk_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Break torque margin for deceleration of joint motion
Description: Margin parameter of Break torque ($TBJ_GRP.$mr_brk_trq) for deceleration of
TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m d_grav_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gravity margin for deceleration of joint motion
Description: Margin parameter of Gravity torque for deceleration of TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m d_load_trq
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Load torque of motor for acceleration
Description: Load torque of motor for acceleration.
But currently, this parameter has other meaning. This is used as the margin parameter for
minimum accel time according to arm height.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m d_nold_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Nold torque margin for deceleration of joint motion
Description: Margin parameter of torque at nold velocity ($TBJ_GRP.$mr_nold_vel) for
deceleration of TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m d_stal_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Stal torque margin for deceleration of joint motion
Description: Margin parameter of Stale torque ($TBJ_GRP.$mr_max_trq) for deceleration of
TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m r_brk_trq
Minimum: -100000. Default: 2.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Break torque of motor
Description: The torque of the motor at break point of motor torque curve for TurboMove joint
motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m r_brk_vel
Minimum: -100000. Default: 2.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Break velocity of motor
Description: The velocity of the motor at break point of motor torque curve for TurboMove joint
motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m r_max_trq
Minimum: -100000. Default: 2.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Max torque of motor
Description: Max torque of the motor for TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$m r_nold_vel
Minimum: -100000. Default: 5.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Nold velocity of motor
Description: The maximum motor velocity without load.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also:TurboMove Technote
$TB_PARAM[1].$m r_stal_trq
Minimum: -100000. Default: 2.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Stal torque of motor
Description: The torque of the motor at 0 velocity for TurboMove joint motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$p th_brk_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Break torque margin for joint cont motion
Description: Margin parameter of Break torque ($TBJ_GRP.$mr_brk_trq) for TurboMove joint
cont motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$p th_grv_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Gravity margin for joint cont motion
Description: Margin parameter of Gravity torque for TurboMove joint cont motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$p th_nld_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Nold torque margin for joint cont motion
Description: Margin parameter of torque at nold velocity ($TBJ_GRP.$Mr_nold_vel) for
TurboMove joint cont motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TB_PARAM[1].$p th_stl_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Stal torque margin for joint cont motion
Description: Margin parameter of Stale torque ($TBJ_GRP.$mr_max_trq) for TurboMove joint
cont motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP STRUCTURE
Name: TurboMove Cartesian group variable
Description: TBC softpart motion parameter. Individual fields within this structure are described
below.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$cnt_ scale
Minimum: 0. Default: 1 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: CNT motion scale
Description: This parameter is used to tune cont motion accel time for TurboMove cartesian
motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$min_ acc_uca
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum accel time for TurboMove cartesian short motion
Description: Minimum accel time for TurboMove cartesian short motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$min_ c_id_e1
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$min_ c_id_e2
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$min_ c_id_e3
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$min_ cat_uma
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum accel time for TurboMove cartesian long motion
Description: Minimum accel time for TurboMove cartesian long motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$min_ cyc_id
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$path _ratio
Minimum: 0 Default: 1.0 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Accel time ratio for CF fine motion
Description: The ratio of 2nd/1st accel time for CF fine motion.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$payl oad_mgn
Minimum: 0. Default: 0 Maximum: 1000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Payload margin
Description: Margin parameter for payload value.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$shor tmo_scl
Minimum: 0. Default: 1 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Short motion scale
Description: This parameter is used to short motion accel time for TurboMove cartesian motion.
Currently not used.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$tbc_ accel1
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: 1st default accel time for JF cartesian motion
Description: 1st default accel time for JF cartesian motion.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$tbc_ accel2
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: 2nd default accel time for JF cartesian motion
Description: 2nd default accel time for JF cartesian motion.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$tbc_ path1
Minimum: 0 Default: 256 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: 1st default accel time for CF cont cartesian motion
Description: 1st default accel time for CF cont cartesian motion.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$tbc_ path2
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: 2nd default accel time for CF cont cartesian motion
Description: 2nd default accel time for CF cont cartesian motion.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM STRUCTURE
Name: TurboMove cartesian softpart parameter
Description: The motion parameter for TurboMove cartesian softpart. Individual fields within this
structure are described below.
Power Up: The change effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM[1].$max_trq_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian motion max torque margin
Description: Margin parameter for max torque of the motor for TurboMove Cartesian motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM[1].$mc_brk_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian motion break torque margin.
Description: Margin parameter of Break torque ($TBJ_GRP.$MR_BRK_TRQ) for TurboMove
Cartesian motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM[1].$mc_grav_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian motion gravity margin.
Description: Margin parameter of Gravity torque for TurboMove Cartesian motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM[1].$mc_max_trq
Minimum: -100000. Default: 2.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian motion max. torque
Description: Max torque of the motor for TurboMove Cartesian motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM[1].$mc_nold_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian motion nold torque margin
Description: Margin parameter of torque at nold velocity ($TBJ_GRP.$MR_NOLD_VEL) for
TurboMove Cartesian motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].TBC_PARAM[1].$mc_stal_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian motion stal torque margin
Description: Margin parameter of Stale torque ($TBJ_GRP.$MR_MAX_TRQ) for TurboMove
Cartesian motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$TBC_ PARAM[1].$shortmo_lim
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Short motion limit
Description: This parameter is used to tune short motion accel time for TurboMove Cartesian
motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBC_GRP[1].$TBC_ PARAM[1].$shortmo_mgn
Minimum: -100000. Default: 1.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Short motion limit
Description: This parameter is used to tune short motion accel time for TurboMove Cartesian
motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBCCFG STRUCTURE
Name: TurboMove Cartesian configuration variable
Description: Sets or indicates TBC softpart configuration. Individual fields within this structure
are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TBCCFG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBC softpart debug flag
Description: Flag for debug TBC softpart.
User Interface Location: SYSTEM Variables screen
$TBCCFG.$group_mask
Minimum: 0 Default: 1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBC softpart Group Mask
Description: Indicates TBC softpart group mask.
Power Up:
User Interface Location: SYSTEM Variables screen
$TBCCFG.$mb_conflict
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBC softpart conflict information
Description: Indicates TBC softpart conflict information.
User Interface Location: SYSTEM Variables screen
$TBCCFG.$mb_required
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBC softpart conflict information
Description:
User Interface Location: SYSTEM Variables screen
$TBJ_GRP STRUCTURE
Name: TurboMove Joint group variable
Description: TBJ softpart motion parameter. Individual fields within this structure are described
below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$asym _param
Minimum: -100000. Default: 2 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Asymmetrical acc/dec parameter
Description: This parameter is used for asymmetrical acc/dec ratio setting.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$long mo_mgn
Minimum: 0. Default: 1 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Long motion scale
Description: Margin parameter of minimum accel time according to J1 inertia value.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$long mo_scl
Minimum: 0. Default: 1 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Long motion scale
Description: Margin parameter of minimum accel time according to J1 inertia value.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$min_ acc_shm
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum accel time for TurboMove joint short motion
Description: Minimum accel time for TurboMove joint short motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$min_ acc_uma
Minimum: 0 Default: 128 Maximum: 10000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Minimum accel time for TurboMove joint long motion
Description: Minimum accel time for TurboMove joint long motion.
Power Up: The change effect immediately
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$min_ c_id_e1
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$min_ c_id_e2
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$min_ c_id_e3
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$min_ cyc_id
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: TurboMove parameter version id
Description: TurboMove parameter version id.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$payl oad_mgn
Minimum: 0. Default: 0 Maximum: 1000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Payload margin
Description: Margin parameter for payload value.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$shor tmo_mgn
Minimum: 0. Default: 1 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Short motion scale
Description: Currently not used.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$shor tmo_scl
Minimum: 0. Default: 1 Maximum: 100.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Short motion scale
Description: Currently not used.
Power Up:
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$tbj_ accel1[i]
Minimum: 0 Default: 256 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: 1st default accel time for i th joint motion
Description: 1st default accel time for i th joint motion.
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBJ_GRP[1].$tbj_ accel2[i]
Minimum: 0 Default: 256 Maximum: 100000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: 2nd default accel time for i th joint motion
Description: 2nd default accel time for i th joint motion .
Power Up: A cold start is required to change this value.
User Interface Location: SYSTEM Variables screen
$TBJCFG STRUCTURE
Name: TurboMove Joint configuration variable
Description: Set or indicate TBJ softpart configuration. Individual fields within this structure are
described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TBJCFG.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBJ softpart debug flag
Description: Flag for debug TBJ softpart.
User Interface Location: SYSTEM Variables screen
$TBJCFG.$group_mask
Minimum: 0 Default: 1 Maximum: 31
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBJ softpart Group Mask
Description: Indicate TBJ softpart group mask.
Power Up:
User Interface Location: SYSTEM Variables screen
$TBJCFG.$mb_conflict
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBJ softpart conflict information
Description: Indicate TBJ softpart conflict information.
User Interface Location: SYSTEM Variables screen
$TBJCFG.$mb_required
Minimum: 0 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TBJ softpart conflict information
Description:
User Interface Location: SYSTEM Variables screen
$T BJCFG.$tbj_select
Minimum: 1 Default: 1 Maximum: 2
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TBJ selection flag
Description: For internal use only. Do not modify this system variable.
If this value is 2, asymmetric filter can be used for J CNT motion.
If this value is 1, asymmetric filter is used for only J PTP motion.
Power Up: You must perform a cold start for the change to take effect.
$TBJCFG.$update_time
Minimum: 0 Default: 100 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Update time for inertia/moment calculation
Description: Update time for inertia/moment calculation. Currently not used.
User Interface Location: SYSTEM Variables screen
$TBPARAM.$dyn_frc_mgn
Minimum: -100000 Default: 0.0 Maximum: 100000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Dynamic friction margin.
Description: For internal use only. Do not modify this system variable. Torque curve can be
changed with this parameter for reducer dynamic friction. This value will be tuned by FANUC
Robotics, so user must not change this value.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG STRUCTURE
Name: TCP Speed Prediction Configuration System Variable Structure
Description: This set of variables controls the mode of operation of TCP Speed Prediction. The
individual fields within this structure are defined below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$debug_main
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TCP Seed Prediction Debug Level for Main Softpart (Bit mapped)
Description: For internal debugging use only. Setting this variable could change the functionality
of this system option.
Power Up: This value initializes to 0 and maintains its previous value over subsequent power
cycles.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$debug_task
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TCP Seed Prediction Debug Level for Task Softpart (Bit mapped)
Description: For internal debugging use only! Setting this variable could change the functionality
of this system option.
Power Up: This value initializes to 0 and maintains its previous value over subsequent power
cycles.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$group_num
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TCP Speed Prediction Motion Group Number
Description: This system variable sets the number of the motion group for which the TCP Speed
Prediction softpart will predict TCP speed. Currently this value is restricted to group 1.
Power Up: This value initializes to group 1 and will maintain its value over subsequent power
cycles.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$num_tcppse g
Minimum: 1 Default: 6 Maximum: 15
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TCP Speed Prediction Segment List Size
Description: This item is not currently used, but will be within a future software release. This is
intended to be used to configure the number of motion segments which the TCP Speed
Prediction softpart option uses to store motion data. Currently TCPP uses a hard coded value of
15 motion segments.
Power Up: This value initializes to the result of the system variable $SCR_GRP[grp_num].
$num_seg + 1 and will maintain its value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$oft_tim_en b
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: TCP Speed Prediction On-The-Fly delay time update enable.
Description: This system variable when true allows for on-the-fly updating of the TCPP delay
time value ($TCPPIR.$tcdelay). Since on-the-fly changes to the TCPP delay time might result in
predicted speed value discontinuities, this variable might be set to false which will prevent delay
time changes until the robot has stopped moving at the end of a program.
Power Up: This value initializes to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
See Also: $TCPPIR.$tcdelay
$TCPP_CFG.$tcpp_time
Minimum: 16 Default: 28 Maximum: 5000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TCP Speed Prediction Task Update Rate (msec)
Description: This is the rate in milliseconds that the TCP Speed Prediction task softpart will
execute and update the predicted speed output value $TCPPSPEED.$speed.
Power Up: This value initializes to the result of $SCR.$itp_time * $PARAM_GROUP[grp_num].
$linear_rate and will maintain its previous value over subsequent power cycles.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$vc_present
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: TCP Seed Prediction Velocity Control Present Flag
Description: This variable when set TRUE by the motion system indicates the Velocity Control
motion system is presently installed on the controller.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$TCPP_CFG.$warning_en b
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: TCP Speed Prediction Warning Message Enable
Description: This system variable when true allows the posting of warning level error messages.
(These are warnings only, not faults, which the user might wish not to be displayed.) Currently
these include the following: - TCPP-011 "Pred time skips first motion" - TCPP-018 "Begin Error
Mode at line:nn" - TCPP-019 "Speed Ovrd Mode at line:nn"
Power Up: This value initializes to TRUE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$TCPPIR STRUCTURE
Name: TCP Speed Prediction Instruction Record System Variable Structure
Description: This set of variables allow the user to enable the TCP Speed Prediction softpart
and set the equipment delay (prediction) time. The individual fields within this structure are
defined below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TCPPIR.$enable_tcpp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: TCP Speed Prediction Enable Switch
Description: This allows the user to enable or disable the TCP Speed Prediction softpart. A
predicted speed output is generated when the softpart is enabled.
Power Up: This value initializes to FALSE and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$TCPPIR.$tcdelay
Minimum: -2000 Default: 200 Maximum: 2000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: TCP Speed Prediction (Equipment) Delay Time (milliseconds)
Description: This value allows the user to specify the equipment delay time to be used as the
prediction time by the TCP Speed Prediction softpart.
NOTE: A negative value causes TCP Speed Prediction to generate a historical value instead of a
predicted value.
Power Up: This value initializes to 200 (msec) and maintains its previous value over subsequent
power cycles.
User Interface Location: SYSTEM Variables screen
$TCPPSPEED STRUCTURE
Name: TCP Speed Prediction Speed Output System Variable Structure
Description: These are the output system variables that involve the predicted speed of the robot
Tool Center Point (TCP) which are updated by the TCPP task softpart at the interval specified by
the value of $TCPP_CFG.$tcpp_time. The individual fields within this structure are defined
below.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $TCPP_CFG.$tcpp_time
$TCPPSPEED.$accel
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: TCP Speed Prediction Acceleration (millimeters/second )
Description: This is the predicted acceleration of the robot TCP which corresponds with the
value of the predicted speed ($TCPPSPEED.$speed). It is a directionless value, but its sign is
valid (positive for increasing TCP speed, negative for decreasing TCP speed).
Power Up: This value initializes to 0 at each power cycle and is automatically updated by the
TCP task softpart.
User Interface Location: SYSTEM Variables screen
See Also: $TCPPSPEED.$speed
$TCPPSPEED.$motype
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: MOTYPE
Name: TCP Speed Prediction Programmed Motion Type
Description: This is the programmed motion type of the last active TCPP motion segment at the
time of the most recent TCP Speed prediction update.
Power Up: This value initializes to 0 at each power cycle and is automatically updated by the
TCP task softpart.
User Interface Location: SYSTEM Variables screen
$TCPPSPEED.$prog_sp eed
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: TCP Speed Prediction Programmed Speed
Description: This is the programmed speed of the last active TCPP motion segment at the time
of the most recent TCP Speed prediction update.
Power Up: This value initializes to 0 at each power cycle and is automatically updated by the
TCP task softpart.
User Interface Location: SYSTEM Variables screen
$TCPPSPEED.$speed
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: TCP Speed Prediction Speed (Absolute Velocity Magnitude) (millimeters / second)
Description: This is the predicted speed of the robot TCP computed as the absolute value of the
magnitude of the predicted Cartesian velocity ($TCPPSPEED.$vspeed). It is referenced (without
sign or direction) to the WORLD frame for normal prediction, and to the currently selected
Remote TCP frame (also without sign or direction) for Remote TCP operation.
Power Up: This value initializes to 0 at each power cycle and is automatically updated by the
TCP task softpart.
User Interface Location: SYSTEM Variables screen
See Also: $TCPPSPEED.$vspeed
$TCPPSPEED.$tcdelay _mon
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: TCP Speed Prediction Delay Time Monitor (milliseconds)
Description: This is a copy of the TCPP equipment delay time ($TCPPIR.$tcdelay) which is
currently being used as the prediction time within the TCPP softpart. This value is presented
within this structure to provide a convenient monitor point for the user.
Power Up: This value initializes to 0 at each power cycle and is automatically updated by the
TCP task softpart.
User Interface Location: SYSTEM Variables screen
See Also: $TCPPIR.$Tcdelay
$TCPPSPEED.$timestamp
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: TCP Speed Prediction Timestamp (ROS Ticks)
Description: This is the timestamp (in ROS ticks) corresponding to the most recent time when
the current values of the $TCPPSPEED data structure were computed and recorded.
Power Up: This value initializes to 0 at each power cycle and is automatically updated by the
TCP task softpart.
User Interface Location: SYSTEM Variables screen
See Also: $TCPPSPEED
$TCPPSPEED.$vspeed
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: VECTOR
Name: TCP Speed Prediction Velocity Vector (millimeters / second)
Description: This system variable is the predicted speed of the TCP recorded as a vector with
components x, y, and z. It is referenced to the WORLD frame for normal TCP operation, and to
the currently selected Remote TCP frame for Remote TCP operation.
Power Up: These values initialize to 0.0 at each power cycle and are automatically updated by
the TCP task softpart.
User Interface Location: SYSTEM Variables screen
$TH_CIRCUIT
Name: Touch sensor circuit enable port.
Description: The touch sensing software uses this output port to turn on/off the touch sensing
circuitry.
Power Up: Changes take effect immediately.
User Interface Location: Touch I/O on the I/O screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$TH_DEBUG
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Touch sensor debug flag
Description: Reserved for Internal use by FANUC Robotics. If this variable is set to a value
other than 0, the touch sensing software will print out debug information on a debug console.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_DEFAULT STRUCTURE
Name: Touch sensing default data structure.
Description: This structure defines all the default values for the touch sensing softpart.
Individual fields within this structure are defined below.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$TH_DEFAULT.$prog _master
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Program Master
Description: If set to TRUE, the program is in master mode. If set to FALSE, the individual touch
sensing schedule takes control over mastering.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also: Touch sensing schedule, master_flag.
$TH_DEFAULT.$th_m ax_spd
Minimum: 0 Default: 50 Maximum: 150
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Maximum search speed
Description: The allowable maximum search speed. You cannot define a search speed that
exceeds this number. If an attempt is made, the search speed will be set to the value of this
variable.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_DEFAULT.$th_m in_dist
Minimum: 0 Default: 10 Maximum: 200
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Minimum search distance
Description: This variable specifies the minimum search distance. You cannot specify a search
speed less than this number. If an attempt is made, the search distance will be set to the value of
this variable.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_DEFAULT.$th_m in_spd
Minimum: 0 Default: 5 Maximum: 50
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Minimum search speed
Description: The minimum allowable search speed. You cannot specify a search speed less
than this variable.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_DEFAULT.$th_p tn_reg
Minimum: 0 Default: 10 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Default search pattern output position register
Description: This variable is used only when you specify an invalid position register number in a
Search Start [] PR[] instruction.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_DEFAULT.$th_s rch_reg
Minimum: 0 Default: 9 Maximum: 10
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Default search output position register number
Description: This variable is used when you specify an invalid search output position register
number.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION STRUCTURE
Name: Touch sensor motion data structure
Description: The touch sensor sends this data structure to the motion subsystem when
requesting a service. This structure is for internal use by FANUC Robotics.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$accel_t ime
Minimum: 0 Default: 28 Maximum: 500
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Acceleration time.
Description: The motion acceleration time during a search motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$re_term typ
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: SHORT
Name: Return motion termination type
Description: The termination type of a search return motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$return_ dist
Minimum: 0 Default: 20000 Maximum: 2000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: return_dist
Description: Copy of the data from current touch sensing schedule. Motion system uses it to
control the automatic return distance.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$return_ spd
Minimum: 0 Default: 100 Maximum: 1000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Return Speed
Description: This variable specifies a return speed of a search motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$search_ dist
Minimum: 0 Default: 100 Maximum: 2000
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Search distance
Description: Maximum searching distance for a search motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$search_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Search On flag
Description: If this system variable is ON, it is a search motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$search_ spd
Minimum: 0 Default: 50 Maximum: 500
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Search speed
Description: Speed of search motion.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$sim_det ect
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Simulated detection
Description: Used to simulate a touch input to the controller. Therefore, the touch sensor
program can run without hardware setup.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$srchne_on
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Search no effect flag
Description: Reserved for Internal use by FANUC Robotics. Not currently used.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$time_st amp
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Time stamp
Description: The time when robot touches a part.
Power Up: Changes take effect immediately.
$TH_MOTION.$touch_pos
Minimum: 9 Default: {REAL} Maximum: 9
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: REAL
Name: Touched position
Description: The joint position where the robot is in contact with a part.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_MOTION.$ref_grp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: ref_grp
Description: Copy of the data from current touch sensing schedule.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_WRKFRAME.$ref_grp[1-32]
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Touch frame reference group
Description: User set this value in Touch Frame Setup manual to specify which motion group
the touch frame is with respect to.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_SEARCH
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Search flag
Description: Reserved for Internal use by FANUC Robotics. It is set when a search motion is
executed. It is turned off when the search motion is completed.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_SENSOR STRUCTURE
Name: Touch sensor port
Description: The touch sensing software checks this port for a contact signal. Individual fields
within this structure are defined below.
Power Up: Changes take effect immediately.
User Interface Location: Touch I/O on the I/O screen.
$TH_SENSOR.$port_nu mber
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: I/O Port number
Description: Digital I/O port number.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_SENSOR.$port_type
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: I/O Port type.
Description: The digital I/O port type.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_SENSOR.$threshold
Minimum: 0x80000000 Default: 0 Maximum: 0x7fffffff
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Threshold
Description: The threshold number for analog inputs.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_SRCHNE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Search no effect flag
Description: Reserved for Internal use by FANUC Robotics. Not currently used.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_SRCHST
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Search start flag
Description: Reserved for Internal use by FANUC Robotics. This variable is set when a Touch
Offset Start PR[] instruction is executed, and it is turned off when a Touch offset End instruction is
executed.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
$TH_WELD STRUCTURE
Name: The welding I/O port.
Description: The touch sensor uses this data structure to check whether the welding port is
enabled. It is an error if both the touch sensing circuit and welding are enabled. This variable is
not being used in current software.
Power Up: Changes take effect immediately.
User Interface Location: Touch I/O on the I/O screen.
$THSCHEDULE STRUCTURE
Name: Touch sensor schedule
Description: This system variable defines an array of 32 touch sensing schedules. Each
schedule defines run-time properties of the touch sensing search motion, search pattern and
offset calculations.
Power Up: Changes take effect immediately.
User Interface Location: In touch schedule under DATA screen, or under SYSTEM Variables
screen
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE[1].$auto_return
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Search motion auto return.
Description: Determines the position of the robot after a touch is performed. When auto return is
set to true, the robot will return to its search start position. Otherwise, the robot will remain at the
contact point.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE [1].$comment
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Comment field for a touch sensing schedule.
Description: Allow users write comment about a touch schedule.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE[1].$incremental
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Incremental search
Description: When incremental is on, all the motion instructions within the Search Start [] PR[]
and Search End instructions will be offset by previous search results.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE[1].$master_flag
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Master search flag.
Description:
The operation for a "master search" is similar to the operation of a "non-master search". The only
difference is when doing mastering, the touch sensing software records the contact position for
each search, and it does not compute an offset. These recorded positions are used as the
reference positions for later "non-master" searches to compute an offset.
When this system variable is set to TRUE, it will touch enable touch sensing software to record
the touch position. When set to FALSE, the touch sensing software will use the current touch
position and the reference position previously recorded to compute an offset.
Note that the "simple search" does not use this flag, since it computes an absolute position, no
previous reference positions are needed.
Power Up: Changes take effect immediately.
User Interface Location: In touch schedule under DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE[1].$pattern_typ
Minimum: 0 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Touch sensing search pattern sub-type.
Description: Each search pattern can have several sub_pattern types. For example, fillet/lap
has four sub-types: one dimensional search, two dimensional search, three dimensional search
and two dimensional shift and rotate search.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE [1].$ref_grp
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Touch offset reference group
Description: User sets this value in touch sensing schedule to specify how the offset is
recorded.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
$THSCHEDULE [1].$return_dist
Minimum: 0 Default: 2000 Maximum: 2000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Automatic return distance
Description: User sets this value in touch sensing schedule to specify the auto return distance if
Auto_Return function is enabled.
Power Up: Changes take effect immediately.
User Interface Location:
$THSCHEDULE [1].$re_termtyp
Minimum: 1 Default: 1 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Return motion termination type
Description: Defines the termination type of the search return motion if $THSCHEDULE.
$auto_return is set to TRUE.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: AUTO_RETURN
The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller ArcTool Setup
and Operations Manual
$THSCHEDULE [1].$return_spd
Minimum: 0 Default: 100 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Search motion Return Speed.
Description: Defines the search return speed when $auto_return is set to TRUE.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: AUTO RETURN
The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller ArcTool Setup
and Operations Manual
$THSCHEDULE[1].$search_dist
Minimum: 0 Default: 100 Maximum: 2000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Touch sensing Search Distance.
Description: Allowable traveling distance for a search motion. This system variable defines how
much part deviation are allowed for a search before the touch sensing software posts an error.
Power Up: Changes take effect immediately.
User Interface Location: In touch schedule under DATA screen.
See Also: $PAUSE_NCONT and $CONT_R_NUM
The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller ArcTool Setup
and Operations Manual
$THSCHEDULE [1].$search_pr
Minimum: 1 Default: 32 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Search position register number
Description: Defines a position register that records the contact position during a search motion.
NOTE: This recording takes place regardless of the value of $master_flag, and it only contains
the latest contact position.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE [1].$search_ptn
Minimum: 0 Default: 1 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Touch Sensing Search Pattern.
Description: Touch sensing supports several search patterns. Each pattern is defined in terms
of the geometry of the part in question. A search pattern may comprised of one to fifteen search
motions. Currently, four search patterns are supported:
fillet/lap
v groove
ID/OD
simple search
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: $PATTERN_TYP system variable
The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller ArcTool Setup
and Operations Manual
$THSCHEDULE [1].$search_spd
Minimum: 0 Default: 50 Maximum: 500
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Touch sensor search speed.
Description: This variable defines the search speed for a search schedule. When this particular
schedule is specified in "SEARCH START[] PR[]" instruction, this speed is take effect for all the
motion with the search option.
For example, the TPE instruction, "J P[1] 100% FINE SEARCH[X]", does not use 100% speed
for the search motion. Instead, it uses a search speed defined in a search schedule.
Power Up: Changes take effect immediately.
User Interface Location: In touch schedule under DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$THSCHEDULE [1].$work_frame
Minimum: 0 Default: 1 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Work frame number.
Description: A search motion, "J P[1] 100% FINE SEARCH[Y]", is a motion in the Y direction of
a work frame. This work frame number in the schedule defines which work frame is used for the
search motion.
Power Up: Changes take effect immediately.
User Interface Location: In the touch sensing schedule on the DATA screen.
See Also: The chapter on "Touch Sensing" in the FANUC Robotics SYSTEM R-J3 Controller
ArcTool Setup and Operations Manual
$TIMER STRUCTURE
Name: Program Timer Variable
Description: Time counter which can be started, stopped and reset by the teach pendant
program. See the following for an example.
TIMER[n]=START(/STOP/RESET)
----------------------
$TIMER[n]
Individual fields within this structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TIMER[1].$c omment
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Timer Comment
Description: Text used to describe the use of the timer.
Power Up:
User Interface Location: SYSTEM Variables screen
$TIMER[1].$end_ept_idx
Minimum: 0 Default: 65535 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Reserved for Internal use by FANUC Robotics
Description: Reserved for Internal use by FANUC Robotics
Power Up:
User Interface Location: SYSTEM Variables screen
$TIMER[1].$end_lin_num
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Timer Ending Line Number
Description: Line number where the timer stopped.
Power Up:
User Interface Location: SYSTEM Variables screen
$TIMER[1].$str_ept_idx
Minimum: 0 Default: 65535 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Reserved for Internal use by FANUC Robotics.
Description: Reserved for Internal use by FANUC Robotics.
Power Up:
User Interface Location: SYSTEM Variables screen
$TIMER[1].$str_lin_num
Minimum: 0 Default: 0 Maximum: 65535
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: SHORT
Name: Timer Starting Line Number
Description: The line number where the timer started.
Power Up:
User Interface Location: SYSTEM Variables screen
$TIMER[1].$tid_num
Minimum: 0 Default: 0 Maximum: 255
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: UBYTE
Name: Task ID which uses the program timer
Description: This field stores the task ID which uses the program timer.
Power Up:
User Interface Location: This field is for internal use only.
$TIMER[1].$timer_val
Minimum: 0 Default: 0 Maximum: 0x7fffffff
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Timer Value
Description: Indicates the count, in ms, since the timer started.
Power Up:
User Interface Location: SYSTEM Variables screen
$TMI_CHAN
Minimum: 0 Default: 32 Maximum: 32
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Channels
Description: The number of simultaneous open connections which MOTET can support.
Power Up: Requires a cold start to take effect.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$TMI_DBGLVL
Minimum: 0 Default: 0 Maximum: 5
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug Level
Description: Defines the level of detail of debug messages. A system console is required to
display the debug messages. This should be set to zero. Other values will slow performance.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$TMI_ETHERAD
Minimum: "" Default: " " Maximum : ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: ETHERNET address
Description: This is the ETHERNET board address and should be unique. Ethernet addresses
have the following format: HH:HH:HH:HH:HH:HH where H is a hexadecimal number.
Power Up: Requires a cold start to take effect.
User Interface Location: BMON DIAG screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$TMI_ROUTER
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Router
Description: A string of up to 32 characters defining the network router node name. Although a
value is required for this variable, MOTET Interface does not make use of routers.
Power Up: Requires a cold start to take effect.
User Interface Location: SETUP MOTET screens
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$TMI_SNMASK
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Ethernet Subnet Mask
Description: It is a string with the following format: DDD.DDD.DDD.DDD, where DDD is a three
digit decimal with range 0 <= DDD <= 255, e.g. the default subnet mask for a class C type
network is 255.255.255.0. Please consult your network administrator for the proper Ethernet
subnet mask configuration for your network environment.
Power Up: Change takes effect immediately.
User Interface Location: SYSTEM Variables screen
See Also:FANUC Robotics SYSTEM R-J2 Controller KSL Interface Setup and Operations
Manual, FANUC Robotics SYSTEM R-J3 Controller MOTET Interface Setup and Operations
Manual
$TORQCTRL STRUCTURE
Name: Torque on/off control
Description: Holds information used by torque on/off control function. Individual fields within this
structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TO RQCTRL.$debug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Debug flag
Description: Not used at all.
Power Up: Changes will not effect the robot.
User Interface Location: SYSTEM Variables screen
$TORQCTRL.$grp_stt[1]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Torque group status.
Description: Indicates whether the torque of that group is turned on/off.
0 means torque on ( standard )
1 means torque off ( used for jig mastering )
Used only by torque control function. Should not be changed.
Power Up: If the value is 1 when the controller is turned ON, torque of that group will be turned
on. Otherwise it is left alone.
User Interface Location: SYSTEM Variables screen
$TORQCTRL.$sbr_pam21_ v[1]
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: SBR[axes].PARAM[21] value
Description: Value of SBR[axes].PARAM[21] is stored when torque is tuned off. Used only by
torque control function. Should not be changed.
Power Up: Only used by torque control function. Should not be changed.
User Interface Location: SYSTEM Variables screen
See Also: $SBR[axes].$PARAM[21]
$TORQCTRL.$sv_err_mod [1]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Servo error modification flag
Description: Servo error is cleared if the sv_err_clr[grp] is set to 1. It will be modified to 0 after
servo error is actually turned off. Used only by torque control function. Should not be changed.
Power Up: Only used by torque control function. Should not be changed.
User Interface Location: SYSTEM Variables screen
$TORQCTRL.$sv_err_clr [1]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Servo error clear flag
Description: Servo error clear flag. If set to 1 then servo error is cleared while torqctrl.
SV_ERR_MOD[GRP] is 1. Used only by torque control function. Should not be changed.
Power Up: Only used by torque control function. Should not be changed.
User Interface Location: SYSTEM Variables screen
See Also:
$TP_CURSCRN[4] STRUCTURE
Name: Current Teach Pendant Menu Descriptor
Description: Contains information for the KAREL user to determine which menu is currently
being displayed on the teach pendant.
$TP_CURSCRN[1]: used during normal operations
$TP_CURSCRN[2]: used during normal operations when $TP_QUICKMEN = TRUE
$TP_CURSCRN[3]: used during controlled start
$TP_CURSCRN[4]: used during controlled start when $TP_QUICKMEN = TRUE
Individual fields within this structure are described below.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: $CT_CURSCRN for equivalent information on the CRT/KB
$TP_CURSCRN[1].$scrn_id
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Screen Number of the Current Menu
Description: Some softparts can handle multiple menus (for example the SYSTEM Variables
menu and the KAREL variable menu are the same softpart id). The screen number determines
the current menu of a given softpart.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: FORCE_SPMENU built-in in the FA NUC Robotics SYSTEM R-J3 Controller
application-specific Reference Manual lists the constants for each menu.
$TP_CURSCRN [1].$sp_id
Minimum: 0 Default: 0 Maximum: 0xFFFFFFFF
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Softpart Identifier of the Current Menu
Description: This softpart identifier can be used to determine exactly which softpart menu is
being displayed on the teach pendant screen at any time.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: FORCE_SPMENU built-in in the FA NUC Robotics SYSTEM R-J3 Controller
application-specific Reference Manual which lists the constants for each menu.
$TP_DEFPROG
Minimum: "" Default: " " Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Teach Pendant's Default Program
Description: $TP_DEFPROG identifies the default program name that is used on the teach
pendant.
Power Up: No
User Interface Location: SYSTEM Variables screen, SELECT menu
$TP_DISPLAY
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Teach Pendant Output Display Device
Description: If set to 1, the display which normally goes to the teach pendant will go to terminal
attached to P4. Reserved for Internal use by FANUC Robotics.
Power Up: Yes
User Interface Location: SYSTEM Variables screen
$TP_INST_MSK[2]
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Teach pendant editor instruction mask
Description: Index 1 is used as a mask to turn on selected teach pendant instructions. Index 2
is used as a mask to turn off selected teach pendant instructions. This mask only applies to
instructions which you have loaded as options.
Power Up: No
User Interface Location: SYSTEM Variables screen
$TP_INUSER
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: BOOLEAN
Name: Teach Pendant is in USER Menu
Description: $TP_INUSER indicates the USER menu is displayed on the teach pendant. It is
used in conjunction with $TP_LCKUSER to tell a program when the teach pendant menu has
been locked to the USER menu.
$TP_INUSER automatically is set to TRUE whenever the USER menu is displayed on the teach
pendant.
Power Up: No
User Interface Location: SYSTEM Variables screen
$TP_LCKUSER
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Teach Pendant Lock USER Menu
Description: Setting $TP_LCKUSER = TRUE will allow the KAREL program specified by
$TP_DEFPROG to lock the USER menu on the teach pendant while the program is running.
When the USER menu is locked, all function keys are accessible by the program. However, they
will be blank unless the program writes to them using the TPFUNC predefined FILE variable.
While the USER menu is locked, the MENUS hardkey will not be active. Therefore, the program
has control over which menu is being displayed.
If $TP_LCKUSER is FALSE or the program is paused or aborted, all system-defined function
keys will be displayed and active.
If the USER menu is not being displayed when $TP_LCKUSER is first set to TRUE, the lock
function does not take effect until you select the USER menu on the teach pendant. The value of
$TP_INUSER indicates whether or not the USER menu has been selected. The FORCE_MENU
built-in can be used to force the USER menu to be displayed.
Power Up: No
User Interface Location: SYSTEM Variables screen
$TP_QUICKMEN
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Teach Pendant Quick Menu
Description: Determines whether the user interface displays a quick menu or a full menu
configuration when the MENUS key is pressed. If $TP_QUICKMEN is set to TRUE, less than 16
menus are available.
Power Up:
User Interface Location: SYSTEM Variables screen, FCTN - QUICK/FULL MENUS
$TP_SCREEN
Minimum: "" Default: "tpsc" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Teach Pendant Screen
Description: The name of the current screen on the teach pendant.
Power Up:
User Interface Location: SYSTEM Variables screen
$TP_USERSCRN
Minimum: "" Default: "t_sc" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Teach Pendant Screen While in the USER Menu
Description: The name of the screen which will be activated when the USER menu is selected.
The ACT_SCREEN built-in will set this system variable. It will be reset to "t_sc" when the KAREL
program, which called ACT_SCREEN, aborts.
Power Up:
User Interface Location: SYSTEM Variables screen
See Also: ACT_SCREEN built-in in the FANU C Robotics SYSTEM R-J3 Controller applicationspecific
Reference Manual.
$TP_USESTAT
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Teach Pendant Status Line in USER Menu
Description: Setting $TP_USESTAT = TRUE will allow the KAREL program specified by
$TP_DEFPROG to control the status line in the USER menu on the teach pendant while the
program is running. The status line will be blank unless the program writes to it using the
TPSTATUS predefined FILE variable.
If $TP_USESTAT is FALSE, or the program is paused or aborted, the system-defined status line
will be displayed and updated.
Power Up: No
User Interface Location: SYSTEM Variables screen
$TP_WATCHDOG
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Teach pendant communication watch dog switch
Description: This system variable is not currently used. This system variable enables teach
pendant communication watch dog functionality. This system variable is for future use.
Power Up: This is referred only once in a power up sequence.
User Interface Location: System Variables screen
$TPE_DETAIL
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TPP+ Create DETAIL Menu Required
Description: If $TPE_DETAIL is 0, the system does not require that you display the DETAIL
screen when a program is created. If set to 1, the system requires that you must perform any
DETAIL setup functions required for your application. For example, if line tracking is loaded as an
option, you are required to display this screen in order for the line tracking program to work
correctly.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen
$TPP_MON STRUCTURE
Name: TPP monitor
Description: This system variable is used to TPP monitor function.
Power Up: Takes effect after the controller is turned ON.
User Interface Location: SYSTEM Variables screen
$ TPP_MON.$global_mt
Minimum: 0 Default: 0 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Global monitor
Description: This system variable, user can select the two type mode at cold start for system
monitor.
1: If monitor is executing before power off, system deletes the monitor at cold start.
2: If monitor is executing before power off, system starts monitoring at cold start automatically.
Power Up: Takes effect after the controller is turned ON.
User Interface Location: SYSTEM Variables screen
$TPP_MON.$gmon_tid
Minimum: 0 Default: 0 Maximum: 16
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Global monitor task id
Description: For internal use only. Do not modify this system variable. The task number of
global monitor.
Power Up: Takes effect after the controller is turned ON
User Interface Location: Do not modify this system variable.
$T PP_MON.$local_mt
Minimum: 1 Default: 1 Maximum: 10
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Local monitor
Description: This system variable, user can select the two type mode when program is PAUSED
for program monitor.
1:Stop the monitoring at program is PAUSED.
2:Keep on monitoring even if program is PAUSED.
Power Up: Takes effect after the controller is turned ON.
User Interface Location: SYSTEM Variables screen
$TP P_MON.$mon_num
Minimum: 1 Default: 50 Maximum: LIM_MONNUM_C
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: Number of monitors
Description: For internal use only. Do not modify this system variable.
Power Up: Takes effect after the controller is turned ON.
User Interface Location: SYSTEM Variables screen
$TPP_MON.$sysmon_adr
Minimum: 0 Default: 0 Maximum: 0
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: INTEGER
Name: System monitor address
Description: For internal use only. Do not modify this system variable.
Power Up: Takes effect after the controller is turned ON
User Interface Location: SYSTEM Variables screen SYSTEM Variables screen
$TSR_GRP STRUCTURE
Name: Time-optimal Control Variables
Description: Set the torque curve and the speed curve of each motor of each axis. It is used for
time-optimal control and cannot be changed. Individual fields within this structure are described
below.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$ma_brk_mgn[ 9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Acceleration Break Margin
Description: Defines the acceleration torque safety margin at the break in the torque vs. velocity
curve.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$ma_grav_mg n[9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Acceleration Gravity Margin
Description: Defines a scale of the acceleration load torque due to the effect of gravity
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$ma_load_tr q[9]
Minimum: -100000.0 Default: 0.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Acceleration Torque due to Static Load
Description: Defines the acceleration torque on the motor due to a static load. Units are Kg-cm.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$md_load_tr q[9]
Minimum: -100000.0 Default: 0.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Deceleration Torque due to Static Load
Description: Defines the deceleration torque on the motor due to a static load. Unit is Kg-cm.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$ma_stal_mg n[9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Acceleration Stall Margin
Description: Defines the motor acceleration torque safety margin at stall or zero velocity.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mc_acc_mgn[ 9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian Motor Acceleration Margin
Description: Defines a scale factor to be used with linear motion accelerations.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mc_brk_mgn[ 9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian Motor Torque Break Margin
Description: Defines the motor torque safety margin for cartesian motions at the break in the
torque vs. velocity curve.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mc_stal_mg n[9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Cartesian Motor Stall Margin
Description: Defines the motor torque safety margin for cartesian motions at stall or zero
velocity.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$md_brk_mgn[ 9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Deceleration Break Margin
Description: Defines the deceleration torque safety margin at the break in the torque vs. velocity
curve.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$md_grav_mg n[9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Deceleration Gravity Margin
Description: Defines a scale of the deceleration load torque due to the effect of gravity
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$md_stal_mg n[9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Deceleration Stall Margin
Description: Defines the motor deceleration torque safety margin at stall or zero velocity.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$min_c_id_e1
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Mincycle Version ID extra_1
Description: Reserved for Internal use by FANUC Robotics.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$min_c_id_e2
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Mincycle Version ID extra_2
Description: Reserved for Internal use by FANUC Robotics.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$min_c_id_e3
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Mincycle Version ID extra_3
Description: Reserved for Internal use by FANUC Robotics.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$min_cyc_id
Minimum: "" Default: "12345678" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: Mincycle Version ID
Description: Used to determine the mincycle parameter version.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mj_acc_mgn[ 9]
Minimum: -100000.0 Default: 1.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Joint Filter Acceleration Margin
Description: Defines a scale factor for use with non-filter acceleration.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mr_brk_trq[ 9]
Minimum: -100000.0 Default: 2.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Torque at Break in Torque vs Velocity Curve
Description: Defines the motor torque available at the break in the motor torque vs velocity
curve. Unit is Kg-cm.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mr_brk_vel[ 9]
Minimum: -100000.0 Default: 2.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Motor Velocity at Break in Torque vs Velocity Curve
Description: Defines the motor velocity at the break in the motor torque vs velocity curve. Unit is
radian/sec.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mr_max_trq[ 9]
Minimum: -100000.0 Default: 2.0 Maximum: 1000000.
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Maximum Motor Torque
Description: This variables is used to set the maximum allowable motor torque for each axis.
This maximum torque is used to determine the maximum acceleration. Unit is Kg-cm.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mr_nold_ve l[9]
Minimum: -100000.0 Default: 5.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Maximum Motor Velocity at No Load
Description: Defines the maximum motor velocity achievable when no load is seen at the motor.
Unit is radian/sec.
Power Up:
User Interface Location: SYSTEM Variables screen
$TSR_GRP[1].$mr_stal_tr q[9]
Minimum: -100000.0 Default: 2.0 Maximum: 100000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Maximum Motor Torque at Zero Velocity
Description: This variable defines the maximum available motor torque at stall or zero velocity.
Unit is Kg-cm.
Power Up:
User Interface Location: SYSTEM Variables screen
$UALRM_MSG[10]
Minimum: "" Default: "" Maximum: ""
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: STRING
Name: User Alarm Message
Description: This system variable holds alarm messages for user alarm (INTP-213 UALM[i]).
A user alarm occurs when UALM[i] command in the teach pendant program is executed and the
alarm message stored in $UALRM_MSG[i] is displayed.
Default length of this system variables is 10. You can increase or decrease the length of this
system variable during a Controlled Start.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen, ALARM screen
$UALRM_SEV[10]
Minimum: 0 Default: 6 Maximum: 255
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BYTE
Name: User alarm severity
Description: This variable has 20 arrays and this number is the same with the user alarm one.
Each value designates the severity of each user alarm.
This default value is 6. This means STOP.L of error severity. You can set each severity under the
following specification.
WARN 0 STOP.L 6 STOP.G 38
ABORT.L 11 ABORT.G 43
Power Up: Changes to this system variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$UNDO_CFG STRUCTURE
Name: Undo Configuration Structure
Description: This structure contains variables which allow you to undo the last operation in the
TPP editor. Individual fields are described below.
Power Up: Power up is required after changing these variables.
User Interface Location: SYSTEM variable screen.
$UNDO_CFG.$undo_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Undo Function Enable/Disable Switch
Description: 1: Enable undo function
0: Disable undo function
Power Up: Power up is required after changing this variable.
User Interface Location: SYSTEM variable screen
$UNDO_CFG.$warn_enb
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Warning for undo enable/disable switch
Description: This variable allows you to turn on or turn off a warning message telling you that
the operation you about to perform can not be undone. The default is 1, warning box will be
displayed.
Power Up: Power up is required after changing this variable.
User Interface Location: SYSTEM variable screen
$USEUFRAME
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: User Frame Feature Enable
Description: Enables the user frame feature if the option is installed. This is not a standard
option. With the user frame feature enabled, you are prompted for user frame related input in the
editor. Also, the user frame offsets will be applied during program execution.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen, Teach Pendant and KAREL Editor
See Also: $MNUFRAME, $MNUFRAMENUM
$USRTOL_ENB
Minimum: 0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: User Tolerance Enable
Description: If this flag is TRUE, the check for User Definable Tolerance function is executed
when program is resumed.
Power Up: Changes to this variable take effect immediately
User Interface Location: SYSTEM Variables screen
$USRTOL_MENU
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: NO Program: NO GET/SET_VAR: NO Data Type: BOOLEAN
Name: User Tolerance Menu
Description: When the pop-up menu is displayed, this flag is TRUE. This flag is used to check
whether the pop up menu is displayed.
Power Up: Changes to this variable take effect immediately
User Interface Location: This is internal data.
$USRTOL_GRP[5] STRUCTURE
Name: User Tolerance Group Structure
Description: This variable defines the user tolerance value of each motion group. When the
paused program is resumed, and if the distance between the robot position and the stop position
is distant from the user defined tolerance in this group, a warning message will be posted on the
teach pendant.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen.
$USRTOL_GRP[1].$enable
Minimum: 0.0 Default: 1 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: User Tolerance Enable flag
Description: If this flag is TRUE (1), the check for user definable tolerance function is executed
when the program is resumed.
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen.
$USRTOL_GRP[1].$dist_tol
Minimum: 0.1 Default: 250 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Position xyz tolerance
Description: Distance tolerance between robot current TCP and stop position. (Units in mm.)
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen.
$USRTOL_GRP[1].$ornt_tol
Minimum: 0.1 Default: 20 Maximum: 80
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Position xyz tolerance
Description: Orientation tolerance between robot current TCP and stop position. (Units in
degrees.)
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen.
$USRTOL_GRP[1].$raux_tol
Minimum: 0.1 Default: 20 Maximum: 80
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Rotary joint axes tolerance
Description: The joint angle tolerance between current robot position and the stop position for
rotary axes (including aux. axes).
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen.
$USRTOL_GRP[1].$taux_tol
Minimum: 0.1 Default: 250 Maximum: 1000
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Translational axes tolerance
Description: The distance tolerance between current robot position and the stop position for
translational axes (including aux. axes).
Power Up: Changes take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_MORGRP STRUCTURE
Name: AccuPath Status Variable Structure
Description: This is the AccuPath status variable. Refer to the descriptions of the individual
fields that follow.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
$VC_MORGRP[1] .$hist_cdist[1-20]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Maintain CD value indicator
Description: If the motion option CDy is used and the system can maintain y(mm) corner
distance, it is TRUE; otherwise, it is FALSE. If the motion option CDy is not used, it is TRUE. The
history buffer is updated if it is set to FALSE.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_index, $hist_progid[], $hist_lineno[],
$VC_MORGRP[1] .$hist_cspeed[1-20]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Constant corner speed indicator
Description: It is TRUE if constant corner speed can be maintained; otherwise, it is set to
FALSE. It is TRUE if the location travel time is greater than orientation travel time; otherwise, it is
set to FALSE. The history buffer is updated if this is set to FALSE.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_index, $hist_progid[], $hist_lineno[],
$VC_MORGRP[1] .$hist_index
Minimum: 0 Default: 0 Maximum: 20
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Current index of history buffer
Description: All $hist_XXXX variables are used together as a history buffer to inform the user
concerning various warning status of AccuPath that occurs during program motion. It is
implemented as a ring buffer. The total size is 20. The value of $hist_index points to the latest
recorded data. Data is recorded only when certain events occur, such as when it is a short
segment, when corner speed cannot be maintained, when corner distance specified cannot be
maintained, and so forth. Refer to the individual $hist_XXXX variables for details on warning
events.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_progid[], $hist_lineno[],$hist_short[], $hist_cspeed[], $hist_cdist[],
$hist_orndom[]
$VC_MORGRP[1] .$hist_lineno[1-20]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program line number field of history buffer
Description: When the history buffer is updated, this field records the current program line
number.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_index, $hist_progid[],$hist_short[], $hist_cspeed[], $hist_cdist[], $hist_orndom[]
$VC_MORGRP[1] .$hist_orndom[1-20]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Orientation dominant indicator
Description: It is TRUE if orientation travel time is greater than location travel time, else FALSE.
History buffer is updated if TRUE.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_index, $hist_progid[], $hist_lineno[],
$VC_MORGRP[1] .$hist_progid[1-20]
Minimum: 0 Default: 0 Maximum: -1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Program ID field of history buffer
Description: When the history buffer is updated, this field records the current program ID. The
program ID is a unique number assigned internally to each program.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_index, $hist_lineno[],$hist_short[], $hist_cspeed[], $hist_cdist[], $hist_orndom[]
$VC_MORGRP[1] .$hist_short[1-20]
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Short segment indicator
Description: It is TRUE if short segment; otherwise, it is set to FALSE. The history buffer is
updated if it is set to TRUE.
Power Up: System updates dynamically. It is status data and not setup data.
User Interface Location: SYSTEM Variables screen.
See Also: $hist_index, $hist_progid[], $hist_lineno[],
$VC_MORGRP[1] .$speed
Minimum: 0.0 Default: 0.0 Maximum: 10000.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: TCP speed information
Description: TCP speed in mm/sec is updated dynamically when AccuPath is active.
Power Up: System updates the current command TCP speed dynamically.
User Interface Location: SYSTEM Variables screen.
$VC_PARAMGRP STRUCTURE
Name: AccuPath Parameter Group Variable Structure
Description: This is the AccuPath setup parameter, which is robot or application tool dependent.
Refer to the descriptions of the individual fields that follow.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_PARAMGRP[1].$cnstnt_spd
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Constant speed switch
Description: This variable controls the use of constant speed feature for CNT100 termtype
motion. When the variable is FALSE, the system will not maintain constant speed when moving
around path corner. When the variable is TRUE, the system will maintain constant speed when
moving around a path corner by default, but might slow down if it is not possible. In order to do
so, the corner distance might be increased compared to the case of when $cnstnt_spd = FALSE.
This variable is set by the application tool. It is set to TRUE for the P-200 robot.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_PARAMGRP[1].$dcdh_ratio
Minimum: 0.0 Default: 1.0 Maximum: 1.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Corner distance ratio
Description: Internal use only. This variable is set by the application tool. It is used when
$shortmo_imp is TRUE.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_PARAMGRP[1].$hist_spdlim
Minimum: 0 Default: 100 Maximum: 100
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Threshold of speed limit
Description: Internal use only. This variable is set by the application tool. When the planned
speed is slower than the rate of program speed specified by this variable, system detect speed
slowdown and history buffer in $VC_MORGRP[] is updated.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_PARAM GRP[1].$shortmo_imp
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Short motion improvement switch
Description: Internal use only. This variable is set by the application tool. Default: FALSE. If
TRUE, short motion is improved when half distance rule is applied.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_PARAM GRP[1].$shrt_ratio
Minimum: 0.0 Default: 1.0 Maximum: 1.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: Short ratio
Description: Internal use only. This variable is set by the application tool. It is used when
$shortmo_imp is TRUE.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variables screen.
$VC_PARAM GRP[1].$warnmessenb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Warning message enable switch
Description: FALSE: Warning message for AccuPath is not displayed. When the variable is
TRUE, the warning message for AccuPath is displayed. This has to be set to FALSE during the
production cycle.
Power Up: Changes to this variable take effect immediately.
User Interface Location: SYSTEM Variable screen
$VDATE
Minimum: "" Default: "12/03/95" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Software Release Date
Description: Displays the application software release date.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$VERSION
Minimum: "" Default: "V4.2038 12/03/95" Maximum: ""
KCL/Data: RO Program: RO GET/SET_VAR: RO Data Type: STRING
Name: Software Build Version
Description: Displays the software build version and build date.
Power Up: This variable cannot be changed.
User Interface Location: STATUS Version IDs screen
$VISIONMOUT
Minimum: 0 Default: 3000 Maximum: 0x7FFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: Vision Timeout
Description: Not currently used.
Power Up:
User Interface Location: SYSTEM Variables screen
$WAITTMOUT
Minimum: 0 Default: 3000 Maximum: 0x7FFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: TIMEOUT Time for WAIT instructions
Description: If a WAIT instruction includes a TIMEOUT clause, this specifies the time. Units are
in 100ths of a second.
Power Up:
User Interface Location: SYSTEM Variables screen
$WAITRELEASE
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: WAIT release
Description: If a program is waiting for an input or timer to expire, setting this variable to TRUE
will cause the program to move to the next statement without satisfying the wait condition.
Power Up:
User Interface Location: FCTN WAIT RELEASE
$WVWRIST.$deb ug
Minimum: 0x80000000 Default: 0 Maximum: 0x7FFFFFFF
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: INTEGER
Name: debug
Description: Internal use only.
Power Up: Changes to this system variable take effect immediately.
User Interface Location:
$WVWRIST.$run_ang
Minimum: -90.0 Default: 10.0 Maximum: 90.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: run_ang
Description: System returns the actual angle between the TOOL Z-X plane and the TOOL ZPATH
during execution.
Power Up: The change to this system variable takes effect immediately.
User Interface Location:
$WVWRIST.$tol_ang
Minimum: 0.0 Default: 10.0 Maximum: 90.0
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: REAL
Name: tol_ang
Description: This is the upper limit for $run_ang. When actual run_ang reaches its limit value,
the robot will stop executing and display the error message, "run_ang exceeds tol_ang".
Power Up: The change to this system variable takes effect immediately.
User Interface Location:
See Also: $run_ang definition.
$WVWRIST.$wrist_enb
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: wrist_enb
Description: 1: wrist axis weaving is enabled.
0: wrist axis weaving is disabled. (default)
Power Up: The change to this system variable takes effect immediately.
User Interface Location:
See Also: Wrist Axes Weaving
$WVWRIST.$wst_accel1
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Wrist Acceleration 1
Description: Defines acceleration time for wrist axes motion during wrist axes weave operation.
Power Up: Changes take effect after power up.
$WVWRIST.$wst_accel2
Minimum: 0 Default: 0 Maximum: 1
KCL/Data: RW Program: RW GET/SET_VAR: RW Data Type: BOOLEAN
Name: Wrist Acceleration 2
Description: Defines acceleration 2 time for wrist axes motion during wrist axes weave
operation.
Power Up: Changes take effect after power up.